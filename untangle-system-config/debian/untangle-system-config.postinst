#! /bin/bash

. /usr/share/debconf/confmodule

APT_CACHE_DIR="/var/cache/apt/archives"

/usr/share/untangle-system-config/syslog-maxsize-conf.sh /etc/rsyslog.conf /etc/rsyslog.d/* > /dev/null
if [ -f /var/run/rsyslogd.pid ] ; then
    deb-systemd-invoke restart rsyslog
fi

# only upon first install of this package
if [ $1 = "configure" ] && [ -z "$2" ] ; then
  # reconfigure debconf
  tmpFile=`mktemp`
  awk '{if ($0 ~ /Name: debconf\/priority/) { do_priority=1; print $0 } else if (do_priority == 1) { if ($0 ~ /Value/) { do_priority=0; print "Value: critical" } else print $0; } else if ($0 ~ /Name: debconf\/frontend/) { do_frontend=1; print $0 } else if (do_frontend == 1) { if ($0 ~ /Value/) { do_frontend=0; print "Value: Noninteractive" } else print $0 } else print $0}' /var/cache/debconf/config.dat > $tmpFile
  mv $tmpFile /var/cache/debconf/config.dat

  # load factory defaults
  bash /usr/share/untangle/bin/ut-factory-defaults

  rm /etc/resolv.conf
fi

# Have cron.daily run earlier in the day, at a random time between 1:00 and 2:00
CRONTAB_FILE=/etc/crontab
if [ -f "${CRONTAB_FILE}" ] ; then
    let "ranmin = $RANDOM % 60"
    grep -sq "^25 6" ${CRONTAB_FILE} && sed -i -e "s|^25 6|${ranmin} 1|" ${CRONTAB_FILE}
fi

# Fix up boxes so they don't fsck after 6 months.  Now only limit is 32 reboots.
rootdev=`awk '/^\/.* \/ / {print $1}' /etc/mtab`
if [ -z "$rootdev" -a -f /etc/fstab ]; then
    # Special handling for install-time when /etc/mtab isn't valid
    rootdev=`awk '/ \/ / {print $1}' /etc/fstab`
fi
if [ -n "$rootdev" ]; then
    tune2fs -i 0 $rootdev
fi

# Disable Debian version banner in SSH for compliance
# This is in case SSH is enabled and they run a PCI scan
if [ -z "`grep DebianBanner /etc/ssh/sshd_config`" ] ; then
    echo "DebianBanner no" >> /etc/ssh/sshd_config
else
    sed -e "s/.*DebianBanner.*/DebianBanner no/" -i /etc/ssh/sshd_config
fi

# Allow root login in SSH 
if [ -z "`grep PermitRootLogin /etc/ssh/sshd_config`" ] ; then
    echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
else
    sed -e "s/.*PermitRootLogin.*/PermitRootLogin yes/" -i /etc/ssh/sshd_config
fi

if [ -f /etc/dhcp/dhclient-exit-hooks.d/ddclient  ] ; then
    #change exit 0 to return to avoid dhclient-exit-hooks.d shells stop in middle
    sed -e "s/exit 0/return/" -i /etc/dhcp/dhclient-exit-hooks.d/ddclient
fi

# Build certs list
which update-ca-certificates > /dev/null && update-ca-certificates    

# Disable irqbalance spamming (https://bugs.launchpad.net/ubuntu/+source/irqbalance/+bug/1321425)
if [ -f /etc/default/irqbalance ] ; then
    if [ -z "`grep OPTIONS /etc/default/irqbalance`" ] ; then
        echo 'OPTIONS="--hintpolicy=ignore"' >> /etc/default/irqbalance
    else
        sed -e 's/.*OPTIONS.*/OPTIONS="--hintpolicy=ignore"/' -i /etc/default/irqbalance
    fi
fi

# 14.0 4.9.0-6 to 4.9.0-7 auto-switch
if uname -r | grep -q 4.9.0-6-untangle ; then
    if cat /proc/cmdline | grep -q 'video-safe-mode' ; then
        echo "Switching to 4.9.0-7 video safe mode"
        grub-set-default 1
    elif cat /proc/cmdline | grep -q 'vga=791' ; then
        echo "Switching to 4.9.0-7 kern video mode"
        grub-set-default 2
    elif cat /proc/cmdline | grep -q 'noapic' ; then
        echo "Switching to 4.9.0-7 hardware safe mode"
        grub-set-default 3
    else
        echo "Switching to 4.9.0-7"
        grub-set-default 0
    fi
fi

# 14.2 4.9.0-7/4.9.0-8 to 4.9.0-9 auto-switch
latest="4.9.0-9"
if uname -r | grep -qE '4.9.0-[78]-untangle' ; then
    case "$(cat /proc/cmdline)" in 
        *video-safe-mode*)
            echo "Switching to ${latest} video safe mode"
            grub-set-default 1 ;;
	*vga=791*)
	    echo "Switching to ${latest} kern video mode"
	    grub-set-default 2 ;;
	*noapic*)
            echo "Switching to ${latest} hardware safe mode"
            grub-set-default 3 ;;
	*)
            echo "Switching to ${latest}"
            grub-set-default 0 ;;
    esac
fi

# 14.3 4.9.0-9 to 4.9.0-11 auto-switch
latest="4.9.0-11"
if uname -r | grep -qE '4.9.0-9-untangle' ; then
    case "$(cat /proc/cmdline)" in 
        *video-safe-mode*)
            echo "Switching to ${latest} video safe mode"
            grub-set-default 1 ;;
	*vga=791*)
	    echo "Switching to ${latest} kern video mode"
	    grub-set-default 2 ;;
	*noapic*)
            echo "Switching to ${latest} hardware safe mode"
            grub-set-default 3 ;;
	*)
            echo "Switching to ${latest}"
            grub-set-default 0 ;;
    esac
fi

exit 0
