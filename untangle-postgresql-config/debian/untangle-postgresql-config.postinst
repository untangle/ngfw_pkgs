#! /bin/bash

PG_VERSION="11.0"
PG_ETC_DIR="/etc/postgresql/${PG_VERSION}/main"
PG_VAR_DIR="/var/lib/postgresql/${PG_VERSION}"
PG_BIN_DIR="/usr/lib/postgresql/${PG_VERSION}/bin"
PG_MAIN_DIR="/var/lib/postgresql/${PG_VERSION}/main"
PG_CONF="${PG_ETC_DIR}/postgresql.conf"
PG_HBA="${PG_ETC_DIR}/pg_hba.conf"

createDB() {
  # re-create cluster with older cluster's locale (#12847)
  locale=${1:-"en_US.UTF-8"}
  echo -e "\n[`date +%Y-%m-%dT%H:%m`] ... using locale '$locale'\n"
  deb-systemd-invoke stop postgresql
  rm -fr ${PG_VAR_DIR}
  mkdir -p ${PG_VAR_DIR}/main
  chown -R postgres:postgres ${PG_VAR_DIR}
  su -c "${PG_BIN_DIR}/initdb --encoding=utf8 --locale=${locale} -D ${PG_VAR_DIR}/main" postgres
}

if [ -z "$2" ] ; then
    # this is a new install
    
    # enable en_US.UTF-8
    sed -i -e "s/.*en_US.UTF-8 UTF-8.*/en_US.UTF-8 UTF-8/" /etc/locale.gen
    locale-gen

    # create en_US.UTF-8 regardless of system locale
    createDB "en_US.UTF-8"

elif [ ! -d "${PG_VAR_DIR}/main/base" ] ; then 
    # database does not exist for whatever reason, just create it

    # enable en_US.UTF-8
    sed -i -e "s/.*en_US.UTF-8 UTF-8.*/en_US.UTF-8 UTF-8/" /etc/locale.gen
    locale-gen

    # create en_US.UTF-8 regardless of system locale
    createDB "en_US.UTF-8"
fi

DATE=$(date '+%Y%m%d%H%M%S')

# 15.1 conversion: migrate from 9.6 to 11.0 (NGFW-12624)
/usr/share/untangle/bin/postgresql-upgrade-cluster.sh 9.6 $PG_VERSION

# disable postgres at startup (report app will start as necessary)
deb-systemd-helper disable postgresql.service

# backup original conf files
cp -f $PG_CONF ${PG_CONF}.$DATE
cp -f $PG_HBA ${PG_HBA}.$DATE

# configure pg_hba.conf
sed -i -e 's/peer$/trust/' $PG_HBA
sed -i -e "s/\#\(local.*all.*all.*trust\)/\1/" $PG_HBA
sed -i -e "s/\#\(host.*all.*all.*127.0.0.1.*255.255.255.255.*trust\)/\1/" $PG_HBA
sed -i -e 's/\(local.*all.*postgres.*\)\(ident.*\)/\1trust/'  $PG_HBA
sed -i -e 's/\(local.*all.*all.*\)\(ident.*\)/\1trust/'  $PG_HBA
sed -i -e 's/\(host.*all.*all.*127.0.0.1\(\/32\|[ \t]\).*\)\(md5\)/\1trust/'  $PG_HBA
sed -i -e 's/\(host.*all.*all.*::1\(\/128\|[ \t]\).*\)\(md5\)/\1trust/'  $PG_HBA

# configure postgresql.conf
# ... enable TCP from local host
sed -i -e "s/.*port.*=.*/port=5432/" $PG_CONF
sed -i -e "s/.*virtual_host.*=.*/virtual_host='127.0.0.1'/" $PG_CONF
sed -i -e "s/.*tcpip_socket.*=.*/tcpip_socket = true/" $PG_CONF
# ... turn of backslash warnings (Bug #7810)
sed -i -e "s/.*escape_string_warning.*=.*/escape_string_warning = off/" $PG_CONF
# ... Performance tuning
# ... http://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server
# ... we can gain massive speedups in writes by turning off synchronous commits.
sed -i -e "s/.*synchronous_commit.*=.*/synchronous_commit = off/" $PG_CONF
# ... increase checkpoint_segments 
sed -i -e "s/.*checkpoint_segments.*=.*/checkpoint_segments = 100/" $PG_CONF
sed -i -e "s/.*autovacuum_max_workers.*=.*/autovacuum_max_workers = 1/" $PG_CONF
# ... log autovacuum
sed -i -e "s/.*log_autovacuum_min_duration.*=.*/log_autovacuum_min_duration = 0/" $PG_CONF
# ... decrease auto-vacuum since tables are now partitioned vacuuming
# is hardly required since rows are never removed only updated
sed -i -e "s/.*autovacuum_vacuum_scale_factor.*=.*/autovacuum_vacuum_scale_factor = 10/" $PG_CONF
# ... decrease auto-analyze 
sed -i -e "s/.*autovacuum_analyze_scale_factor.*=.*/autovacuum_analyze_scale_factor = .5/" $PG_CONF
# ... increase max_lock_per_transaction (NGFW-10691)
sed -i -e "s/.*max_locks_per_transaction.*=.*/max_locks_per_transaction = 128/" $PG_CONF

# if the unsafe flag is set, disable fsync
if [ -f /usr/share/untangle/conf/unsafe-postgres-flag ] ; then
    sed -i -e "s/.*fsync.*=.*/fsync = off/" $PG_CONF
fi

# configure hw parameters
if [ -x /etc/untangle/startup.d/10postgres ] ; then
    /etc/untangle/startup.d/10postgres
fi

exit 0
