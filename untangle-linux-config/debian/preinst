#!/bin/bash

## functions
first_disk() {
  lsblk --path --list --noheadings | awk '{print $1 ; exit}'
}

set_debconf_grub_install_disk() {
  echo "set grub-pc/install_devices $1" | debconf-communicate
}

# Compare passed install disk to existing disks
# If match, return 1, otherwise return 0 for no match
disk_found() {
   install_disk=$1
   found=0

   while read -r disk; do
     if [ "$disk" = "$install_disk" ]; then
       found=1
     fi
   done < <(lsblk --path --list --noheadings | awk '{print $1}')

   return $found
}

## main

# we don't deal with grub on arm* at all
uname -m | grep -qE '^arm' && exit 0

grub_install_device=$(echo "get grub-pc/install_devices" | debconf-communicate | awk '{print $2}')

case "$grub_install_device" in
  "")
    # NGFW-13661: if the current upgrade path includes a new grub
    # version, an empty install device will fail the entire run.
    # This only happens for installs based on disk images (OVA, qcow2,
    # etc), as those performed with d-i correctly seed this debconf
    # value.
    # As we can't let the entire run fail, we choose the first disk.
    set_debconf_grub_install_disk $(first_disk)
    ;;
  *VBOX_HARDDISK*)
    # we're on virtualbox, check if we need to fix #12857
    if [ ! -e "$grub_install_device" ] ; then
      # the install device is gone, so the grub update will fail:
      # let's also choose the first disk.
      set_debconf_grub_install_disk $(first_disk)
    fi
    ;;
  *ata-VMware_Virtual_SATA_Hard_Drive*)
    # Untangle SATA drive appliance
    if [ ! -e "$grub_install_device" ] ; then
      # the install device is gone, so the grub update will fail:
      # let's also choose the first disk.
      set_debconf_grub_install_disk $(first_disk)
    fi
    ;;
  *nvme-VMware_Virtual_NVMe_Disk_VMWare_NVME*)
    # Untangle NVMe drive appliance
    if [ ! -e "$grub_install_device" ] ; then
      # the install device is gone, so the grub update will fail:
      # let's also choose the first disk.
      set_debconf_grub_install_disk $(first_disk)
    fi
    ;;
esac

# If install disk doesn't match actual disk, set to first disk
# This can occur under some circumstances where the install disk
# was set to a bad device name like /dev/nvme0n1p
disk_found $grub_install_device
if [ $? -eq 0 ] ; then
  set_debconf_grub_install_disk $(first_disk)
fi

exit 0
