/**
 * policy options
 * value: translation_key
 */

export const policyTypes = {
  SPECIFIC_WAN: 'policy_type_specific',
  BEST_OF: 'policy_type_best_of',
  BALANCE: 'policy_type_balance',
}

export const policyBestOfMetrics = {
  LOWEST_LATENCY: 'policy_metrics_lowest_latency',
  HIGHEST_AVAILABLE_BANDWIDTH: 'policy_metrics_highest_available_bandwidth',
  LOWEST_JITTER: 'policy_metrics_lowest_jitter',
  LOWEST_PACKET_LOSS: 'policy_metrics_lowest_packet_loss',
}

export const policyBalanceAlgorithms = {
  WEIGHTED: 'policy_balance_weighted',
  LATENCY: 'policy_balance_latency',
  AVAILABLE_BANDWIDTH: 'policy_balance_available_bandwidth',
  BANDWIDTH: 'policy_balance_bandwidth',
}

export const metricOperators = {
  '>': 'greater_than',
  '<': 'less_than',
  '>=': 'greater_or_equal',
  '<=': 'less_or_equal',
}

export const criteriaTypes = {
  ALWAYS_UP: 'always_up',
  ATTRIBUTE: 'attribute',
  METRIC: 'metric',
  CONNECTIVITY: 'connectivity_test',
}

export const metricOperatorOptions = Object.entries(metricOperators).map(([k, v]) => ({ text: v, value: k }))
