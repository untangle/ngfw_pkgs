/**
 * A common file to define types for some of the objects, following JSDoc specs
 * It helps with better documenting function arguments and IDE code intellisense
 */

/**
 * @typedef  {Object} View
 * @property {String} id - the view id as defined in `constants`
 * @property {String} category - the view category as defined in `constants`
 * @property {String} name - the view locale for it's name shown in navigations
 * @property {String} component - the view component which renders it's reports
 * @property {Array<String>} reports - the reports id's associated with the view
 */

/**
 * @typedef  {Object} Report
 * @property {String} title - The report title locale key
 * @property {String} icon - The icon shown in the menus
 * @property {ReportQuery} query - Report query that gets sent upon data api request
 * @property {Object} rendering - Rendering options for the charts as expected by highcharts
 */

/**
 * @typedef  {Object} ReportQuery
 * @property {String} type - The query type ['CATEGORIES', 'CATEGORIES_SERIES', ...]
 * @property {String} table - A single table or join statement on the `tables`
 * @property {Array<String>} tables - [optional] Tables on which the above join is made
 * @property {QueryCategory} queryCategories - The table fields that affects the query
 * @property {Object} querySeries - [optional] `CATEGORIES_SERIES` specific options
 * @property {Array<Object>} columnDisambiguation - [optional] columns(fields) renames in the UI
 * @property {Array<QueryCondition>} conditions - [optional] Default conditions applied to the query, equivalent to a `WHERE` clause
 * @property {Array<QueryCondition>} userConditions - [optional] Same as conditions but dynamically computed/added through UI
 */

/**
 * @typedef  {Object} QueryCategory
 * @property {String} groupColumn - Grouping field for the query
 * @property {String} aggregationFunction - How data gets computed, e.g. `count`, `sum`
 * @property {ReportQuery} aggregationValue - On which value aggregation is applied
 * @property {Object} limit - a limit
 */

/**
 * @typedef  {Object} QueryCondition
 * @property {String} column - The table field
 * @property {String} operator - The operator, e.g. `EQ` (equals), `NE` (not equals)
 * @property {String|Number|Boolean} value - The value of the condition
 */
