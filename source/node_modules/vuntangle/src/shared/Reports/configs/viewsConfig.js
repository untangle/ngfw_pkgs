import { Category, View, Report } from './constants'

/**
 * Views configurations
 */
const views = Object.freeze({
  // Bandwidth
  [View.BandwidthClients]: {
    id: View.BandwidthClients,
    category: Category.Bandwidth,
    name: 'clients',
    component: 'GenericChart',
    reports: [Report.ClientsBandwidthByTime, Report.ClientsByBandwidth],
  },

  [View.BandwidthServerPorts]: {
    id: View.BandwidthServerPorts,
    category: Category.Bandwidth,
    name: 'server_ports',
    component: 'GenericChart',
    reports: [Report.ServerPortsBandwidthByTime, Report.ServerPortsByBandwidth],
  },

  [View.BandwidthApplications]: {
    id: View.BandwidthApplications,
    category: Category.Bandwidth,
    name: 'applications',
    component: 'GenericChart',
    reports: [Report.ApplicationsBandwidthByTime, Report.ApplicationsByBandwidth],
  },

  // WAN Performance
  [View.WanPerformanceUsage]: {
    id: View.WanPerformanceUsage,
    category: Category.WanPerformance,
    name: 'interface_usage',
    component: 'GenericChart',
    reports: [Report.WanPerformanceUsage],
  },

  [View.WanPerformancePacketLoss]: {
    id: View.WanPerformancePacketLoss,
    category: Category.WanPerformance,
    name: 'packet_loss',
    component: 'GenericChart',
    reports: [Report.WanPerformancePacketLoss],
  },

  [View.WanPerformanceLatency]: {
    id: View.WanPerformanceLatency,
    category: Category.WanPerformance,
    name: 'latency',
    component: 'GenericChart',
    reports: [Report.WanPerformanceLatency],
  },

  [View.WanPerformanceJitter]: {
    id: View.WanPerformanceJitter,
    category: Category.WanPerformance,
    name: 'jitter',
    component: 'GenericChart',
    reports: [Report.WanPerformanceJitter],
  },

  // Sessions
  [View.SessionsList]: {
    id: View.SessionsList,
    category: Category.Sessions,
    name: 'all_sessions',
    component: 'AllSessions',
    reports: [Report.SessionsList],
  },

  [View.SessionsWanRouting]: {
    id: View.SessionsWanRouting,
    category: Category.Sessions,
    name: 'wan_routing',
    component: 'GenericGrid',
    reports: [Report.SessionsWanRouting],
  },

  // Threat Prevention
  [View.ThreatPreventionBlockedSummary]: {
    id: View.ThreatPreventionBlockedSummary,
    category: Category.ThreatPrevention,
    name: 'blocked_summary',
    component: 'GenericChart',
    reports: [Report.ThreatPreventionBlockedIpsByTime, Report.ThreatPreventionByBlockedCount],
  },

  [View.ThreatPreventionBlockedAddresses]: {
    id: View.ThreatPreventionBlockedAddresses,
    category: Category.ThreatPrevention,
    name: 'blocked_addresses',
    component: 'GenericGrid',
    reports: [Report.ThreatPreventionBlockedAddresses],
  },

  // Dynamic Lists
  [View.DynamicListsBlockedSummary]: {
    id: View.DynamicListsBlockedSummary,
    category: Category.DynamicLists,
    name: 'blocked_summary',
    component: 'GenericChart',
    reports: [Report.DynamicListsBlockedIpsByTime, Report.DynamicListsByBlockedCount],
  },

  [View.DynamicListsBlockedAddresses]: {
    id: View.DynamicListsBlockedAddresses,
    category: Category.DynamicLists,
    name: 'blocked_addresses',
    component: 'GenericGrid',
    reports: [Report.DynamicListsBlockedAddresses],
  },

  // Web Filter
  [View.WebFilterSummary]: {
    id: View.WebFilterSummary,
    category: Category.WebFilter,
    name: 'summary',
    component: 'WebFilterSummary',
    reports: [
      Report.WebFilterTopBlockedSites,
      Report.WebFilterTopVisitedSites,
      Report.WebFilterTopBlockedCategories,
      Report.WebFilterTopVisitedCategories,
      Report.WebFilterTopClientsByBlockedSites,
      Report.WebFilterTopClientsByVisitedSites,
    ],
  },

  [View.WebFilterVisitedSites]: {
    id: View.WebFilterVisitedSites,
    category: Category.WebFilter,
    name: 'visited_sites',
    component: 'WebFilterVisitedSites',
    reports: [Report.WebFilterVisitedSites],
  },

  // Geoip Filter
  [View.GeoipBlockedSessions]: {
    id: View.GeoipBlockedSessions,
    category: Category.GeoipFilter,
    name: 'blocked_sessions',
    component: 'GeoipBlockedSessions',
    reports: [Report.GeoipOutboundBlockedSessions, Report.GeoipInboundBlockedSessions],
  },

  [View.GeoipBlockedCountriesOutbound]: {
    id: View.GeoipBlockedCountriesOutbound,
    category: Category.GeoipFilter,
    name: 'blocked_countries_outbound',
    component: 'GenericChart',
    reports: [Report.GeoipOutboundBlockedCountriesByTime, Report.GeoipOutboundCountriesByBlockCount],
  },

  [View.GeoipBlockedCountriesInbound]: {
    id: View.GeoipBlockedCountriesInbound,
    category: Category.GeoipFilter,
    name: 'blocked_countries_inbound',
    component: 'GenericChart',
    reports: [Report.GeoipInboundBlockedCountriesByTime, Report.GeoipInboundCountriesByBlockCount],
  },

  [View.GeoipDistributionMap]: {
    id: View.GeoipDistributionMap,
    category: Category.GeoipFilter,
    name: 'distribution_map',
    component: 'GeoipDistributionMap',
    reports: [Report.GeoipDistributionMap],
  },

  // Application Control
  [View.ApplicationControlApplications]: {
    id: View.ApplicationControlApplications,
    category: Category.ApplicationControl,
    name: 'applications',
    component: 'ApplicationControlApplications',
    reports: [Report.ApplicationControlApplications],
  },

  // Captive Portal
  [View.CaptivePortalSummary]: {
    id: View.CaptivePortalSummary,
    category: Category.CaptivePortal,
    name: 'captive_portal_summary',
    component: 'GenericChart',
    reports: [Report.CaptivePortalByTime, Report.CaptivePortalByCount],
  },

  [View.CaptivePortalEvents]: {
    id: View.CaptivePortalEvents,
    category: Category.CaptivePortal,
    name: 'events',
    component: 'GenericGrid',
    reports: [Report.CaptivePortalEvents],
  },

  // Policy Manager
  [View.PolicyManagerEvents]: {
    id: View.PolicyManagerEvents,
    category: Category.PolicyManager,
    name: 'policy_manager_events',
    component: 'GenericGrid',
    reports: [Report.PolicyManagerEvents],
  },

  // Denial of Service
  [View.DenialOfServiceEvents]: {
    id: View.DenialOfServiceEvents,
    category: Category.DenialOfService,
    name: 'denial_of_service_events',
    component: 'GenericGrid',
    reports: [Report.DenialOfServiceEvents],
  },
})

export { views }
