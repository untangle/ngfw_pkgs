import { Report } from '../shared/Reports/configs/constants'
import columns from './columns'

/**
 * Reports configurations
 */

export default Object.freeze({
  [Report.ClientsBandwidthByTime]: {
    title: 'clients_bandwidth_by_time',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'session_stats left join sessions using (session_id)',
      tables: ['sessions', 'session_stats'],
      queryCategories: {
        groupColumn: 'client_address',
        aggregationFunction: 'sum',
        aggregationValue: 'bytes/60',
        limit: 10,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
      columnDisambiguation: [
        {
          columnName: 'time_stamp',
          newColumnName: 'session_stats.time_stamp',
        },
        {
          columnName: 'device_uid',
          newColumnName: 'session_stats.device_uid',
        },
      ],
    },
    rendering: {
      units: 'bytes/s',
      type: 'areaspline',
      dataGroupingApproximation: 'high',
    },
  },

  [Report.ClientsByBandwidth]: {
    title: 'top_clients_by_bandwidth',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'session_stats left join sessions using (session_id)',
      tables: ['sessions', 'session_stats'],
      queryCategories: {
        groupColumn: 'client_address',
        aggregationFunction: 'sum',
        aggregationValue: 'bytes',
      },
      columnDisambiguation: [
        {
          columnName: 'time_stamp',
          newColumnName: 'session_stats.time_stamp',
        },
        {
          columnName: 'device_uid',
          newColumnName: 'session_stats.device_uid',
        },
      ],
    },
    rendering: {
      units: 'bytes',
      column: 'client_address',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.ServerPortsBandwidthByTime]: {
    title: 'server_ports_bandwidth_by_time',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'session_stats left join sessions using (session_id)',
      tables: ['sessions', 'session_stats'],
      queryCategories: {
        groupColumn: 'server_port',
        aggregationFunction: 'sum',
        aggregationValue: 'bytes/60',
        limit: 10,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
      columnDisambiguation: [
        {
          columnName: 'time_stamp',
          newColumnName: 'session_stats.time_stamp',
        },
        {
          columnName: 'device_uid',
          newColumnName: 'session_stats.device_uid',
        },
      ],
    },
    rendering: {
      units: 'bytes/s',
      type: 'areaspline',
      dataGroupingApproximation: 'high',
    },
  },

  [Report.ServerPortsByBandwidth]: {
    title: 'server_ports_by_bandwidth',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'session_stats left join sessions using (session_id)',
      tables: ['sessions', 'session_stats'],
      queryCategories: {
        groupColumn: 'server_port',
        aggregationFunction: 'sum',
        aggregationValue: 'bytes',
      },
      columnDisambiguation: [
        {
          columnName: 'time_stamp',
          newColumnName: 'session_stats.time_stamp',
        },
        {
          columnName: 'device_uid',
          newColumnName: 'session_stats.device_uid',
        },
      ],
    },
    rendering: {
      units: 'bytes',
      column: 'server_port',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.ApplicationsBandwidthByTime]: {
    title: 'applications_bandwidth_by_time',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'session_stats left join sessions using (session_id)',
      tables: ['sessions', 'session_stats'],
      queryCategories: {
        groupColumn: 'application_name',
        aggregationFunction: 'sum',
        aggregationValue: 'bytes/60',
        limit: 10,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
      columnDisambiguation: [
        {
          columnName: 'time_stamp',
          newColumnName: 'session_stats.time_stamp',
        },
        {
          columnName: 'device_uid',
          newColumnName: 'session_stats.device_uid',
        },
      ],
    },
    rendering: {
      units: 'bytes/s',
      type: 'areaspline',
      dataGroupingApproximation: 'high',
    },
  },

  [Report.ApplicationsByBandwidth]: {
    title: 'applications_by_bandwidth',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'session_stats left join sessions using (session_id)',
      tables: ['sessions', 'session_stats'],
      queryCategories: {
        groupColumn: 'application_name',
        aggregationFunction: 'sum',
        aggregationValue: 'bytes',
      },
      columnDisambiguation: [
        {
          columnName: 'time_stamp',
          newColumnName: 'session_stats.time_stamp',
        },
        {
          columnName: 'device_uid',
          newColumnName: 'session_stats.device_uid',
        },
      ],
    },
    rendering: {
      units: 'bytes',
      column: 'application_name',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  // WAN Performance
  [Report.WanPerformanceUsage]: {
    title: 'interface_usage',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'interface_stats',
      queryCategories: {
        groupColumn: 'interface_id',
        aggregationFunction: 'sum',
        aggregationValue: 'rx_bytes/60',
        limit: 10,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
      conditions: [
        {
          column: 'is_wan',
          operator: 'EQ',
          value: 'TRUE',
        },
      ],
    },
    rendering: {
      units: 'bytes/s',
      type: 'areaspline',
      lineWidth: 2,
      dataGroupingApproximation: 'high',
    },
  },

  [Report.WanPerformancePacketLoss]: {
    title: 'packet_loss',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'interface_stats',
      queryCategories: {
        groupColumn: 'interface_id',
        aggregationFunction: 'sum',
        aggregationValue: 'ping_timeout',
        limit: 10,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
    },
    rendering: {
      units: 'packets',
      type: 'areaspline',
      lineWidth: 2,
      dataGroupingApproximation: 'high',
      nulls: true,
    },
  },

  [Report.WanPerformanceLatency]: {
    title: 'latency',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'interface_stats',
      queryCategories: {
        groupColumn: 'interface_id',
        aggregationFunction: 'avg',
        aggregationValue: 'latency_1',
        limit: 10,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
    },
    rendering: {
      units: 'ms',
      type: 'areaspline',
      lineWidth: 2,
      dataGroupingApproximation: 'average',
      nulls: true,
    },
  },

  [Report.WanPerformanceJitter]: {
    title: 'jitter',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'interface_stats',
      queryCategories: {
        groupColumn: 'interface_id',
        aggregationFunction: 'avg',
        aggregationValue: 'jitter_1',
        limit: 10,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
    },
    rendering: {
      units: 'ms',
      type: 'areaspline',
      lineWidth: 2,
      dataGroupingApproximation: 'average',
      nulls: true,
    },
  },

  // Sessions
  [Report.SessionsList]: {
    title: 'sessions',
    icon: 'mdi-table',
    columns: columns.gridColumns.sessions,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
    },
  },

  [Report.SessionsWanRouting]: {
    title: 'sessions',
    icon: 'mdi-table',
    columns: columns.gridColumns.wan_routing,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
      'conditions': [
        {
          'column': 'wan_rule_chain',
          'operator': 'NE',
          'value': '0',
        },
        {
          'column': 'server_interface_type',
          'operator': 'EQ',
          'value': '1',
        },
        {
          'column': 'wan_rule_id',
          'operator': 'NE',
          'value': '-2',
        },
      ],
    },
  },

  // Threat Prevention
  [Report.ThreatPreventionBlockedIpsByTime]: {
    title: 'blocked_ips_by_time',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'SERIES',
      table: 'sessions',
      querySeries: {
        columns: ['count(*) as blocked'],
      },
      conditions: [
        {
          column: 'threat_prevention_blocked_address',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: 'addresses',
      type: 'areaspline',
    },
  },

  [Report.ThreatPreventionByBlockedCount]: {
    title: 'top_addresses_by_blocked_count',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'threat_prevention_blocked_address',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'threat_prevention_blocked_address',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: 'blocked_count',
      column: 'threat_prevention_blocked_address',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.ThreatPreventionBlockedAddresses]: {
    title: 'blocked_addresses',
    icon: 'mdi-table',
    columns: columns.gridColumns.threat_prevention_blocked,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
      conditions: [
        {
          column: 'threat_prevention_blocked_address',
          operator: 'NE',
          value: '',
        },
      ],
    },
  },

  // Dynamic Lists
  [Report.DynamicListsBlockedIpsByTime]: {
    title: 'blocked_ips_by_time',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'SERIES',
      table: 'sessions',
      querySeries: {
        columns: ['count(*) as blocked'],
      },
      conditions: [
        {
          column: 'dynamic_lists_blocked_address',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: 'addresses',
      type: 'areaspline',
    },
  },

  [Report.DynamicListsByBlockedCount]: {
    title: 'top_addresses_by_blocked_count',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'dynamic_lists_blocked_address',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'dynamic_lists_blocked_address',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: 'blocked_count',
      column: 'dynamic_lists_blocked_address',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.DynamicListsBlockedAddresses]: {
    title: 'blocked_addresses',
    icon: 'mdi-table',
    columns: columns.gridColumns.dynamic_lists_blocked,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
      conditions: [
        {
          column: 'dynamic_lists_blocked_address',
          operator: 'NE',
          value: '',
        },
      ],
    },
  },

  // Web Filter
  [Report.WebFilterTopBlockedSites]: {
    title: 'blocked_sites',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'web_filter_hostname',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'web_filter_blocked',
          operator: 'EQ',
          value: true,
        },
      ],
    },
    rendering: {
      units: '',
      column: 'web_filter_hostname',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.WebFilterTopVisitedSites]: {
    title: 'visited_sites',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'web_filter_hostname',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'web_filter_hostname',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: '',
      column: 'web_filter_hostname',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.WebFilterTopBlockedCategories]: {
    title: 'blocked_categories',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'web_filter_catid',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'web_filter_blocked',
          operator: 'EQ',
          value: true,
        },
        {
          column: 'web_filter_catid',
          operator: 'NE',
          value: -1,
        },
      ],
    },
    rendering: {
      units: '',
      column: 'web_filter_catid',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.WebFilterTopVisitedCategories]: {
    title: 'visited_categories',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'web_filter_catid',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'web_filter_catid',
          operator: 'GE',
          value: 0,
        },
        {
          column: 'web_filter_hostname',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: '',
      column: 'web_filter_catid',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.WebFilterTopClientsByBlockedSites]: {
    title: 'clients_by_blocked_sites',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'client_address',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'web_filter_blocked',
          operator: 'EQ',
          value: true,
        },
      ],
    },
    rendering: {
      units: '',
      column: 'client_address',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.WebFilterTopClientsByVisitedSites]: {
    title: 'clients_by_visited_sites',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'client_address',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'web_filter_hostname',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: '',
      column: 'client_address',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.WebFilterVisitedSites]: {
    title: 'visited_sites',
    icon: 'mdi-table',
    columns: columns.gridColumns.web_filter_visited_sites,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
    },
  },

  // Geoip Filter
  [Report.GeoipOutboundBlockedSessions]: {
    title: 'blocked_sessions_outbound',
    icon: 'mdi-table',
    columns: columns.gridColumns.geoip_outbound_blocked_sessions,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
      conditions: [
        {
          column: 'geo_ip_blocked_server',
          operator: 'EQ',
          value: true,
        },
      ],
    },
  },

  [Report.GeoipInboundBlockedSessions]: {
    title: 'blocked_sessions_inbound',
    icon: 'mdi-table',
    columns: columns.gridColumns.geoip_inbound_blocked_sessions,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
      conditions: [
        {
          column: 'geo_ip_blocked_client',
          operator: 'EQ',
          value: true,
        },
      ],
    },
  },

  [Report.GeoipInboundBlockedCountriesByTime]: {
    title: 'blocked_countries_by_time',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'client_country',
        aggregationFunction: 'count',
        aggregationValue: '1',
        limit: 10,
      },
      conditions: [
        {
          column: 'geo_ip_blocked_client',
          operator: 'EQ',
          value: true,
        },
      ],
    },
    rendering: {
      units: 'sessions',
      type: 'areaspline',
      dataGroupingApproximation: 'sum',
    },
  },

  [Report.GeoipInboundCountriesByBlockCount]: {
    title: 'countries_by_blocked_count',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'client_country',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'geo_ip_blocked_client',
          operator: 'EQ',
          value: true,
        },
      ],
    },
    rendering: {
      units: 'blocked_count',
      column: 'client_country',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.GeoipOutboundBlockedCountriesByTime]: {
    title: 'blocked_countries_by_time',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'server_country',
        aggregationFunction: 'count',
        aggregationValue: '1',
        limit: 10,
      },
      conditions: [
        {
          column: 'geo_ip_blocked_server',
          operator: 'EQ',
          value: true,
        },
      ],
    },
    rendering: {
      units: 'sessions',
      type: 'areaspline',
      dataGroupingApproximation: 'sum',
    },
  },

  [Report.GeoipOutboundCountriesByBlockCount]: {
    title: 'countries_by_blocked_count',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'server_country',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'geo_ip_blocked_server',
          operator: 'EQ',
          value: true,
        },
      ],
    },
    rendering: {
      units: 'blocked_count',
      column: 'server_country',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.GeoipDistributionMap]: {
    title: 'distribution_map',
    icon: 'mdi-map-marker-radius',
  },

  // Application Control
  [Report.ApplicationControlApplications]: {
    title: 'applications',
    icon: 'mdi-table',
    columns: columns.gridColumns.application_control_applications,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
      // conditions are added dynamically
    },
  },

  // Captive Portal
  [Report.CaptivePortalByTime]: {
    title: 'captive_portal_summary',
    description: 'Summary of Distinct Captive Portal Client IP Session Events count over time',
    icon: 'mdi-chart-areaspline',
    query: {
      type: 'CATEGORIES_SERIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'captive_portal_client_ip',
        aggregationFunction: 'count',
        aggregationValue: '1',
        limit: 10,
      },
      conditions: [
        {
          column: 'captive_portal_client_ip',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: 'sessions',
      type: 'areaspline',
      stacking: 'none',
    },
  },

  [Report.CaptivePortalByCount]: {
    title: 'captive_portal_event_name',
    description: 'Summary for Captive Portal Client Events (Login Success/Login Failue)',
    icon: 'mdi-chart-pie',
    query: {
      type: 'CATEGORIES',
      table: 'sessions',
      queryCategories: {
        groupColumn: 'captive_portal_event_name',
        aggregationFunction: 'count',
        aggregationValue: '*',
      },
      conditions: [
        {
          column: 'captive_portal_client_ip',
          operator: 'NE',
          value: '',
        },
      ],
    },
    rendering: {
      units: 'client_events',
      column: 'captive_portal_event_name',
      type: 'pie',
      donutInnerSize: 50,
    },
  },

  [Report.CaptivePortalEvents]: {
    title: 'events',
    description: 'All Captive Portal Events',
    icon: 'mdi-table',
    columns: columns.gridColumns.captive_portal_events,
    query: {
      type: 'EVENTS',
      table: 'sessions',
      queryEvents: {
        limit: 3000,
      },
      conditions: [
        {
          column: 'captive_portal_client_ip',
          operator: 'NE',
          value: '',
        },
      ],
    },
  },

  [Report.PolicyManagerEvents]: {
    title: 'events',
    description: 'All Policy Manager Events',
    icon: 'mdi-table',
    columns: columns.gridColumns.policy_manager_events,
    query: {
      type: 'EVENTS',
      table: 'policy_events left join sessions using (session_id)',
      tables: ['policy_events', 'sessions'],
      queryEvents: {
        limit: 3000,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
      columnDisambiguation: [
        {
          columnName: 'time_stamp',
          newColumnName: 'policy_events.time_stamp',
        },
        {
          columnName: 'device_uid',
          newColumnName: 'sessions.device_uid',
        },
      ],
      conditions: [
        {
          column: 'rule_id',
          operator: 'NE',
          value: '',
        },
        {
          column: 'action',
          operator: 'NE',
          value: 'SET_CONFIGURATION',
        },
      ],
    },
  },

  // Denial of Service
  [Report.DenialOfServiceEvents]: {
    title: 'events',
    description: 'All Denial of service Events',
    icon: 'mdi-table',
    columns: columns.gridColumns.denial_of_service_events,
    query: {
      type: 'EVENTS',
      table: 'dos_events',
      queryEvents: {
        limit: 3000,
      },
      querySeries: {
        timeIntervalSeconds: 60,
      },
      conditions: [
        {
          column: 'from_host',
          operator: 'NE',
          value: '',
        },
      ],
    },
  },
})
