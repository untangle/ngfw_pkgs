import i18n from '@/plugins/vue-i18n'

/**
 * Formats the conditions in a grid readable form, being used for sorting/filtering/exporting the data
 * @param {Array} value - the cell JSON value
 * @returns {String}
 */
function conditionsFormatter({ value }) {
  if (!value.length) {
    return i18n.t('any')
  }

  let out = ''

  value.forEach((item, index) => {
    out += `${item.shortType} ${item.op} `
    if (item.value) out += item.value

    if (item.objects)
      out +=
        (item.objects.length > 1 ? '( ' : '') +
        item.objects.map(obj => `${obj.name} (${obj.tooltip})`).join(` ${i18n.t('or')} `) +
        (item.objects.length > 1 ? ' )' : '')

    if (index < value.length - 1) out += ` ${i18n.t('and')} `
  })

  return out
}

/**
 * Formats an object for sort/filter/export
 * @param {Object} value
 * @returns String
 */
function objectValueFormatter({ value }) {
  if (Array.isArray(value)) {
    return value.map(el => `${el.name} (${el.tooltip})`).join(', ')
  } else {
    return value
  }
}

export default { conditionsFormatter, objectValueFormatter }
