{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { VDialog, VCard, VCardTitle, VBtn, VIcon, VCardText, VCardActions, VSpacer, VOverlay, VProgressCircular } from 'vuetify/lib';\nimport UBtn from '../UBtn';\nexport default {\n  components: {\n    VDialog: VDialog,\n    VCard: VCard,\n    VCardTitle: VCardTitle,\n    VBtn: VBtn,\n    VIcon: VIcon,\n    VCardText: VCardText,\n    VCardActions: VCardActions,\n    VSpacer: VSpacer,\n    VOverlay: VOverlay,\n    VProgressCircular: VProgressCircular,\n    UBtn: UBtn\n  },\n  props: {\n    attach: {\n      type: String,\n      required: false,\n      \"default\": ''\n    },\n    showDialog: {\n      type: Boolean,\n      required: true\n    },\n    width: {\n      type: [Number, String],\n      required: false,\n      \"default\": 500\n    },\n    title: {\n      type: String,\n      required: true\n    },\n    message: {\n      type: String,\n      \"default\": ''\n    },\n    buttons: {\n      type: Array,\n      \"default\": null\n    },\n    resetState: {\n      type: Boolean,\n      \"default\": false\n    },\n    // allow\n    retainFocus: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  data: function data() {\n    return {\n      buttonsDisabled: false,\n      showProgressBar: false,\n      dialog: this.showDialog // to avoid mutation\n    };\n  },\n  watch: {\n    showDialog: function showDialog(dialog) {\n      var _this = this;\n      if (!dialog) {\n        this.buttonsDisabled = false;\n        this.showProgressBar = false;\n      }\n\n      // close on ESC key\n      var _handler = function handler(e) {\n        if (e.keyCode === 27) {\n          window.removeEventListener('keydown', _handler);\n          _this.$emit('close-dialog');\n        }\n      };\n      if (dialog) {\n        window.addEventListener('keydown', _handler);\n      }\n\n      // mutate data as it is used as v-model for v-dialog and cannot mutate the props\n      this.dialog = dialog;\n    },\n    /**\n     * allows implementors an opportunity to turn off the show-progress and re-enable\n     * the dialog buttons.  Thisis needed, in particular, when doing field validation on\n     * a pop-up dialog box.\n     */\n    resetState: function resetState() {\n      if (this.resetState) {\n        this.showProgressBar = false;\n        this.buttonsDisabled = false;\n      }\n    }\n  },\n  methods: {\n    clickButton: function clickButton(button) {\n      this.buttonsDisabled = true;\n\n      // show progress bar for the button click\n      if (button.showProgress) {\n        this.showProgressBar = true;\n      }\n\n      // emit button event\n      if (button.handler) {\n        this.$emit(button.handler);\n      } else {\n        this.$emit('close-dialog');\n      }\n    }\n  }\n};","map":{"version":3,"names":["VDialog","VCard","VCardTitle","VBtn","VIcon","VCardText","VCardActions","VSpacer","VOverlay","VProgressCircular","UBtn","components","props","attach","type","String","required","showDialog","Boolean","width","Number","title","message","buttons","Array","resetState","retainFocus","data","buttonsDisabled","showProgressBar","dialog","watch","_this","handler","e","keyCode","window","removeEventListener","$emit","addEventListener","methods","clickButton","button","showProgress"],"sources":["node_modules/vuntangle/src/components/UDialog/UDialog.vue"],"sourcesContent":["<template>\n  <v-dialog\n    v-model=\"dialog\"\n    persistent\n    :retain-focus=\"retainFocus\"\n    :width=\"width\"\n    content-class=\"modal-border\"\n    :attach=\"attach ? attach : false\"\n  >\n    <v-card>\n      <v-card-title class=\"px-4 py-1 aristaMediumBlue white--text\">\n        {{ title }}\n        <v-spacer />\n        <v-btn icon @click=\"$emit('close-dialog')\"><v-icon color=\"white\">mdi-close</v-icon></v-btn>\n      </v-card-title>\n\n      <v-card-text class=\"pa-4\">\n        {{ message }}\n        <slot></slot>\n      </v-card-text>\n\n      <v-card-actions class=\"pa-4\">\n        <v-spacer></v-spacer>\n        <template v-if=\"buttons != null\">\n          <!--\n            IMPORTANT!!!\n            the button text condition is just a temporary workaround to show cancel button as a text button\n            this must be removed in the future\n          -->\n          <u-btn\n            v-for=\"button in buttons\"\n            :key=\"button.name\"\n            :text=\"button.name.toLowerCase().includes('cancel')\"\n            :disabled=\"button.disabled || buttonsDisabled\"\n            @click=\"clickButton(button)\"\n            ><span :class=\"`${$vuetify.theme.dark ? 'white--text' : ''}`\">{{ button.name }} </span>\n          </u-btn>\n        </template>\n        <template v-else>\n          <u-btn @click=\"$emit('close-dialog')\"> {{ $vuntangle.$t('ok') }} </u-btn>\n        </template>\n      </v-card-actions>\n      <v-overlay\n        :value=\"showProgressBar\"\n        absolute\n        :color=\"$vuntangle.theme === 'dark' ? '#333' : '#FFF'\"\n        :opacity=\"0.66\"\n        class=\"text-center\"\n      >\n        <v-progress-circular indeterminate size=\"32\" color=\"aristaMediumBlue\"></v-progress-circular>\n      </v-overlay>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\n  import {\n    VDialog,\n    VCard,\n    VCardTitle,\n    VBtn,\n    VIcon,\n    VCardText,\n    VCardActions,\n    VSpacer,\n    VOverlay,\n    VProgressCircular,\n  } from 'vuetify/lib'\n  import UBtn from '../UBtn'\n\n  export default {\n    components: {\n      VDialog,\n      VCard,\n      VCardTitle,\n      VBtn,\n      VIcon,\n      VCardText,\n      VCardActions,\n      VSpacer,\n      VOverlay,\n      VProgressCircular,\n      UBtn,\n    },\n    props: {\n      attach: { type: String, required: false, default: '' },\n      showDialog: { type: Boolean, required: true },\n      width: { type: [Number, String], required: false, default: 500 },\n      title: { type: String, required: true },\n      message: { type: String, default: '' },\n      buttons: { type: Array, default: null },\n      resetState: { type: Boolean, default: false }, // allow\n      retainFocus: { type: Boolean, default: true },\n    },\n    data() {\n      return {\n        buttonsDisabled: false,\n        showProgressBar: false,\n        dialog: this.showDialog, // to avoid mutation\n      }\n    },\n    watch: {\n      showDialog(dialog) {\n        if (!dialog) {\n          this.buttonsDisabled = false\n          this.showProgressBar = false\n        }\n\n        // close on ESC key\n        const handler = e => {\n          if (e.keyCode === 27) {\n            window.removeEventListener('keydown', handler)\n            this.$emit('close-dialog')\n          }\n        }\n        if (dialog) {\n          window.addEventListener('keydown', handler)\n        }\n\n        // mutate data as it is used as v-model for v-dialog and cannot mutate the props\n        this.dialog = dialog\n      },\n      /**\n       * allows implementors an opportunity to turn off the show-progress and re-enable\n       * the dialog buttons.  Thisis needed, in particular, when doing field validation on\n       * a pop-up dialog box.\n       */\n      resetState() {\n        if (this.resetState) {\n          this.showProgressBar = false\n          this.buttonsDisabled = false\n        }\n      },\n    },\n    methods: {\n      clickButton(button) {\n        this.buttonsDisabled = true\n\n        // show progress bar for the button click\n        if (button.showProgress) {\n          this.showProgressBar = true\n        }\n\n        // emit button event\n        if (button.handler) {\n          this.$emit(button.handler)\n        } else {\n          this.$emit('close-dialog')\n        }\n      },\n    },\n  }\n</script>\n"],"mappings":";AAwDA,SACAA,OAAA,EACAC,KAAA,EACAC,UAAA,EACAC,IAAA,EACAC,KAAA,EACAC,SAAA,EACAC,YAAA,EACAC,OAAA,EACAC,QAAA,EACAC,iBAAA,QACA;AACA,OAAAC,IAAA;AAEA;EACAC,UAAA;IACAX,OAAA,EAAAA,OAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,UAAA,EAAAA,UAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,SAAA,EAAAA,SAAA;IACAC,YAAA,EAAAA,YAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,iBAAA,EAAAA,iBAAA;IACAC,IAAA,EAAAA;EACA;EACAE,KAAA;IACAC,MAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;MAAA;IAAA;IACAC,UAAA;MAAAH,IAAA,EAAAI,OAAA;MAAAF,QAAA;IAAA;IACAG,KAAA;MAAAL,IAAA,GAAAM,MAAA,EAAAL,MAAA;MAAAC,QAAA;MAAA;IAAA;IACAK,KAAA;MAAAP,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;IACAM,OAAA;MAAAR,IAAA,EAAAC,MAAA;MAAA;IAAA;IACAQ,OAAA;MAAAT,IAAA,EAAAU,KAAA;MAAA;IAAA;IACAC,UAAA;MAAAX,IAAA,EAAAI,OAAA;MAAA;IAAA;IAAA;IACAQ,WAAA;MAAAZ,IAAA,EAAAI,OAAA;MAAA;IAAA;EACA;EACAS,IAAA,WAAAA,KAAA;IACA;MACAC,eAAA;MACAC,eAAA;MACAC,MAAA,OAAAb,UAAA;IACA;EACA;EACAc,KAAA;IACAd,UAAA,WAAAA,WAAAa,MAAA;MAAA,IAAAE,KAAA;MACA,KAAAF,MAAA;QACA,KAAAF,eAAA;QACA,KAAAC,eAAA;MACA;;MAEA;MACA,IAAAI,QAAA,YAAAA,QAAAC,CAAA;QACA,IAAAA,CAAA,CAAAC,OAAA;UACAC,MAAA,CAAAC,mBAAA,YAAAJ,QAAA;UACAD,KAAA,CAAAM,KAAA;QACA;MACA;MACA,IAAAR,MAAA;QACAM,MAAA,CAAAG,gBAAA,YAAAN,QAAA;MACA;;MAEA;MACA,KAAAH,MAAA,GAAAA,MAAA;IACA;IACA;AACA;AACA;AACA;AACA;IACAL,UAAA,WAAAA,WAAA;MACA,SAAAA,UAAA;QACA,KAAAI,eAAA;QACA,KAAAD,eAAA;MACA;IACA;EACA;EACAY,OAAA;IACAC,WAAA,WAAAA,YAAAC,MAAA;MACA,KAAAd,eAAA;;MAEA;MACA,IAAAc,MAAA,CAAAC,YAAA;QACA,KAAAd,eAAA;MACA;;MAEA;MACA,IAAAa,MAAA,CAAAT,OAAA;QACA,KAAAK,KAAA,CAAAI,MAAA,CAAAT,OAAA;MACA;QACA,KAAAK,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}