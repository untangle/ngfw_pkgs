{"ast":null,"code":"// import translations\nimport i18n from '../../plugins/vue-i18n';\nexport default {\n  id: {\n    type: String,\n    required: true\n  },\n  rowNodeId: {\n    type: String,\n    required: false,\n    \"default\": null\n  },\n  rowData: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  // the row data\n  columnDefs: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  // the columns definitions specific for each grid\n  customGridOptions: {\n    type: Object,\n    required: false,\n    \"default\": null\n  },\n  // overwrite/extend any grid options\n  customDefaultColOptions: {\n    type: Object,\n    required: false,\n    \"default\": null\n  },\n  // overwrite/extend any default colDef options\n  frameworkComponents: {\n    type: Object,\n    \"default\": function _default() {}\n  },\n  // custom grid framework components\n  selectionType: {\n    type: String,\n    \"default\": 'single'\n  },\n  // 'single', 'singleAction', 'multiAction'\n\n  // synced props\n  selection: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  // the selected rows synced with the parent\n\n  /**\n   * Flag to do an auto-resize on the columns.  This is used when resizing a widget so the columns\n   * will fit into view.\n   */\n  resizeColumns: {\n    type: Boolean,\n    \"default\": false\n  },\n  toolbar: {\n    type: String,\n    \"default\": 'top'\n  },\n  // toolbar options, 'top', 'bottom', 'float', 'hidden'\n\n  // the default no data message to show inside grid\n  noDataMessage: {\n    type: String,\n    \"default\": i18n.t('no_data_available')\n  },\n  // conditional features enabled from toolbar or column menu\n  enableRefresh: {\n    type: Boolean,\n    \"default\": true\n  },\n  enableExportCsv: {\n    type: Boolean,\n    \"default\": true\n  },\n  modules: {\n    type: Array,\n    required: false,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  // does not set oultined grid wrapper\n  noBorder: {\n    type: Boolean,\n    \"default\": false\n  },\n  // custom ordering functionality\n  customOrdering: {\n    type: Boolean,\n    \"default\": false\n  }\n};","map":{"version":3,"names":["i18n","id","type","String","required","rowNodeId","rowData","Array","default","columnDefs","customGridOptions","Object","customDefaultColOptions","frameworkComponents","selectionType","selection","resizeColumns","Boolean","toolbar","noDataMessage","t","enableRefresh","enableExportCsv","modules","noBorder","customOrdering"],"sources":["/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/vuntangle/src/components/UGrid/props.js"],"sourcesContent":["// import translations\nimport i18n from '../../plugins/vue-i18n'\n\nexport default {\n  id: { type: String, required: true },\n  rowNodeId: { type: String, required: false, default: null },\n  rowData: { type: Array, default: () => [] }, // the row data\n  columnDefs: { type: Array, default: () => [] }, // the columns definitions specific for each grid\n  customGridOptions: { type: Object, required: false, default: null }, // overwrite/extend any grid options\n  customDefaultColOptions: { type: Object, required: false, default: null }, // overwrite/extend any default colDef options\n  frameworkComponents: { type: Object, default: () => {} }, // custom grid framework components\n  selectionType: { type: String, default: 'single' }, // 'single', 'singleAction', 'multiAction'\n\n  // synced props\n  selection: { type: Array, default: () => [] }, // the selected rows synced with the parent\n\n  /**\n   * Flag to do an auto-resize on the columns.  This is used when resizing a widget so the columns\n   * will fit into view.\n   */\n  resizeColumns: { type: Boolean, default: false },\n\n  toolbar: { type: String, default: 'top' }, // toolbar options, 'top', 'bottom', 'float', 'hidden'\n\n  // the default no data message to show inside grid\n  noDataMessage: { type: String, default: i18n.t('no_data_available') },\n\n  // conditional features enabled from toolbar or column menu\n  enableRefresh: { type: Boolean, default: true },\n  enableExportCsv: { type: Boolean, default: true },\n\n  modules: { type: Array, required: false, default: () => [] },\n\n  // does not set oultined grid wrapper\n  noBorder: { type: Boolean, default: false },\n\n  // custom ordering functionality\n  customOrdering: { type: Boolean, default: false },\n}\n"],"mappings":"AAAA;AACA,OAAOA,IAAI,MAAM,wBAAwB;AAEzC,eAAe;EACbC,EAAE,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACpCC,SAAS,EAAE;IAAEH,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,KAAK;IAAE,WAAS;EAAK,CAAC;EAC3DE,OAAO,EAAE;IAAEJ,IAAI,EAAEK,KAAK;IAAE,WAAS,SAATC,QAAOA,CAAA;MAAA,OAAQ,EAAE;IAAA;EAAC,CAAC;EAAE;EAC7CC,UAAU,EAAE;IAAEP,IAAI,EAAEK,KAAK;IAAE,WAAS,SAATC,QAAOA,CAAA;MAAA,OAAQ,EAAE;IAAA;EAAC,CAAC;EAAE;EAChDE,iBAAiB,EAAE;IAAER,IAAI,EAAES,MAAM;IAAEP,QAAQ,EAAE,KAAK;IAAE,WAAS;EAAK,CAAC;EAAE;EACrEQ,uBAAuB,EAAE;IAAEV,IAAI,EAAES,MAAM;IAAEP,QAAQ,EAAE,KAAK;IAAE,WAAS;EAAK,CAAC;EAAE;EAC3ES,mBAAmB,EAAE;IAAEX,IAAI,EAAES,MAAM;IAAE,WAAS,SAATH,QAAOA,CAAA,EAAQ,CAAC;EAAE,CAAC;EAAE;EAC1DM,aAAa,EAAE;IAAEZ,IAAI,EAAEC,MAAM;IAAE,WAAS;EAAS,CAAC;EAAE;;EAEpD;EACAY,SAAS,EAAE;IAAEb,IAAI,EAAEK,KAAK;IAAE,WAAS,SAATC,QAAOA,CAAA;MAAA,OAAQ,EAAE;IAAA;EAAC,CAAC;EAAE;;EAE/C;AACF;AACA;AACA;EACEQ,aAAa,EAAE;IAAEd,IAAI,EAAEe,OAAO;IAAE,WAAS;EAAM,CAAC;EAEhDC,OAAO,EAAE;IAAEhB,IAAI,EAAEC,MAAM;IAAE,WAAS;EAAM,CAAC;EAAE;;EAE3C;EACAgB,aAAa,EAAE;IAAEjB,IAAI,EAAEC,MAAM;IAAE,WAASH,IAAI,CAACoB,CAAC,CAAC,mBAAmB;EAAE,CAAC;EAErE;EACAC,aAAa,EAAE;IAAEnB,IAAI,EAAEe,OAAO;IAAE,WAAS;EAAK,CAAC;EAC/CK,eAAe,EAAE;IAAEpB,IAAI,EAAEe,OAAO;IAAE,WAAS;EAAK,CAAC;EAEjDM,OAAO,EAAE;IAAErB,IAAI,EAAEK,KAAK;IAAEH,QAAQ,EAAE,KAAK;IAAE,WAAS,SAATI,QAAOA,CAAA;MAAA,OAAQ,EAAE;IAAA;EAAC,CAAC;EAE5D;EACAgB,QAAQ,EAAE;IAAEtB,IAAI,EAAEe,OAAO;IAAE,WAAS;EAAM,CAAC;EAE3C;EACAQ,cAAc,EAAE;IAAEvB,IAAI,EAAEe,OAAO;IAAE,WAAS;EAAM;AAClD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}