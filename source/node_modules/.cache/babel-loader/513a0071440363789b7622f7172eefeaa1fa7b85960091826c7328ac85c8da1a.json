{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { VContainer, VRow, VCol } from 'vuetify/lib';\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\nimport settingsMixin from '../settingsMixin';\nimport util from '../../plugins/util';\nexport default {\n  components: {\n    VContainer: VContainer,\n    VRow: VRow,\n    VCol: VCol,\n    ValidationObserver: ValidationObserver,\n    ValidationProvider: ValidationProvider\n  },\n  mixins: [settingsMixin],\n  props: {\n    // settings, settingsCopy from mixin\n    interfaces: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    index: {\n      type: Number,\n      \"default\": undefined\n    }\n  },\n  computed: {\n    isAdd: function isAdd(_ref) {\n      var index = _ref.index;\n      return index === undefined;\n    },\n    interfaceItems: function interfaceItems(_ref2) {\n      var interfaces = _ref2.interfaces;\n      return interfaces.map(function (intf) {\n        return {\n          value: intf.interfaceId,\n          text: intf.name\n        };\n      });\n    }\n  },\n  methods: {\n    // Dialog main action emitting updated settings\n    action: function action() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var isValid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$refs.obs.validate();\n            case 2:\n              isValid = _context.sent;\n              if (isValid) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 5:\n              if (_this.isAdd) {\n                _this.settingsCopy.name = util.uuidv4();\n              }\n              _this.$emit('update', _this.settingsCopy, _this.index);\n              _this.$emit('close');\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["VContainer","VRow","VCol","ValidationObserver","ValidationProvider","settingsMixin","util","components","mixins","props","interfaces","type","Array","default","index","Number","undefined","computed","isAdd","_ref","interfaceItems","_ref2","map","intf","value","interfaceId","text","name","methods","action","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isValid","wrap","_callee$","_context","prev","next","$refs","obs","validate","sent","abrupt","settingsCopy","uuidv4","$emit","stop"],"sources":["node_modules/vuntangle/src/shared/StatusAnalyzers/InterfaceTrackerEdit.vue"],"sourcesContent":["<template>\n  <v-container>\n    <ValidationObserver ref=\"obs\">\n      <v-row>\n        <v-col>\n          <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n            <u-text-field v-model=\"settingsCopy.displayName\" :label=\"$vuntangle.$t('name')\" :error-messages=\"errors\">\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n            </u-text-field>\n          </ValidationProvider>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col>\n          <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n            <u-select\n              v-model=\"settingsCopy.interfaceId\"\n              :items=\"interfaceItems\"\n              :label=\"$t('interface')\"\n              :error-messages=\"errors\"\n            >\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n            </u-select>\n          </ValidationProvider>\n        </v-col>\n      </v-row>\n    </ValidationObserver>\n  </v-container>\n</template>\n<script>\n  import { VContainer, VRow, VCol } from 'vuetify/lib'\n  import { ValidationObserver, ValidationProvider } from 'vee-validate'\n  import settingsMixin from '../settingsMixin'\n  import util from '../../plugins/util'\n\n  export default {\n    components: {\n      VContainer,\n      VRow,\n      VCol,\n      ValidationObserver,\n      ValidationProvider,\n    },\n    mixins: [settingsMixin],\n    props: {\n      // settings, settingsCopy from mixin\n      interfaces: { type: Array, default: () => [] },\n      index: { type: Number, default: undefined },\n    },\n    computed: {\n      isAdd: ({ index }) => index === undefined,\n      interfaceItems: ({ interfaces }) => interfaces.map(intf => ({ value: intf.interfaceId, text: intf.name })),\n    },\n    methods: {\n      // Dialog main action emitting updated settings\n      async action() {\n        const isValid = await this.$refs.obs.validate()\n        if (!isValid) return\n\n        if (this.isAdd) {\n          this.settingsCopy.name = util.uuidv4()\n        }\n\n        this.$emit('update', this.settingsCopy, this.index)\n        this.$emit('close')\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;AA8BA,SAAAA,UAAA,EAAAC,IAAA,EAAAC,IAAA;AACA,SAAAC,kBAAA,EAAAC,kBAAA;AACA,OAAAC,aAAA;AACA,OAAAC,IAAA;AAEA;EACAC,UAAA;IACAP,UAAA,EAAAA,UAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,kBAAA,EAAAA,kBAAA;IACAC,kBAAA,EAAAA;EACA;EACAI,MAAA,GAAAH,aAAA;EACAI,KAAA;IACA;IACAC,UAAA;MAAAC,IAAA,EAAAC,KAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;IACAC,KAAA;MAAAH,IAAA,EAAAI,MAAA;MAAA,WAAAC;IAAA;EACA;EACAC,QAAA;IACAC,KAAA,WAAAA,MAAAC,IAAA;MAAA,IAAAL,KAAA,GAAAK,IAAA,CAAAL,KAAA;MAAA,OAAAA,KAAA,KAAAE,SAAA;IAAA;IACAI,cAAA,WAAAA,eAAAC,KAAA;MAAA,IAAAX,UAAA,GAAAW,KAAA,CAAAX,UAAA;MAAA,OAAAA,UAAA,CAAAY,GAAA,WAAAC,IAAA;QAAA;UAAAC,KAAA,EAAAD,IAAA,CAAAE,WAAA;UAAAC,IAAA,EAAAH,IAAA,CAAAI;QAAA;MAAA;IAAA;EACA;EACAC,OAAA;IACA;IACAC,MAAA,WAAAA,OAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,OAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAV,KAAA,CAAAW,KAAA,CAAAC,GAAA,CAAAC,QAAA;YAAA;cAAAR,OAAA,GAAAG,QAAA,CAAAM,IAAA;cAAA,IACAT,OAAA;gBAAAG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAO,MAAA;YAAA;cAEA,IAAAf,KAAA,CAAAZ,KAAA;gBACAY,KAAA,CAAAgB,YAAA,CAAAnB,IAAA,GAAArB,IAAA,CAAAyC,MAAA;cACA;cAEAjB,KAAA,CAAAkB,KAAA,WAAAlB,KAAA,CAAAgB,YAAA,EAAAhB,KAAA,CAAAhB,KAAA;cACAgB,KAAA,CAAAkB,KAAA;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAf,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}