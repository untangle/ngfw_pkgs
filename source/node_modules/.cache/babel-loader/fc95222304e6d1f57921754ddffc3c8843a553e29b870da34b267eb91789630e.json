{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport i18n from '../../../plugins/vue-i18n';\nfunction addConditionHeaders(headers, types) {\n  var selectedItem = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var conditions = [];\n  var headerMap = new Map();\n  var currentCategory;\n  var selectedItemCategory;\n  var inserted = false;\n  var categoryMet = false;\n  headerMap.set('other', {\n    text: 'other',\n    inserted: false\n  });\n  headers.forEach(function (header) {\n    headerMap.set(header.prefix, {\n      text: header.text,\n      inserted: false\n    });\n  });\n  if (selectedItem) {\n    var selectedItemPrefix = selectedItem.split('_')[0];\n    if (headerMap.has(selectedItemPrefix)) {\n      selectedItemCategory = headerMap.get(selectedItemPrefix).text;\n    } else {\n      selectedItemCategory = 'other';\n    }\n  }\n  types.forEach(function (type) {\n    var prefix = type.split('_')[0];\n    if (headerMap.has(prefix)) {\n      if (!headerMap.get(prefix).inserted) {\n        currentCategory = headerMap.get(prefix).text;\n        conditions.push({\n          divider: true,\n          header: i18n.t(headerMap.get(prefix).text.toLowerCase()),\n          text: i18n.t(headerMap.get(prefix).text.toLowerCase()),\n          value: prefix\n        });\n        headerMap.set(prefix, {\n          inserted: true\n        });\n      }\n    } else if (!headerMap.get('other').inserted) {\n      currentCategory = 'other';\n      conditions.push({\n        divider: true,\n        header: i18n.t('other'),\n        text: i18n.t('other'),\n        value: type.value\n      });\n      headerMap.set('other', {\n        inserted: true\n      });\n    }\n    if (selectedItemCategory) {\n      if (selectedItemCategory === currentCategory) {\n        // selectedItem belongs to this category\n        categoryMet = true;\n        if (type > selectedItem && !inserted) {\n          conditions.push({\n            text: i18n.t(selectedItem.toLowerCase()),\n            value: selectedItem\n          });\n          inserted = true;\n        }\n      } else if (categoryMet && !inserted) {\n        // selectedItem was last type in the category so it should be added here before the new category\n        conditions.splice(conditions.length - 1, 0, {\n          text: i18n.t(selectedItem.toLowerCase()),\n          value: selectedItem\n        });\n        inserted = true;\n      }\n    }\n    conditions.push({\n      text: i18n.t(type.toLowerCase()),\n      value: type\n    });\n  });\n  if (!inserted && selectedItem) {\n    // selectedItem was the last type in list so should be added here\n    conditions.push({\n      text: i18n.t(selectedItem.toLowerCase()),\n      value: selectedItem\n    });\n    inserted = true;\n  }\n  return conditions;\n}\nexport { addConditionHeaders };","map":{"version":3,"names":["i18n","addConditionHeaders","headers","types","selectedItem","arguments","length","undefined","conditions","headerMap","Map","currentCategory","selectedItemCategory","inserted","categoryMet","set","text","forEach","header","prefix","selectedItemPrefix","split","has","get","type","push","divider","t","toLowerCase","value","splice"],"sources":["/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/vuntangle/src/shared/Conditions/util/addConditionHeaders.js"],"sourcesContent":["import i18n from '../../../plugins/vue-i18n'\n\nfunction addConditionHeaders(headers, types, selectedItem = '') {\n  const conditions = []\n  const headerMap = new Map()\n  let currentCategory\n  let selectedItemCategory\n  let inserted = false\n  let categoryMet = false\n\n  headerMap.set('other', {\n    text: 'other',\n    inserted: false,\n  })\n\n  headers.forEach(header => {\n    headerMap.set(header.prefix, {\n      text: header.text,\n      inserted: false,\n    })\n  })\n  if (selectedItem) {\n    const selectedItemPrefix = selectedItem.split('_')[0]\n    if (headerMap.has(selectedItemPrefix)) {\n      selectedItemCategory = headerMap.get(selectedItemPrefix).text\n    } else {\n      selectedItemCategory = 'other'\n    }\n  }\n  types.forEach(type => {\n    const prefix = type.split('_')[0]\n    if (headerMap.has(prefix)) {\n      if (!headerMap.get(prefix).inserted) {\n        currentCategory = headerMap.get(prefix).text\n        conditions.push({\n          divider: true,\n          header: i18n.t(headerMap.get(prefix).text.toLowerCase()),\n          text: i18n.t(headerMap.get(prefix).text.toLowerCase()),\n          value: prefix,\n        })\n\n        headerMap.set(prefix, {\n          inserted: true,\n        })\n      }\n    } else if (!headerMap.get('other').inserted) {\n      currentCategory = 'other'\n      conditions.push({\n        divider: true,\n        header: i18n.t('other'),\n        text: i18n.t('other'),\n        value: type.value,\n      })\n\n      headerMap.set('other', {\n        inserted: true,\n      })\n    }\n\n    if (selectedItemCategory) {\n      if (selectedItemCategory === currentCategory) {\n        // selectedItem belongs to this category\n        categoryMet = true\n        if (type > selectedItem && !inserted) {\n          conditions.push({\n            text: i18n.t(selectedItem.toLowerCase()),\n            value: selectedItem,\n          })\n          inserted = true\n        }\n      } else if (categoryMet && !inserted) {\n        // selectedItem was last type in the category so it should be added here before the new category\n        conditions.splice(conditions.length - 1, 0, {\n          text: i18n.t(selectedItem.toLowerCase()),\n          value: selectedItem,\n        })\n        inserted = true\n      }\n    }\n    conditions.push({\n      text: i18n.t(type.toLowerCase()),\n      value: type,\n    })\n  })\n  if (!inserted && selectedItem) {\n    // selectedItem was the last type in list so should be added here\n    conditions.push({\n      text: i18n.t(selectedItem.toLowerCase()),\n      value: selectedItem,\n    })\n    inserted = true\n  }\n  return conditions\n}\n\nexport { addConditionHeaders }\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAI,MAAM,2BAA2B;AAE5C,SAASC,mBAAmBA,CAACC,OAAO,EAAEC,KAAK,EAAqB;EAAA,IAAnBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC5D,IAAMG,UAAU,GAAG,EAAE;EACrB,IAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC3B,IAAIC,eAAe;EACnB,IAAIC,oBAAoB;EACxB,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIC,WAAW,GAAG,KAAK;EAEvBL,SAAS,CAACM,GAAG,CAAC,OAAO,EAAE;IACrBC,IAAI,EAAE,OAAO;IACbH,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFX,OAAO,CAACe,OAAO,CAAC,UAAAC,MAAM,EAAI;IACxBT,SAAS,CAACM,GAAG,CAACG,MAAM,CAACC,MAAM,EAAE;MAC3BH,IAAI,EAAEE,MAAM,CAACF,IAAI;MACjBH,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,IAAIT,YAAY,EAAE;IAChB,IAAMgB,kBAAkB,GAAGhB,YAAY,CAACiB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,IAAIZ,SAAS,CAACa,GAAG,CAACF,kBAAkB,CAAC,EAAE;MACrCR,oBAAoB,GAAGH,SAAS,CAACc,GAAG,CAACH,kBAAkB,CAAC,CAACJ,IAAI;IAC/D,CAAC,MAAM;MACLJ,oBAAoB,GAAG,OAAO;IAChC;EACF;EACAT,KAAK,CAACc,OAAO,CAAC,UAAAO,IAAI,EAAI;IACpB,IAAML,MAAM,GAAGK,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,IAAIZ,SAAS,CAACa,GAAG,CAACH,MAAM,CAAC,EAAE;MACzB,IAAI,CAACV,SAAS,CAACc,GAAG,CAACJ,MAAM,CAAC,CAACN,QAAQ,EAAE;QACnCF,eAAe,GAAGF,SAAS,CAACc,GAAG,CAACJ,MAAM,CAAC,CAACH,IAAI;QAC5CR,UAAU,CAACiB,IAAI,CAAC;UACdC,OAAO,EAAE,IAAI;UACbR,MAAM,EAAElB,IAAI,CAAC2B,CAAC,CAAClB,SAAS,CAACc,GAAG,CAACJ,MAAM,CAAC,CAACH,IAAI,CAACY,WAAW,CAAC,CAAC,CAAC;UACxDZ,IAAI,EAAEhB,IAAI,CAAC2B,CAAC,CAAClB,SAAS,CAACc,GAAG,CAACJ,MAAM,CAAC,CAACH,IAAI,CAACY,WAAW,CAAC,CAAC,CAAC;UACtDC,KAAK,EAAEV;QACT,CAAC,CAAC;QAEFV,SAAS,CAACM,GAAG,CAACI,MAAM,EAAE;UACpBN,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;IACF,CAAC,MAAM,IAAI,CAACJ,SAAS,CAACc,GAAG,CAAC,OAAO,CAAC,CAACV,QAAQ,EAAE;MAC3CF,eAAe,GAAG,OAAO;MACzBH,UAAU,CAACiB,IAAI,CAAC;QACdC,OAAO,EAAE,IAAI;QACbR,MAAM,EAAElB,IAAI,CAAC2B,CAAC,CAAC,OAAO,CAAC;QACvBX,IAAI,EAAEhB,IAAI,CAAC2B,CAAC,CAAC,OAAO,CAAC;QACrBE,KAAK,EAAEL,IAAI,CAACK;MACd,CAAC,CAAC;MAEFpB,SAAS,CAACM,GAAG,CAAC,OAAO,EAAE;QACrBF,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IAEA,IAAID,oBAAoB,EAAE;MACxB,IAAIA,oBAAoB,KAAKD,eAAe,EAAE;QAC5C;QACAG,WAAW,GAAG,IAAI;QAClB,IAAIU,IAAI,GAAGpB,YAAY,IAAI,CAACS,QAAQ,EAAE;UACpCL,UAAU,CAACiB,IAAI,CAAC;YACdT,IAAI,EAAEhB,IAAI,CAAC2B,CAAC,CAACvB,YAAY,CAACwB,WAAW,CAAC,CAAC,CAAC;YACxCC,KAAK,EAAEzB;UACT,CAAC,CAAC;UACFS,QAAQ,GAAG,IAAI;QACjB;MACF,CAAC,MAAM,IAAIC,WAAW,IAAI,CAACD,QAAQ,EAAE;QACnC;QACAL,UAAU,CAACsB,MAAM,CAACtB,UAAU,CAACF,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE;UAC1CU,IAAI,EAAEhB,IAAI,CAAC2B,CAAC,CAACvB,YAAY,CAACwB,WAAW,CAAC,CAAC,CAAC;UACxCC,KAAK,EAAEzB;QACT,CAAC,CAAC;QACFS,QAAQ,GAAG,IAAI;MACjB;IACF;IACAL,UAAU,CAACiB,IAAI,CAAC;MACdT,IAAI,EAAEhB,IAAI,CAAC2B,CAAC,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;MAChCC,KAAK,EAAEL;IACT,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,IAAI,CAACX,QAAQ,IAAIT,YAAY,EAAE;IAC7B;IACAI,UAAU,CAACiB,IAAI,CAAC;MACdT,IAAI,EAAEhB,IAAI,CAAC2B,CAAC,CAACvB,YAAY,CAACwB,WAAW,CAAC,CAAC,CAAC;MACxCC,KAAK,EAAEzB;IACT,CAAC,CAAC;IACFS,QAAQ,GAAG,IAAI;EACjB;EACA,OAAOL,UAAU;AACnB;AAEA,SAASP,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}