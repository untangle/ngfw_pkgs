{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport cloneDeep from 'lodash/cloneDeep';\n// import { StaticRoutesList } from 'vuntangle'\nimport transform from '@/util/transform';\nexport default {\n  // components: { StaticRoutesList },\n  computed: {\n    staticRoutes: function staticRoutes() {\n      return transform.staticRoutes.get();\n    },\n    lanInterfaces: function lanInterfaces(_ref) {\n      var $store = _ref.$store;\n      return $store.getters['settings/lanInterfaces'];\n    }\n  },\n  methods: {\n    /**\n     * if no changes detected (enabled/disabled route)\n     * the `save` action button is disabled\n     * @param {Array} updatedRoutes - edited routes\n     */\n    saveDisabled: function saveDisabled(updatedRoutes) {\n      return this.routes.every(function (route, routeIndex) {\n        var _updatedRoutes$routeI;\n        return route.enabled === ((_updatedRoutes$routeI = updatedRoutes[routeIndex]) === null || _updatedRoutes$routeI === void 0 ? void 0 : _updatedRoutes$routeI.enabled);\n      });\n    },\n    onEditRoute: function onEditRoute(index) {\n      this.$router.push(\"/settings/routing/routes/\".concat(index));\n    },\n    // delete route based on index\n    onDeleteRoute: function onDeleteRoute(index) {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var routesCopy, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              routesCopy = cloneDeep(_this.routes);\n              routesCopy.splice(index, 1);\n              _this.$store.commit('SET_LOADER', true);\n              _context.next = 5;\n              return _this.$store.dispatch('settings/setRoutes', routesCopy);\n            case 5:\n              response = _context.sent;\n              _this.$store.commit('SET_LOADER', false);\n              if (response) {\n                _this.$vuntangle.toast.add(_this.$t('deleted_successfully', [_this.$t('static_route')]));\n              }\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    onSave: function onSave(updatedRoutes) {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.$store.commit('SET_LOADER', true);\n              _context2.next = 3;\n              return _this2.$store.dispatch('settings/setRoutes', updatedRoutes);\n            case 3:\n              response = _context2.sent;\n              _this2.$store.commit('SET_LOADER', false);\n              if (response) {\n                _this2.$vuntangle.toast.add(_this2.$t('saved_successfully', [_this2.$t('static_routes')]));\n              }\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["cloneDeep","transform","computed","staticRoutes","get","lanInterfaces","_ref","$store","getters","methods","saveDisabled","updatedRoutes","routes","every","route","routeIndex","_updatedRoutes$routeI","enabled","onEditRoute","index","$router","push","concat","onDeleteRoute","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","routesCopy","response","wrap","_callee$","_context","prev","next","splice","commit","dispatch","sent","$vuntangle","toast","add","$t","stop","onSave","_this2","_callee2","_callee2$","_context2"],"sources":["src/ngfw/NgfwStaticRoutes.vue"],"sourcesContent":["<template>\n  <div>\n    <p>{{ staticRoutes }}</p>\n    <p>{{ lanInterfaces }}</p>\n  </div>\n  <!-- <static-routes-list\n    :title=\"$t('static_routes')\"\n    :routes=\"staticRoutes\"\n    :interfaces=\"lanInterfaces\"\n    @edit-route=\"onEditRoute\"\n    @delete-route=\"onDeleteRoute\"\n  >\n    <template #actions=\"{ updatedRoutes }\">\n      <u-btn :min-width=\"null\" class=\"mr-2\" to=\"/settings/routing/routes/add\">{{ $t('add_static_route') }}</u-btn>\n      <u-btn :min-width=\"null\" :disabled=\"saveDisabled(updatedRoutes)\" @click=\"onSave(updatedRoutes)\">\n        {{ $t('save') }}\n      </u-btn>\n    </template>\n  </static-routes-list> -->\n</template>\n<script>\n  import cloneDeep from 'lodash/cloneDeep'\n  // import { StaticRoutesList } from 'vuntangle'\n  import transform from '@/util/transform'\n\n  export default {\n    // components: { StaticRoutesList },\n    computed: {\n      staticRoutes: () => transform.staticRoutes.get(),\n      lanInterfaces: ({ $store }) => $store.getters['settings/lanInterfaces'],\n    },\n\n    methods: {\n      /**\n       * if no changes detected (enabled/disabled route)\n       * the `save` action button is disabled\n       * @param {Array} updatedRoutes - edited routes\n       */\n      saveDisabled(updatedRoutes) {\n        return this.routes.every((route, routeIndex) => route.enabled === updatedRoutes[routeIndex]?.enabled)\n      },\n\n      onEditRoute(index) {\n        this.$router.push(`/settings/routing/routes/${index}`)\n      },\n\n      // delete route based on index\n      async onDeleteRoute(index) {\n        const routesCopy = cloneDeep(this.routes)\n        routesCopy.splice(index, 1)\n        this.$store.commit('SET_LOADER', true)\n        const response = await this.$store.dispatch('settings/setRoutes', routesCopy)\n        this.$store.commit('SET_LOADER', false)\n        if (response) {\n          this.$vuntangle.toast.add(this.$t('deleted_successfully', [this.$t('static_route')]))\n        }\n      },\n\n      async onSave(updatedRoutes) {\n        this.$store.commit('SET_LOADER', true)\n        const response = await this.$store.dispatch('settings/setRoutes', updatedRoutes)\n        this.$store.commit('SET_LOADER', false)\n        if (response) {\n          this.$vuntangle.toast.add(this.$t('saved_successfully', [this.$t('static_routes')]))\n        }\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;;AAqBA,OAAAA,SAAA;AACA;AACA,OAAAC,SAAA;AAEA;EACA;EACAC,QAAA;IACAC,YAAA,WAAAA,aAAA;MAAA,OAAAF,SAAA,CAAAE,YAAA,CAAAC,GAAA;IAAA;IACAC,aAAA,WAAAA,cAAAC,IAAA;MAAA,IAAAC,MAAA,GAAAD,IAAA,CAAAC,MAAA;MAAA,OAAAA,MAAA,CAAAC,OAAA;IAAA;EACA;EAEAC,OAAA;IACA;AACA;AACA;AACA;AACA;IACAC,YAAA,WAAAA,aAAAC,aAAA;MACA,YAAAC,MAAA,CAAAC,KAAA,WAAAC,KAAA,EAAAC,UAAA;QAAA,IAAAC,qBAAA;QAAA,OAAAF,KAAA,CAAAG,OAAA,OAAAD,qBAAA,GAAAL,aAAA,CAAAI,UAAA,eAAAC,qBAAA,uBAAAA,qBAAA,CAAAC,OAAA;MAAA;IACA;IAEAC,WAAA,WAAAA,YAAAC,KAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,6BAAAC,MAAA,CAAAH,KAAA;IACA;IAEA;IACAI,aAAA,WAAAA,cAAAJ,KAAA;MAAA,IAAAK,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,UAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAN,UAAA,GAAA7B,SAAA,CAAAwB,KAAA,CAAAZ,MAAA;cACAiB,UAAA,CAAAO,MAAA,CAAAjB,KAAA;cACAK,KAAA,CAAAjB,MAAA,CAAA8B,MAAA;cAAAJ,QAAA,CAAAE,IAAA;cAAA,OACAX,KAAA,CAAAjB,MAAA,CAAA+B,QAAA,uBAAAT,UAAA;YAAA;cAAAC,QAAA,GAAAG,QAAA,CAAAM,IAAA;cACAf,KAAA,CAAAjB,MAAA,CAAA8B,MAAA;cACA,IAAAP,QAAA;gBACAN,KAAA,CAAAgB,UAAA,CAAAC,KAAA,CAAAC,GAAA,CAAAlB,KAAA,CAAAmB,EAAA,0BAAAnB,KAAA,CAAAmB,EAAA;cACA;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA;IACA;IAEAiB,MAAA,WAAAA,OAAAlC,aAAA;MAAA,IAAAmC,MAAA;MAAA,OAAArB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAoB,SAAA;QAAA,IAAAjB,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAiB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;YAAA;cACAW,MAAA,CAAAvC,MAAA,CAAA8B,MAAA;cAAAY,SAAA,CAAAd,IAAA;cAAA,OACAW,MAAA,CAAAvC,MAAA,CAAA+B,QAAA,uBAAA3B,aAAA;YAAA;cAAAmB,QAAA,GAAAmB,SAAA,CAAAV,IAAA;cACAO,MAAA,CAAAvC,MAAA,CAAA8B,MAAA;cACA,IAAAP,QAAA;gBACAgB,MAAA,CAAAN,UAAA,CAAAC,KAAA,CAAAC,GAAA,CAAAI,MAAA,CAAAH,EAAA,wBAAAG,MAAA,CAAAH,EAAA;cACA;YAAA;YAAA;cAAA,OAAAM,SAAA,CAAAL,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}