{"ast":null,"code":"import _objectSpread from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport Util from '@/util/setupUtils';\nimport Internet from '@/Setup_wizard/step/Internet.vue';\nexport default {\n  name: 'SetupMain',\n  components: {\n    Internet: Internet\n  },\n  data: function data() {\n    return {\n      showInternetSetup: false,\n      resuming: false,\n      remoteReachable: null,\n      rpc: null // Initialize rpc as null to track data loading\n    };\n  },\n  computed: {\n    logo: function logo() {\n      return this.$vuetify.theme.isDark ? 'arista-logo-white.svg' : 'arista-logo-blue.svg';\n    },\n    showIntro: function showIntro() {\n      return true; // Add logic if needed\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log('Initializing RPC...');\n            _context.next = 4;\n            return _this.initializeRpc();\n          case 4:\n            _this.checkRemoteReachability();\n            _this.checkWizardStatus();\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error initializing RPC:', _context.t0);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 8]]);\n    }))();\n  },\n  methods: {\n    initializeRpc: function initializeRpc() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(window.rpc && window.rpc.setup)) {\n                _context2.next = 10;\n                break;\n              }\n              console.log('window.rpc', window.rpc);\n              _context2.next = 4;\n              return new Promise(function (resolve, reject) {\n                window.rpc.setup.getSetupWizardStartupInfo(function (res, err) {\n                  if (err) reject(err);else resolve(res);\n                });\n              });\n            case 4:\n              result = _context2.sent;\n              console.log('Setup Wizard Startup Info:', result);\n              _this2.rpc = _objectSpread(_objectSpread({}, window.rpc), result); // Merge window.rpc with the result\n              console.log('RPC after assigning startup info:', _this2.rpc);\n              _context2.next = 11;\n              break;\n            case 10:\n              throw new Error('RPC setup is not available');\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    checkRemoteReachability: function checkRemoteReachability() {\n      var _this3 = this;\n      setTimeout(function () {\n        if (_this3.rpc && _this3.rpc.setup) {\n          _this3.remoteReachable = _this3.rpc.setup.getRemoteReachable();\n        }\n      }, 500);\n    },\n    checkWizardStatus: function checkWizardStatus() {\n      if (this.rpc && this.rpc.wizardSettings && !this.rpc.wizardSettings.wizardComplete && this.rpc.wizardSettings.completedStep != null) {\n        this.resuming = true;\n      }\n    },\n    resetWizard: function resetWizard() {\n      var _this4 = this;\n      console.log('this.rpc.remote', this.rpc.remote);\n      console.log('this.remoteReachable', this.remoteReachable);\n      console.log(\"Util.setRpcJsonrpc('admin')\", Util.setRpcJsonrpc('admin'));\n      if (this.rpc.remote && !this.remoteReachable) {\n        if (Util.setRpcJsonrpc('admin')) {\n          this.resetWizardContinue();\n        } else {\n          Util.authenticate('passwd', function (isNonDefaultPassword) {\n            if (isNonDefaultPassword) {\n              var password = prompt('Please enter admin password');\n              Util.authenticate(password, function () {\n                _this4.resetWizardContinue();\n              });\n            } else {\n              _this4.resetWizardContinue();\n            }\n          });\n        }\n      } else {\n        this.resetWizardContinue();\n      }\n    },\n    resetWizardContinue: function resetWizardContinue() {\n      this.resuming = false;\n      if (this.rpc && this.rpc.wizardSettings) {\n        this.rpc.wizardSettings.completedStep = null;\n        this.rpc.wizardSettings.wizardComplete = false;\n      }\n      this.openSetup();\n    },\n    resumeWizard: function resumeWizard() {\n      var _this5 = this;\n      var password = prompt('Please enter admin password');\n      Util.authenticate(password, function () {\n        _this5.openSetup();\n      });\n    },\n    openSetup: function openSetup() {\n      this.showInternetSetup = true;\n      // this.$emit('open-setup') // Replace this with your logic to display the setup wizard\n    },\n    login: function login() {\n      window.location = \"\".concat(this.rpc.remoteUrl, \"appliances/add/\").concat(this.rpc.serverUID);\n    },\n    createAccount: function createAccount() {\n      window.location = \"\".concat(this.rpc.remoteUrl, \"/login/create-account/add-appliance/\").concat(this.rpc.serverUID);\n    }\n  }\n};","map":{"version":3,"names":["Util","Internet","name","components","data","showInternetSetup","resuming","remoteReachable","rpc","computed","logo","$vuetify","theme","isDark","showIntro","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","console","log","initializeRpc","checkRemoteReachability","checkWizardStatus","t0","error","stop","methods","_this2","_callee2","result","_callee2$","_context2","window","setup","Promise","resolve","reject","getSetupWizardStartupInfo","res","err","sent","_objectSpread","Error","_this3","setTimeout","getRemoteReachable","wizardSettings","wizardComplete","completedStep","resetWizard","_this4","remote","setRpcJsonrpc","resetWizardContinue","authenticate","isNonDefaultPassword","password","prompt","openSetup","resumeWizard","_this5","login","location","concat","remoteUrl","serverUID","createAccount"],"sources":["src/Setup_wizard/SetupMain.vue"],"sourcesContent":["<template>\n  <div class=\"content-wrapper\">\n    <!-- Intro Section -->\n    <div v-if=\"!showInternetSetup\" :class=\"{ 'intro': !remoteReachable, 'fadein': true }\">\n      <div v-if=\"rpc\" class=\"setup-main\" :style=\"{ padding: '20px' }\">\n        <div v-if=\"showIntro\" class=\"intro\">\n          <img :src=\"require(`@/assets/${logo}`)\" height=\"48\" />\n          <h1>{{ `Thanks for choosing ${rpc.oemShortName}!` }}</h1>\n        </div>\n\n        <div v-if=\"!rpc.remote\">\n          <!-- Local Setup Wizard Configuration -->\n          <p>\n            {{ `A wizard will guide you through the initial setup and configuration of the ${rpc.oemProductName}.` }}\n          </p>\n          <div class=\"button-group\">\n            <button v-if=\"resuming\" @click=\"resumeWizard\">Resume Setup Wizard</button>\n            <button class=\"btn warning-btn\" @click=\"resetWizard\">\n              {{ !resuming ? 'Run Setup Wizard' : 'Restart' }}\n            </button>\n          </div>\n        </div>\n\n        <div v-else>\n          <!-- Remote Configuration -->\n          <p v-if=\"remoteReachable === null\">\n            <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\"></i> Checking Internet connectivity...\n          </p>\n          <p v-if=\"remoteReachable\">\n            To continue, you must log in using your ETM Dashboard account. If you do not have one, you can create a free\n            account.\n          </p>\n          <div v-if=\"remoteReachable\" class=\"button-wrapper\">\n            <div class=\"button-container\">\n              <button class=\"btn primary-btn\" @click=\"login\">Log In</button>\n              <button class=\"btn secondary-btn\" @click=\"createAccount\">Create Account</button>\n            </div>\n            <!-- <button class=\"btn warning-btn\" @click=\"resetWizard\">\n              {{ !resuming ? 'Run Setup Wizard' : 'Restart' }}\n            </button> -->\n          </div>\n          <p v-if=\"remoteReachable === false\">\n            To continue, you must connect to ETM Dashboard, which is currently unreachable from this device. Configure\n            Internet connectivity to proceed.\n          </p>\n          <button v-if=\"remoteReachable === false\" class=\"btn warning-btn\" @click=\"resetWizard\">\n            Configure Internet\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Internet Component -->\n    <Internet\n      v-if=\"showInternetSetup\"\n      :setup-rpc=\"rpc\"\n      :remote-reachable=\"remoteReachable\"\n      @back=\"showInternetSetup = false\"\n      @resetWizard=\"resetWizard\"\n    />\n  </div>\n</template>\n\n<script>\n  import Util from '@/util/setupUtils'\n  import Internet from '@/Setup_wizard/step/Internet.vue'\n\n  export default {\n    name: 'SetupMain',\n    components: {\n      Internet,\n    },\n    data() {\n      return {\n        showInternetSetup: false,\n        resuming: false,\n        remoteReachable: null,\n        rpc: null, // Initialize rpc as null to track data loading\n      }\n    },\n    computed: {\n      logo() {\n        return this.$vuetify.theme.isDark ? 'arista-logo-white.svg' : 'arista-logo-blue.svg'\n      },\n      showIntro() {\n        return true // Add logic if needed\n      },\n    },\n    async mounted() {\n      try {\n        console.log('Initializing RPC...')\n        await this.initializeRpc()\n        this.checkRemoteReachability()\n        this.checkWizardStatus()\n      } catch (error) {\n        console.error('Error initializing RPC:', error)\n      }\n    },\n    methods: {\n      async initializeRpc() {\n        if (window.rpc && window.rpc.setup) {\n          console.log('window.rpc', window.rpc)\n          const result = await new Promise((resolve, reject) => {\n            window.rpc.setup.getSetupWizardStartupInfo((res, err) => {\n              if (err) reject(err)\n              else resolve(res)\n            })\n          })\n          console.log('Setup Wizard Startup Info:', result)\n          this.rpc = { ...window.rpc, ...result } // Merge window.rpc with the result\n          console.log('RPC after assigning startup info:', this.rpc)\n        } else {\n          throw new Error('RPC setup is not available')\n        }\n      },\n      checkRemoteReachability() {\n        setTimeout(() => {\n          if (this.rpc && this.rpc.setup) {\n            this.remoteReachable = this.rpc.setup.getRemoteReachable()\n          }\n        }, 500)\n      },\n      checkWizardStatus() {\n        if (\n          this.rpc &&\n          this.rpc.wizardSettings &&\n          !this.rpc.wizardSettings.wizardComplete &&\n          this.rpc.wizardSettings.completedStep != null\n        ) {\n          this.resuming = true\n        }\n      },\n      resetWizard() {\n        console.log('this.rpc.remote', this.rpc.remote)\n        console.log('this.remoteReachable', this.remoteReachable)\n        console.log(\"Util.setRpcJsonrpc('admin')\", Util.setRpcJsonrpc('admin'))\n        if (this.rpc.remote && !this.remoteReachable) {\n          if (Util.setRpcJsonrpc('admin')) {\n            this.resetWizardContinue()\n          } else {\n            Util.authenticate('passwd', isNonDefaultPassword => {\n              if (isNonDefaultPassword) {\n                const password = prompt('Please enter admin password')\n                Util.authenticate(password, () => {\n                  this.resetWizardContinue()\n                })\n              } else {\n                this.resetWizardContinue()\n              }\n            })\n          }\n        } else {\n          this.resetWizardContinue()\n        }\n      },\n      resetWizardContinue() {\n        this.resuming = false\n        if (this.rpc && this.rpc.wizardSettings) {\n          this.rpc.wizardSettings.completedStep = null\n          this.rpc.wizardSettings.wizardComplete = false\n        }\n        this.openSetup()\n      },\n      resumeWizard() {\n        const password = prompt('Please enter admin password')\n        Util.authenticate(password, () => {\n          this.openSetup()\n        })\n      },\n      openSetup() {\n        this.showInternetSetup = true\n        // this.$emit('open-setup') // Replace this with your logic to display the setup wizard\n      },\n      login() {\n        window.location = `${this.rpc.remoteUrl}appliances/add/${this.rpc.serverUID}`\n      },\n      createAccount() {\n        window.location = `${this.rpc.remoteUrl}/login/create-account/add-appliance/${this.rpc.serverUID}`\n      },\n    },\n  }\n</script>\n\n<style scoped>\n  /* Wrapper for the entire content */\n  .content-wrapper {\n    display: flex;\n    flex-direction: column; /* Stack elements vertically */\n    justify-content: flex-start; /* Align content to the top */\n    align-items: center; /* Center elements horizontally */\n    text-align: center; /* Center-align text content */\n    padding: 20px; /* Add spacing around the content */\n    box-sizing: border-box; /* Include padding and borders in width/height */\n    min-height: 100vh; /* Ensure it takes full viewport height */\n    background-color: #f9f9f9; /* Optional: Add a light background color */\n  }\n\n  /* Paragraph styling for spacing */\n  p {\n    margin-bottom: 15px; /* Add spacing between paragraphs */\n    font-size: 16px; /* Adjust font size */\n    color: #333; /* Text color */\n  }\n\n  /* Button container for spacing */\n\n  .button-container {\n    display: flex; /* Align buttons horizontally */\n    flex-direction: row; /* Default is row, so not strictly necessary */\n    justify-content: center; /* Center the buttons horizontally */\n    gap: 20px; /* Add horizontal spacing between the buttons */\n    margin-top: 20px; /* Optional: Add spacing above the container */\n  }\n\n  /* General Button Styles */\n  .btn {\n    padding: 12px 24px;\n    border-radius: 5px;\n    font-size: 16px;\n    font-weight: bold;\n    cursor: pointer;\n    border: none;\n    transition: all 0.3s ease-in-out;\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  /* Primary Button */\n  .primary-btn {\n    background-color: #007bff;\n    color: #fff;\n  }\n\n  .primary-btn:hover {\n    background-color: #0056b3;\n    transform: scale(1.05);\n  }\n\n  /* Secondary Button */\n  .secondary-btn {\n    background-color: #6c757d;\n    color: #fff;\n  }\n\n  .secondary-btn:hover {\n    background-color: #5a6268;\n    transform: scale(1.05);\n  }\n\n  /* Warning Button */\n  .warning-btn {\n    background-color: #ffc107;\n    color: #000;\n    margin-top: 15px; /* Add spacing from other elements */\n  }\n\n  .warning-btn:hover {\n    background-color: #e0a800;\n    transform: scale(1.05);\n  }\n</style>\n"],"mappings":";;;;;;;;AAgEA,OAAAA,IAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF,QAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,iBAAA;MACAC,QAAA;MACAC,eAAA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACAC,IAAA,WAAAA,KAAA;MACA,YAAAC,QAAA,CAAAC,KAAA,CAAAC,MAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MACA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAEAE,OAAA,CAAAC,GAAA;YAAAJ,QAAA,CAAAE,IAAA;YAAA,OACAT,KAAA,CAAAY,aAAA;UAAA;YACAZ,KAAA,CAAAa,uBAAA;YACAb,KAAA,CAAAc,iBAAA;YAAAP,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAQ,EAAA,GAAAR,QAAA;YAEAG,OAAA,CAAAM,KAAA,4BAAAT,QAAA,CAAAQ,EAAA;UAAA;UAAA;YAAA,OAAAR,QAAA,CAAAU,IAAA;QAAA;MAAA,GAAAb,OAAA;IAAA;EAEA;EACAc,OAAA;IACAN,aAAA,WAAAA,cAAA;MAAA,IAAAO,MAAA;MAAA,OAAAlB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAiB,SAAA;QAAA,IAAAC,MAAA;QAAA,OAAAnB,mBAAA,GAAAG,IAAA,UAAAiB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;YAAA;cAAA,MACAe,MAAA,CAAAhC,GAAA,IAAAgC,MAAA,CAAAhC,GAAA,CAAAiC,KAAA;gBAAAF,SAAA,CAAAd,IAAA;gBAAA;cAAA;cACAC,OAAA,CAAAC,GAAA,eAAAa,MAAA,CAAAhC,GAAA;cAAA+B,SAAA,CAAAd,IAAA;cAAA,OACA,IAAAiB,OAAA,WAAAC,OAAA,EAAAC,MAAA;gBACAJ,MAAA,CAAAhC,GAAA,CAAAiC,KAAA,CAAAI,yBAAA,WAAAC,GAAA,EAAAC,GAAA;kBACA,IAAAA,GAAA,EAAAH,MAAA,CAAAG,GAAA,OACAJ,OAAA,CAAAG,GAAA;gBACA;cACA;YAAA;cALAT,MAAA,GAAAE,SAAA,CAAAS,IAAA;cAMAtB,OAAA,CAAAC,GAAA,+BAAAU,MAAA;cACAF,MAAA,CAAA3B,GAAA,GAAAyC,aAAA,CAAAA,aAAA,KAAAT,MAAA,CAAAhC,GAAA,GAAA6B,MAAA;cACAX,OAAA,CAAAC,GAAA,sCAAAQ,MAAA,CAAA3B,GAAA;cAAA+B,SAAA,CAAAd,IAAA;cAAA;YAAA;cAAA,MAEA,IAAAyB,KAAA;YAAA;YAAA;cAAA,OAAAX,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAEA;IACAP,uBAAA,WAAAA,wBAAA;MAAA,IAAAsB,MAAA;MACAC,UAAA;QACA,IAAAD,MAAA,CAAA3C,GAAA,IAAA2C,MAAA,CAAA3C,GAAA,CAAAiC,KAAA;UACAU,MAAA,CAAA5C,eAAA,GAAA4C,MAAA,CAAA3C,GAAA,CAAAiC,KAAA,CAAAY,kBAAA;QACA;MACA;IACA;IACAvB,iBAAA,WAAAA,kBAAA;MACA,IACA,KAAAtB,GAAA,IACA,KAAAA,GAAA,CAAA8C,cAAA,IACA,MAAA9C,GAAA,CAAA8C,cAAA,CAAAC,cAAA,IACA,KAAA/C,GAAA,CAAA8C,cAAA,CAAAE,aAAA,UACA;QACA,KAAAlD,QAAA;MACA;IACA;IACAmD,WAAA,WAAAA,YAAA;MAAA,IAAAC,MAAA;MACAhC,OAAA,CAAAC,GAAA,yBAAAnB,GAAA,CAAAmD,MAAA;MACAjC,OAAA,CAAAC,GAAA,8BAAApB,eAAA;MACAmB,OAAA,CAAAC,GAAA,gCAAA3B,IAAA,CAAA4D,aAAA;MACA,SAAApD,GAAA,CAAAmD,MAAA,UAAApD,eAAA;QACA,IAAAP,IAAA,CAAA4D,aAAA;UACA,KAAAC,mBAAA;QACA;UACA7D,IAAA,CAAA8D,YAAA,qBAAAC,oBAAA;YACA,IAAAA,oBAAA;cACA,IAAAC,QAAA,GAAAC,MAAA;cACAjE,IAAA,CAAA8D,YAAA,CAAAE,QAAA;gBACAN,MAAA,CAAAG,mBAAA;cACA;YACA;cACAH,MAAA,CAAAG,mBAAA;YACA;UACA;QACA;MACA;QACA,KAAAA,mBAAA;MACA;IACA;IACAA,mBAAA,WAAAA,oBAAA;MACA,KAAAvD,QAAA;MACA,SAAAE,GAAA,SAAAA,GAAA,CAAA8C,cAAA;QACA,KAAA9C,GAAA,CAAA8C,cAAA,CAAAE,aAAA;QACA,KAAAhD,GAAA,CAAA8C,cAAA,CAAAC,cAAA;MACA;MACA,KAAAW,SAAA;IACA;IACAC,YAAA,WAAAA,aAAA;MAAA,IAAAC,MAAA;MACA,IAAAJ,QAAA,GAAAC,MAAA;MACAjE,IAAA,CAAA8D,YAAA,CAAAE,QAAA;QACAI,MAAA,CAAAF,SAAA;MACA;IACA;IACAA,SAAA,WAAAA,UAAA;MACA,KAAA7D,iBAAA;MACA;IACA;IACAgE,KAAA,WAAAA,MAAA;MACA7B,MAAA,CAAA8B,QAAA,MAAAC,MAAA,MAAA/D,GAAA,CAAAgE,SAAA,qBAAAD,MAAA,MAAA/D,GAAA,CAAAiE,SAAA;IACA;IACAC,aAAA,WAAAA,cAAA;MACAlC,MAAA,CAAA8B,QAAA,MAAAC,MAAA,MAAA/D,GAAA,CAAAgE,SAAA,0CAAAD,MAAA,MAAA/D,GAAA,CAAAiE,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}