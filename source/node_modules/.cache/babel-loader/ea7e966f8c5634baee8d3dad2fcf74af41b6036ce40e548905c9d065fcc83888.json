{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { VSpacer, VIcon, VCheckbox } from 'vuetify/lib';\nimport cloneDeep from 'lodash/cloneDeep';\nimport SiteDialog from './SiteDialog.vue';\nexport default {\n  components: {\n    VSpacer: VSpacer,\n    VIcon: VIcon,\n    VCheckbox: VCheckbox\n  },\n  props: {\n    // the sync list of sites passed from `main`\n    list: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    // denotes `block` or `pass` list type\n    type: {\n      type: String,\n      \"default\": 'block'\n    }\n  },\n  data: function data() {\n    return {\n      filterTerm: null,\n      listCopy: null\n    };\n  },\n  computed: {\n    // returns all or filtered sites based on filter term\n    filteredSites: function filteredSites() {\n      var _this = this;\n      var list = this.listCopy;\n      if (this.filterTerm) {\n        return this.list.filter(function (site) {\n          var _site$name, _this$filterTerm, _site$description, _this$filterTerm2;\n          return ((_site$name = site.name) === null || _site$name === void 0 ? void 0 : _site$name.toLowerCase().includes((_this$filterTerm = _this.filterTerm) === null || _this$filterTerm === void 0 ? void 0 : _this$filterTerm.toLowerCase())) || ((_site$description = site.description) === null || _site$description === void 0 ? void 0 : _site$description.toLowerCase().includes((_this$filterTerm2 = _this.filterTerm) === null || _this$filterTerm2 === void 0 ? void 0 : _this$filterTerm2.toLowerCase()));\n        });\n      }\n      return list;\n    }\n  },\n  watch: {\n    // updates the list in `main`\n    list: {\n      immediate: true,\n      deep: true,\n      handler: function handler(value) {\n        this.listCopy = cloneDeep(value);\n      }\n    }\n  },\n  methods: {\n    toggleFlag: function toggleFlag(value, idx, type) {\n      var list = cloneDeep(this.list);\n      list[idx][type] = value || false;\n      if (type === 'enabled' && value) {\n        list[idx].flagged = value;\n      }\n      this.$emit('update:list', list);\n    },\n    siteDialog: function siteDialog(site) {\n      var index = this.list.findIndex(function (s) {\n        return s.name === (site === null || site === void 0 ? void 0 : site.name);\n      });\n      this.$vuntangle.dialog.show({\n        title: this.type === 'block' ? this.$t('block_site') : this.$t('pass_site'),\n        component: SiteDialog,\n        componentProps: {\n          list: this.list,\n          type: this.type,\n          index: index\n        },\n        width: 600\n      });\n    },\n    siteRemove: function siteRemove(site) {\n      var index = this.list.findIndex(function (s) {\n        return s.name === (site === null || site === void 0 ? void 0 : site.name);\n      });\n      this.listCopy.splice(index, 1);\n      this.$emit('update:list', this.listCopy);\n    }\n  }\n};","map":{"version":3,"names":["VSpacer","VIcon","VCheckbox","cloneDeep","SiteDialog","components","props","list","type","Array","default","String","data","filterTerm","listCopy","computed","filteredSites","_this","filter","site","_site$name","_this$filterTerm","_site$description","_this$filterTerm2","name","toLowerCase","includes","description","watch","immediate","deep","handler","value","methods","toggleFlag","idx","flagged","$emit","siteDialog","index","findIndex","s","$vuntangle","dialog","show","title","$t","component","componentProps","width","siteRemove","splice"],"sources":["node_modules/vuntangle/src/shared/SettingsWebFilter/components/Sites.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 class=\"d-flex\">\n      <span>{{ type === 'block' ? $t('block_sites') : $t('pass_sites') }}</span>\n      <v-spacer />\n      <u-btn :min-width=\"null\" @click=\"siteDialog(null)\">{{ $t('add_site') }}</u-btn>\n    </h3>\n\n    <p>{{ type === 'block' ? $t('block_sites_description') : $t('pass_sites_description') }}</p>\n\n    <!-- search filter for sites -->\n    <div class=\"d-flex mb-4\">\n      <u-text-field v-model=\"filterTerm\" :placeholder=\"$t('filter_sites')\" clearable class=\"flex-grow-1\" />\n    </div>\n\n    <template v-if=\"filteredSites.length\">\n      <div v-for=\"(site, idx) in filteredSites\" :key=\"idx\" class=\"d-flex align-start\">\n        <div class=\"d-flex\">\n          <v-checkbox\n            v-model=\"site.enabled\"\n            dense\n            class=\"mt-0 mr-4\"\n            hide-details\n            :label=\"type === 'block' ? $t('block') : $t('pass')\"\n            :color=\"type === 'block' ? 'red' : 'aristaBlue'\"\n            @change=\"toggleFlag($event, idx, 'enabled')\"\n          />\n          <v-checkbox\n            v-model=\"site.flagged\"\n            dense\n            class=\"mt-0\"\n            hide-details\n            :label=\"$t('flag')\"\n            :disabled=\"site.enabled && type === 'block'\"\n            @change=\"toggleFlag($event, idx, 'flagged')\"\n          />\n        </div>\n        <div class=\"mx-6 mt-1\">\n          <h4\n            v-html=\"\n              `${$options.filters.highlight($t(site.name), filterTerm)}\n               ${site.exact ? '<span class=\\'font-weight-light\\'>(' + $t('exact_match') + ')</span>' : ''}`\n            \"\n          />\n          <p\n            class=\"body-2\"\n            style=\"line-height: 1.2\"\n            v-html=\"$options.filters.highlight($t(site.description), filterTerm)\"\n          />\n        </div>\n        <v-spacer />\n        <div class=\"d-flex align-center\">\n          <!-- <v-checkbox v-model=\"site.exact\" dense class=\"mr-8 pa-0\" hide-details :label=\"$t('exact_match')\" /> -->\n          <u-btn icon :min-width=\"null\" :small=\"false\" class=\"mr-2\" @click=\"siteDialog(site)\">\n            <v-icon dense>mdi-pencil</v-icon>\n          </u-btn>\n          <u-btn icon :min-width=\"null\" :small=\"false\" color=\"red\" @click=\"siteRemove(site)\">\n            <v-icon>mdi-delete</v-icon>\n          </u-btn>\n        </div>\n      </div>\n    </template>\n    <template v-else-if=\"listCopy.length\">\n      <div class=\"text-center\">\n        <p class=\"body-1 mt-12\"><v-icon dense class=\"mr-2\">mdi-information</v-icon>{{ $t('no_sites') }}</p>\n        <u-btn @click=\"filterTerm = null\">{{ $t('clear_filters') }}</u-btn>\n      </div>\n    </template>\n    <template v-else>\n      <div class=\"text-center\">\n        <p class=\"body-1 mt-12\"><v-icon dense class=\"mr-2\">mdi-information</v-icon>{{ $t('no_sites') }}</p>\n      </div>\n    </template>\n  </div>\n</template>\n<script>\n  import { VSpacer, VIcon, VCheckbox } from 'vuetify/lib'\n  import cloneDeep from 'lodash/cloneDeep'\n  import SiteDialog from './SiteDialog.vue'\n\n  export default {\n    components: { VSpacer, VIcon, VCheckbox },\n    props: {\n      // the sync list of sites passed from `main`\n      list: { type: Array, default: () => [] },\n      // denotes `block` or `pass` list type\n      type: { type: String, default: 'block' },\n    },\n    data() {\n      return {\n        filterTerm: null,\n        listCopy: null,\n      }\n    },\n\n    computed: {\n      // returns all or filtered sites based on filter term\n      filteredSites() {\n        const list = this.listCopy\n        if (this.filterTerm) {\n          return this.list.filter(site => {\n            return (\n              site.name?.toLowerCase().includes(this.filterTerm?.toLowerCase()) ||\n              site.description?.toLowerCase().includes(this.filterTerm?.toLowerCase())\n            )\n          })\n        }\n        return list\n      },\n    },\n\n    watch: {\n      // updates the list in `main`\n      list: {\n        immediate: true,\n        deep: true,\n        handler(value) {\n          this.listCopy = cloneDeep(value)\n        },\n      },\n    },\n\n    methods: {\n      toggleFlag(value, idx, type) {\n        const list = cloneDeep(this.list)\n        list[idx][type] = value || false\n        if (type === 'enabled' && value) {\n          list[idx].flagged = value\n        }\n        this.$emit('update:list', list)\n      },\n\n      siteDialog(site) {\n        const index = this.list.findIndex(s => s.name === site?.name)\n        this.$vuntangle.dialog.show({\n          title: this.type === 'block' ? this.$t('block_site') : this.$t('pass_site'),\n          component: SiteDialog,\n          componentProps: {\n            list: this.list,\n            type: this.type,\n            index,\n          },\n          width: 600,\n        })\n      },\n\n      siteRemove(site) {\n        const index = this.list.findIndex(s => s.name === site?.name)\n        this.listCopy.splice(index, 1)\n        this.$emit('update:list', this.listCopy)\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;;;;;AA4EA,SAAAA,OAAA,EAAAC,KAAA,EAAAC,SAAA;AACA,OAAAC,SAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IAAAL,OAAA,EAAAA,OAAA;IAAAC,KAAA,EAAAA,KAAA;IAAAC,SAAA,EAAAA;EAAA;EACAI,KAAA;IACA;IACAC,IAAA;MAAAC,IAAA,EAAAC,KAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;IACA;IACAF,IAAA;MAAAA,IAAA,EAAAG,MAAA;MAAA;IAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA;MACAC,QAAA;IACA;EACA;EAEAC,QAAA;IACA;IACAC,aAAA,WAAAA,cAAA;MAAA,IAAAC,KAAA;MACA,IAAAV,IAAA,QAAAO,QAAA;MACA,SAAAD,UAAA;QACA,YAAAN,IAAA,CAAAW,MAAA,WAAAC,IAAA;UAAA,IAAAC,UAAA,EAAAC,gBAAA,EAAAC,iBAAA,EAAAC,iBAAA;UACA,OACA,EAAAH,UAAA,GAAAD,IAAA,CAAAK,IAAA,cAAAJ,UAAA,uBAAAA,UAAA,CAAAK,WAAA,GAAAC,QAAA,EAAAL,gBAAA,GAAAJ,KAAA,CAAAJ,UAAA,cAAAQ,gBAAA,uBAAAA,gBAAA,CAAAI,WAAA,UAAAH,iBAAA,GACAH,IAAA,CAAAQ,WAAA,cAAAL,iBAAA,uBAAAA,iBAAA,CAAAG,WAAA,GAAAC,QAAA,EAAAH,iBAAA,GAAAN,KAAA,CAAAJ,UAAA,cAAAU,iBAAA,uBAAAA,iBAAA,CAAAE,WAAA;QAEA;MACA;MACA,OAAAlB,IAAA;IACA;EACA;EAEAqB,KAAA;IACA;IACArB,IAAA;MACAsB,SAAA;MACAC,IAAA;MACAC,OAAA,WAAAA,QAAAC,KAAA;QACA,KAAAlB,QAAA,GAAAX,SAAA,CAAA6B,KAAA;MACA;IACA;EACA;EAEAC,OAAA;IACAC,UAAA,WAAAA,WAAAF,KAAA,EAAAG,GAAA,EAAA3B,IAAA;MACA,IAAAD,IAAA,GAAAJ,SAAA,MAAAI,IAAA;MACAA,IAAA,CAAA4B,GAAA,EAAA3B,IAAA,IAAAwB,KAAA;MACA,IAAAxB,IAAA,kBAAAwB,KAAA;QACAzB,IAAA,CAAA4B,GAAA,EAAAC,OAAA,GAAAJ,KAAA;MACA;MACA,KAAAK,KAAA,gBAAA9B,IAAA;IACA;IAEA+B,UAAA,WAAAA,WAAAnB,IAAA;MACA,IAAAoB,KAAA,QAAAhC,IAAA,CAAAiC,SAAA,WAAAC,CAAA;QAAA,OAAAA,CAAA,CAAAjB,IAAA,MAAAL,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAAK,IAAA;MAAA;MACA,KAAAkB,UAAA,CAAAC,MAAA,CAAAC,IAAA;QACAC,KAAA,OAAArC,IAAA,oBAAAsC,EAAA,sBAAAA,EAAA;QACAC,SAAA,EAAA3C,UAAA;QACA4C,cAAA;UACAzC,IAAA,OAAAA,IAAA;UACAC,IAAA,OAAAA,IAAA;UACA+B,KAAA,EAAAA;QACA;QACAU,KAAA;MACA;IACA;IAEAC,UAAA,WAAAA,WAAA/B,IAAA;MACA,IAAAoB,KAAA,QAAAhC,IAAA,CAAAiC,SAAA,WAAAC,CAAA;QAAA,OAAAA,CAAA,CAAAjB,IAAA,MAAAL,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAAK,IAAA;MAAA;MACA,KAAAV,QAAA,CAAAqC,MAAA,CAAAZ,KAAA;MACA,KAAAF,KAAA,qBAAAvB,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}