{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { VChip, VRow, VCol, VIcon } from 'vuetify/lib';\nimport cloneDeep from 'lodash/cloneDeep';\nexport default {\n  components: {\n    VChip: VChip,\n    VRow: VRow,\n    VCol: VCol,\n    VIcon: VIcon\n  },\n  inject: ['$intf', '$interfaceTrackers'],\n  data: function data(_ref) {\n    var $intf = _ref.$intf;\n    var intf = $intf();\n    return {\n      adding: false,\n      // boolean telling to show the add fields\n      tracked: {},\n      // model for new object\n      list: cloneDeep((intf === null || intf === void 0 ? void 0 : intf.vrrptrack) || [])\n    };\n  },\n  computed: {\n    intf: function intf(_ref2) {\n      var $intf = _ref2.$intf;\n      return $intf();\n    },\n    trackers: function trackers(_ref3) {\n      var $interfaceTrackers = _ref3.$interfaceTrackers;\n      return $interfaceTrackers();\n    }\n  },\n  watch: {\n    adding: function adding(value) {\n      if (!value) {\n        // reset\n        this.tracked = {};\n      }\n    },\n    list: {\n      deep: true,\n      handler: function handler(newList) {\n        // using $set to maintain reactivity in case vrrptrack don't exist in interface settings\n        this.$set(this.intf, 'vrrptrack', newList);\n      }\n    }\n  },\n  methods: {\n    onAddObject: function onAddObject() {\n      this.list.push(this.tracked);\n      this.adding = false;\n    },\n    onRemoveObject: function onRemoveObject(index) {\n      this.list.splice(index, 1);\n    },\n    mapNameToDisplayName: function mapNameToDisplayName(name) {\n      var _this$trackers$find;\n      return (_this$trackers$find = this.trackers.find(function (tracker) {\n        return tracker.name === name;\n      })) === null || _this$trackers$find === void 0 ? void 0 : _this$trackers$find.displayName;\n    }\n  }\n};","map":{"version":3,"names":["VChip","VRow","VCol","VIcon","cloneDeep","components","inject","data","_ref","$intf","intf","adding","tracked","list","vrrptrack","computed","_ref2","trackers","_ref3","$interfaceTrackers","watch","value","deep","handler","newList","$set","methods","onAddObject","push","onRemoveObject","index","splice","mapNameToDisplayName","name","_this$trackers$find","find","tracker","displayName"],"sources":["node_modules/vuntangle/src/shared/SettingsInterface/components/vrrp/VrrpTracking.vue"],"sourcesContent":["<template>\n  <div>\n    <p class=\"font-weight-bold mt-6 mb-2\">{{ $t('vrrp_tracking') }}</p>\n    <em v-if=\"!list || !list.length\" class=\"mr-2\">{{ $t('no_interface_trackers') }}</em>\n    <v-chip v-for=\"(item, idx) in list\" :key=\"idx\" class=\"mr-1 mb-1\" small close @click:close=\"onRemoveObject(idx)\">\n      {{ mapNameToDisplayName(item.name) }} / {{ item.decrement }}\n    </v-chip>\n    <v-chip v-if=\"!adding\" class=\"mb-1\" small color=\"primary\" @click=\"adding = true\">{{ $t('attach') }}</v-chip>\n\n    <ValidationObserver v-slot=\"{ passes }\" tag=\"div\">\n      <v-row v-if=\"adding\" no-gutters class=\"mt-2\">\n        <v-col class=\"grow\">\n          <!-- tracked object -->\n          <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n            <u-select\n              v-model=\"tracked.name\"\n              :items=\"trackers\"\n              item-text=\"displayName\"\n              item-value=\"name\"\n              :label=\"$t('interface_tracker')\"\n              :error-messages=\"errors\"\n              class=\"mr-2\"\n            >\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n              <template #no-data>\n                <div class=\"d-flex align-center pa-4 justify-center\">\n                  <span class=\"caption\">{{ $t('no_data') }} </span>\n                </div>\n              </template>\n            </u-select>\n          </ValidationProvider>\n        </v-col>\n        <v-col class=\"grow\">\n          <!-- decrement -->\n          <ValidationProvider v-slot=\"{ errors }\" rules=\"required|numeric|integer|min_value:1|max_value:254\">\n            <u-text-field\n              v-model.number=\"tracked.decrement\"\n              type=\"number\"\n              :label=\"$t('decrement')\"\n              :error-messages=\"errors\"\n              :hint=\"$t('vrrp_decremnet_hint')\"\n              :hide-details=\"false\"\n              persistent-hint\n            >\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n            </u-text-field>\n          </ValidationProvider>\n        </v-col>\n        <v-col class=\"shrink\">\n          <u-btn icon :small=\"false\" :min-width=\"null\" class=\"primary mx-4\" @click=\"passes(onAddObject)\">\n            <v-icon color=\"white\">mdi-check</v-icon>\n          </u-btn>\n        </v-col>\n        <v-col class=\"shrink\">\n          <u-btn icon :small=\"false\" :min-width=\"null\" @click=\"adding = false\"><v-icon>mdi-close</v-icon></u-btn>\n        </v-col>\n      </v-row>\n    </ValidationObserver>\n  </div>\n</template>\n<script>\n  import { VChip, VRow, VCol, VIcon } from 'vuetify/lib'\n  import cloneDeep from 'lodash/cloneDeep'\n\n  export default {\n    components: { VChip, VRow, VCol, VIcon },\n    inject: ['$intf', '$interfaceTrackers'],\n\n    data({ $intf }) {\n      const intf = $intf()\n      return {\n        adding: false, // boolean telling to show the add fields\n        tracked: {}, // model for new object\n        list: cloneDeep(intf?.vrrptrack || []),\n      }\n    },\n    computed: {\n      intf: ({ $intf }) => $intf(),\n      trackers: ({ $interfaceTrackers }) => $interfaceTrackers(),\n    },\n    watch: {\n      adding(value) {\n        if (!value) {\n          // reset\n          this.tracked = {}\n        }\n      },\n      list: {\n        deep: true,\n        handler(newList) {\n          // using $set to maintain reactivity in case vrrptrack don't exist in interface settings\n          this.$set(this.intf, 'vrrptrack', newList)\n        },\n      },\n    },\n    methods: {\n      onAddObject() {\n        this.list.push(this.tracked)\n        this.adding = false\n      },\n      onRemoveObject(index) {\n        this.list.splice(index, 1)\n      },\n      mapNameToDisplayName(name) {\n        return this.trackers.find(tracker => tracker.name === name)?.displayName\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;AA6DA,SAAAA,KAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,KAAA;AACA,OAAAC,SAAA;AAEA;EACAC,UAAA;IAAAL,KAAA,EAAAA,KAAA;IAAAC,IAAA,EAAAA,IAAA;IAAAC,IAAA,EAAAA,IAAA;IAAAC,KAAA,EAAAA;EAAA;EACAG,MAAA;EAEAC,IAAA,WAAAA,KAAAC,IAAA;IAAA,IAAAC,KAAA,GAAAD,IAAA,CAAAC,KAAA;IACA,IAAAC,IAAA,GAAAD,KAAA;IACA;MACAE,MAAA;MAAA;MACAC,OAAA;MAAA;MACAC,IAAA,EAAAT,SAAA,EAAAM,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAAI,SAAA;IACA;EACA;EACAC,QAAA;IACAL,IAAA,WAAAA,KAAAM,KAAA;MAAA,IAAAP,KAAA,GAAAO,KAAA,CAAAP,KAAA;MAAA,OAAAA,KAAA;IAAA;IACAQ,QAAA,WAAAA,SAAAC,KAAA;MAAA,IAAAC,kBAAA,GAAAD,KAAA,CAAAC,kBAAA;MAAA,OAAAA,kBAAA;IAAA;EACA;EACAC,KAAA;IACAT,MAAA,WAAAA,OAAAU,KAAA;MACA,KAAAA,KAAA;QACA;QACA,KAAAT,OAAA;MACA;IACA;IACAC,IAAA;MACAS,IAAA;MACAC,OAAA,WAAAA,QAAAC,OAAA;QACA;QACA,KAAAC,IAAA,MAAAf,IAAA,eAAAc,OAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAd,IAAA,CAAAe,IAAA,MAAAhB,OAAA;MACA,KAAAD,MAAA;IACA;IACAkB,cAAA,WAAAA,eAAAC,KAAA;MACA,KAAAjB,IAAA,CAAAkB,MAAA,CAAAD,KAAA;IACA;IACAE,oBAAA,WAAAA,qBAAAC,IAAA;MAAA,IAAAC,mBAAA;MACA,QAAAA,mBAAA,QAAAjB,QAAA,CAAAkB,IAAA,WAAAC,OAAA;QAAA,OAAAA,OAAA,CAAAH,IAAA,KAAAA,IAAA;MAAA,gBAAAC,mBAAA,uBAAAA,mBAAA,CAAAG,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}