{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport api from '@/plugins/api';\nexport default {\n  data: function data() {\n    return {\n      credentials: {\n        username: 'admin',\n        password: 'passwd'\n      },\n      error: false,\n      // boolean used to reveal password field\n      passwordReveal: false,\n      /**\n       * Workaround for email/password autocomplete overlapping vuetify label/placeholder behavior.  Once\n       * the field has had focus the vuetify label behavior will work like normal.\n       */\n      usernameHadFocus: false,\n      passwordHadFocus: false\n    };\n  },\n  computed: {\n    logo: function logo() {\n      return this.$vuetify.theme.isDark ? 'arista-logo-white.svg' : 'arista-logo-blue.svg';\n    }\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.error = false;\n              _context.next = 3;\n              return api.post('/auth/login?url=/admin&realm=Administrator', _this.credentials);\n            case 3:\n              response = _context.sent;\n              // if (response.)\n              if (!response.data.includes('login-form')) {\n                _this.$router.push({\n                  name: 'home'\n                });\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["api","data","credentials","username","password","error","passwordReveal","usernameHadFocus","passwordHadFocus","computed","logo","$vuetify","theme","isDark","methods","login","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","post","sent","includes","$router","push","name","stop"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <v-container class=\"d-flex\">\n    <div class=\"d-flex flex-column align-center mt-15\">\n      <v-img :src=\"require(`@/assets/${logo}`)\" width=\"240\" height=\"40\" contain />\n      <p class=\"aristaBlue--text font-weight-bold text-h6\">NGFW</p>\n      <v-card-title>{{ $t('sign_in') }}</v-card-title>\n      <div style=\"position: relative\">\n        <v-divider class=\"mb-8\" />\n        <u-alert v-if=\"error\" :error=\"true\" class=\"body-2 mb-4\">\n          <div v-html=\"$t('invalid_username_or_password')\" />\n        </u-alert>\n        <ValidationObserver ref=\"obs\" v-slot=\"{ passes }\">\n          <v-form>\n            <ValidationProvider v-slot=\"{ errors }\" name=\"username\" rules=\"required\">\n              <u-text-field\n                v-model=\"credentials.username\"\n                class=\"mb-4\"\n                :label=\"usernameHadFocus ? $t('username') : ''\"\n                prepend-inner-icon=\"mdi-account\"\n                :error-messages=\"errors\"\n                :dense=\"false\"\n                :placeholder=\"$t('username')\"\n                @keyup=\"$event.keyCode === 13 ? passes(login) : null\"\n                @focus=\"usernameHadFocus = true\"\n              >\n                <template v-if=\"errors.length\" #append>\n                  <u-errors-tooltip :errors=\"errors\" />\n                </template>\n              </u-text-field>\n            </ValidationProvider>\n            <ValidationProvider v-slot=\"{ errors }\" name=\"password\" rules=\"required\">\n              <u-text-field\n                v-model=\"credentials.password\"\n                :append-icon=\"passwordReveal ? 'mdi-eye' : 'mdi-eye-off'\"\n                :type=\"passwordReveal ? 'text' : 'password'\"\n                :label=\"passwordHadFocus ? $t('password') : ''\"\n                :error-messages=\"errors\"\n                :dense=\"false\"\n                class=\"mb-4\"\n                prepend-inner-icon=\"mdi-lock\"\n                :placeholder=\"$t('password')\"\n                @click:append=\"passwordReveal = !passwordReveal\"\n                @keyup=\"$event.keyCode === 13 ? passes(login) : null\"\n                @focus=\"passwordHadFocus = true\"\n              >\n                <template v-if=\"errors.length\" #append>\n                  <u-errors-tooltip :errors=\"errors\" />\n                </template>\n              </u-text-field>\n            </ValidationProvider>\n            <v-btn large block depressed color=\"primary\" @click=\"passes(login)\">\n              {{ $t('sign_in') }}\n            </v-btn>\n          </v-form>\n        </ValidationObserver>\n      </div>\n    </div>\n  </v-container>\n</template>\n<script>\n  import api from '@/plugins/api'\n\n  export default {\n    data() {\n      return {\n        credentials: {\n          username: 'admin',\n          password: 'passwd',\n        },\n        error: false,\n\n        // boolean used to reveal password field\n        passwordReveal: false,\n\n        /**\n         * Workaround for email/password autocomplete overlapping vuetify label/placeholder behavior.  Once\n         * the field has had focus the vuetify label behavior will work like normal.\n         */\n        usernameHadFocus: false,\n        passwordHadFocus: false,\n      }\n    },\n\n    computed: {\n      logo() {\n        return this.$vuetify.theme.isDark ? 'arista-logo-white.svg' : 'arista-logo-blue.svg'\n      },\n    },\n\n    methods: {\n      async login() {\n        this.error = false\n        const response = await api.post('/auth/login?url=/admin&realm=Administrator', this.credentials)\n        // if (response.)\n        if (!response.data.includes('login-form')) {\n          this.$router.push({ name: 'home' })\n        }\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;AA4DA,OAAAA,GAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,WAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;MAEA;MACAC,cAAA;MAEA;AACA;AACA;AACA;MACAC,gBAAA;MACAC,gBAAA;IACA;EACA;EAEAC,QAAA;IACAC,IAAA,WAAAA,KAAA;MACA,YAAAC,QAAA,CAAAC,KAAA,CAAAC,MAAA;IACA;EACA;EAEAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAV,KAAA,CAAAX,KAAA;cAAAmB,QAAA,CAAAE,IAAA;cAAA,OACA1B,GAAA,CAAA2B,IAAA,+CAAAX,KAAA,CAAAd,WAAA;YAAA;cAAAmB,QAAA,GAAAG,QAAA,CAAAI,IAAA;cACA;cACA,KAAAP,QAAA,CAAApB,IAAA,CAAA4B,QAAA;gBACAb,KAAA,CAAAc,OAAA,CAAAC,IAAA;kBAAAC,IAAA;gBAAA;cACA;YAAA;YAAA;cAAA,OAAAR,QAAA,CAAAS,IAAA;UAAA;QAAA,GAAAb,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}