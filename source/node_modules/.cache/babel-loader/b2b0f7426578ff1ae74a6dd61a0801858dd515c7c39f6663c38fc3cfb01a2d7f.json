{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n// import vuetify components\nimport { VList, VMenu, VListItem, VListItemIcon, VIcon, VListItemTitle, VDivider } from 'vuetify/lib';\nimport UCheckbox from '../../UCheckbox';\nexport default {\n  components: {\n    VList: VList,\n    VMenu: VMenu,\n    VListItem: VListItem,\n    VListItemIcon: VListItemIcon,\n    VIcon: VIcon,\n    VListItemTitle: VListItemTitle,\n    VDivider: VDivider,\n    UCheckbox: UCheckbox\n  },\n  props: {\n    params: {\n      type: Object,\n      \"default\": function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      // the columns list that will be populated\n      list: [],\n      // flag telling if a specific of subMenu is shown/visible\n      pinSubMenu: false,\n      columnsSubMenu: false,\n      toolbarSubMenu: false,\n      // flag to position subMenus to the left/top of main menu, if it's the case\n      subMenuLeftPosition: false,\n      subMenuTopPosition: false\n    };\n  },\n  watch: {\n    pinSubMenu: function pinSubMenu(show) {\n      this.positionSubMenus('pinMenu', show);\n    },\n    columnsSubMenu: function columnsSubMenu(show) {\n      this.positionSubMenus('columnsMenu', show);\n    },\n    toolbarSubMenu: function toolbarSubMenu(show) {\n      this.positionSubMenus('toolbarMenu', show);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.constructList();\n    this.params.api.addEventListener('columnMoved', function () {\n      _this.constructList();\n    });\n  },\n  methods: {\n    constructList: function constructList() {\n      var allColumns = this.params.api.columnController.getAllGridColumns();\n      var list = [];\n      allColumns.forEach(function (col) {\n        if (col.colId === 'sel-column' || !col.colDef.headerName) return;\n        list.push({\n          id: col.colId,\n          name: col.colDef.headerName,\n          visible: col.visible,\n          disabled: col.colDef.lockVisible\n        });\n      });\n      this.list = list;\n    },\n    onColumnVisibilityChange: function onColumnVisibilityChange(visible, colId) {\n      this.params.api.columnController.setColumnVisible(colId, visible);\n    },\n    setToolbar: function setToolbar(position) {\n      this.params.setToolbar(position);\n      this.params.api.hidePopupMenu();\n    },\n    // resets the columns state to the original columnDefs\n    resetColumns: function resetColumns() {\n      this.params.resetColumns();\n      this.params.api.hidePopupMenu();\n    },\n    /**\n     * Computes sub menus positions if they fall outside of the window\n     * to prevent unwanted accessibility and scrolling issues\n     */\n    positionSubMenus: function positionSubMenus(subMenuRef, show) {\n      if (!show) {\n        return;\n      }\n      var mainMenu = this.$refs.mainMenu;\n      var left = mainMenu.getBoundingClientRect().left;\n      var width = mainMenu.offsetWidth;\n      var top = mainMenu.getBoundingClientRect().top;\n      var height = mainMenu.offsetHeight;\n\n      // offset for the left pos (the sub menu max width)\n      var leftOffset = 280;\n      // offset for top pos (depending on columns menu or toolbar menu)\n      // pin menu does not need any correction for top positioning\n      var topOffset = subMenuRef === 'columnsMenu' ? 300 : 20;\n\n      /**\n       * main menu is at the right/bottom limit of the window\n       */\n      this.subMenuLeftPosition = left + width + leftOffset >= window.innerWidth;\n      this.subMenuTopPosition = top + height + topOffset > window.innerHeight;\n    }\n  }\n};","map":{"version":3,"names":["VList","VMenu","VListItem","VListItemIcon","VIcon","VListItemTitle","VDivider","UCheckbox","components","props","params","type","Object","default","data","list","pinSubMenu","columnsSubMenu","toolbarSubMenu","subMenuLeftPosition","subMenuTopPosition","watch","show","positionSubMenus","mounted","_this","constructList","api","addEventListener","methods","allColumns","columnController","getAllGridColumns","forEach","col","colId","colDef","headerName","push","id","name","visible","disabled","lockVisible","onColumnVisibilityChange","setColumnVisible","setToolbar","position","hidePopupMenu","resetColumns","subMenuRef","mainMenu","$refs","left","getBoundingClientRect","width","offsetWidth","top","height","offsetHeight","leftOffset","topOffset","window","innerWidth","innerHeight"],"sources":["node_modules/vuntangle/src/components/UGrid/components/ColumnMenu.vue"],"sourcesContent":["<template>\n  <div ref=\"mainMenu\" style=\"overflow-y: auto; max-height: 300px\" class=\"d-flex flex-column align-stretch\">\n    <v-list dense class=\"py-0\" color=\"transparent\">\n      <!-- pin/unpin menu -->\n      <v-menu\n        ref=\"pinMenu\"\n        v-model=\"pinSubMenu\"\n        :left=\"subMenuLeftPosition\"\n        max-width=\"150\"\n        allow-overflow\n        offset-x\n        open-on-hover\n        rounded\n        content-class=\"ag-custom-component-popup ag-menu elevation-4\"\n      >\n        <template #activator=\"{ on, attrs }\">\n          <v-list-item v-if=\"!params.column.colDef.lockPinned\" v-bind=\"attrs\" v-on=\"on\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-pin`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('pin')\" />\n            <v-list-item-icon><v-icon small v-text=\"`mdi-chevron-right`\" /></v-list-item-icon>\n          </v-list-item>\n        </template>\n\n        <v-list dense outlined class=\"pa-0\">\n          <v-list-item @click.stop=\"params.pinColumn(params.column.colId, 'left')\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-arrow-collapse-left`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('pin_left')\" />\n          </v-list-item>\n          <v-list-item @click.stop=\"params.pinColumn(params.column.colId, 'right')\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-arrow-collapse-right`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('pin_right')\" />\n          </v-list-item>\n          <v-list-item @click.stop=\"params.pinColumn(params.column.colId, null)\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-pin-off`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('unpin')\" />\n          </v-list-item>\n        </v-list>\n      </v-menu>\n\n      <v-divider v-if=\"!params.column.colDef.lockPinned\" />\n\n      <!-- columns list menu -->\n      <v-menu\n        ref=\"columnsMenu\"\n        v-model=\"columnsSubMenu\"\n        :left=\"subMenuLeftPosition\"\n        :top=\"subMenuTopPosition\"\n        max-height=\"300\"\n        max-width=\"280\"\n        allow-overflow\n        offset-x\n        open-on-hover\n        transition=\"none\"\n        content-class=\"ag-custom-component-popup ag-menu elevation-4\"\n      >\n        <template #activator=\"{ on, attrs }\">\n          <v-list-item v-bind=\"attrs\" v-on=\"on\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-format-columns`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('columns')\" />\n            <v-list-item-icon><v-icon small v-text=\"`mdi-chevron-right`\" /></v-list-item-icon>\n          </v-list-item>\n        </template>\n        <!-- <v-sheet class=\"pa-2\" color=\"transparent\"> -->\n        <v-list dense outlined class=\"pa-0\">\n          <v-list-item class=\"pa-2\">\n            <v-list-item-content\n              class=\"d-flex flex-column flex-nowrap align-stretch\"\n              style=\"max-height: 240px; overflow-y: auto\"\n            >\n              <u-checkbox\n                v-for=\"col in list\"\n                :key=\"col.id\"\n                v-model=\"col.visible\"\n                dense\n                class=\"ma-0 caption pa-0\"\n                color=\"primary\"\n                hide-details\n                :ripple=\"false\"\n                :disabled=\"col.disabled\"\n                @change=\"onColumnVisibilityChange($event, col.id)\"\n                @click.stop\n              >\n                <template #label>\n                  <span class=\"body-2\">{{ col.name }}</span>\n                </template>\n              </u-checkbox>\n            </v-list-item-content>\n          </v-list-item>\n          <v-divider />\n          <v-list-item @click=\"resetColumns\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-refresh`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('reset_to_defaults')\" />\n          </v-list-item>\n        </v-list>\n        <!-- </v-sheet> -->\n      </v-menu>\n\n      <!-- toolbar menu -->\n      <v-menu\n        ref=\"toolbarMenu\"\n        v-model=\"toolbarSubMenu\"\n        :left=\"subMenuLeftPosition\"\n        :top=\"subMenuTopPosition\"\n        max-height=\"300\"\n        max-width=\"200\"\n        allow-overflow\n        offset-x\n        open-on-hover\n        transition=\"none\"\n        content-class=\"ag-custom-component-popup ag-menu elevation-4\"\n      >\n        <template #activator=\"{ on, attrs }\">\n          <v-list-item v-bind=\"attrs\" v-on=\"on\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-dock-top`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('toolbar')\" />\n            <v-list-item-icon><v-icon small v-text=\"`mdi-chevron-right`\" /></v-list-item-icon>\n          </v-list-item>\n        </template>\n        <v-list dense outlined class=\"pa-0\">\n          <v-list-item @click=\"setToolbar('top')\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-dock-top`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('top')\" />\n          </v-list-item>\n          <v-list-item @click=\"setToolbar('bottom')\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-dock-bottom`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('bottom')\" />\n          </v-list-item>\n          <v-list-item @click=\"setToolbar('float')\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-dock-bottom`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('floating_bottom')\" />\n          </v-list-item>\n          <v-list-item @click=\"setToolbar(false)\">\n            <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-close`\" /></v-list-item-icon>\n            <v-list-item-title v-text=\"$vuntangle.$t('hidden')\" />\n          </v-list-item>\n        </v-list>\n      </v-menu>\n\n      <v-divider v-if=\"params.enableRefresh || params.enableExportCsv\" />\n\n      <v-list-item v-if=\"params.enableRefresh\" @click=\"params.refresh()\">\n        <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-refresh`\" /></v-list-item-icon>\n        <v-list-item-title v-text=\"$vuntangle.$t('refresh')\" />\n      </v-list-item>\n\n      <v-list-item v-if=\"params.enableExportCsv\" @click=\"params.exportCsv()\">\n        <v-list-item-icon class=\"mr-2\"><v-icon small v-text=\"`mdi-file-export`\" /></v-list-item-icon>\n        <v-list-item-title v-text=\"$vuntangle.$t('export_csv')\" />\n      </v-list-item>\n    </v-list>\n  </div>\n</template>\n<script>\n  // import vuetify components\n  import { VList, VMenu, VListItem, VListItemIcon, VIcon, VListItemTitle, VDivider } from 'vuetify/lib'\n  import UCheckbox from '../../UCheckbox'\n\n  export default {\n    components: { VList, VMenu, VListItem, VListItemIcon, VIcon, VListItemTitle, VDivider, UCheckbox },\n    props: {\n      params: { type: Object, default() {} },\n    },\n    data: () => ({\n      // the columns list that will be populated\n      list: [],\n\n      // flag telling if a specific of subMenu is shown/visible\n      pinSubMenu: false,\n      columnsSubMenu: false,\n      toolbarSubMenu: false,\n\n      // flag to position subMenus to the left/top of main menu, if it's the case\n      subMenuLeftPosition: false,\n      subMenuTopPosition: false,\n    }),\n    watch: {\n      pinSubMenu(show) {\n        this.positionSubMenus('pinMenu', show)\n      },\n      columnsSubMenu(show) {\n        this.positionSubMenus('columnsMenu', show)\n      },\n      toolbarSubMenu(show) {\n        this.positionSubMenus('toolbarMenu', show)\n      },\n    },\n    mounted() {\n      this.constructList()\n      this.params.api.addEventListener('columnMoved', () => {\n        this.constructList()\n      })\n    },\n    methods: {\n      constructList() {\n        const allColumns = this.params.api.columnController.getAllGridColumns()\n        const list = []\n        allColumns.forEach(col => {\n          if (col.colId === 'sel-column' || !col.colDef.headerName) return\n          list.push({\n            id: col.colId,\n            name: col.colDef.headerName,\n            visible: col.visible,\n            disabled: col.colDef.lockVisible,\n          })\n        })\n        this.list = list\n      },\n\n      onColumnVisibilityChange(visible, colId) {\n        this.params.api.columnController.setColumnVisible(colId, visible)\n      },\n\n      setToolbar(position) {\n        this.params.setToolbar(position)\n        this.params.api.hidePopupMenu()\n      },\n\n      // resets the columns state to the original columnDefs\n      resetColumns() {\n        this.params.resetColumns()\n        this.params.api.hidePopupMenu()\n      },\n\n      /**\n       * Computes sub menus positions if they fall outside of the window\n       * to prevent unwanted accessibility and scrolling issues\n       */\n      positionSubMenus(subMenuRef, show) {\n        if (!show) {\n          return\n        }\n        const mainMenu = this.$refs.mainMenu\n        const left = mainMenu.getBoundingClientRect().left\n        const width = mainMenu.offsetWidth\n        const top = mainMenu.getBoundingClientRect().top\n        const height = mainMenu.offsetHeight\n\n        // offset for the left pos (the sub menu max width)\n        const leftOffset = 280\n        // offset for top pos (depending on columns menu or toolbar menu)\n        // pin menu does not need any correction for top positioning\n        const topOffset = subMenuRef === 'columnsMenu' ? 300 : 20\n\n        /**\n         * main menu is at the right/bottom limit of the window\n         */\n        this.subMenuLeftPosition = left + width + leftOffset >= window.innerWidth\n        this.subMenuTopPosition = top + height + topOffset > window.innerHeight\n      },\n    },\n  }\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}