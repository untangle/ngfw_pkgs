{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Util from '@/util/setupUtils';\nimport Interfaces from '@/Setup_wizard/step/Interfaces.vue';\nexport default {\n  components: {\n    Interfaces: Interfaces\n  },\n  props: {\n    setupRpc: {\n      type: Object,\n      required: true\n    },\n    adminRpc: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      form: {\n        password: '',\n        confirmPassword: '',\n        adminEmail: '',\n        installType: '',\n        timezone: ''\n      },\n      timezones: [],\n      // Correctly using this for timezones data\n      installTypes: {\n        school: 'School',\n        college: 'Higher Education',\n        government: 'State & Local Government',\n        fedgovernment: 'Federal Government',\n        nonprofit: 'Nonprofit',\n        retail: 'Hospitality & Retail',\n        healthcare: 'Healthcare',\n        financial: 'Banking & Financial',\n        home: 'Home',\n        student: 'Student',\n        other: 'Other'\n      },\n      showInterfaces: false\n    };\n  },\n  mounted: function mounted() {\n    if (this.setupRpc) {\n      this.form.adminEmail = this.setupRpc.adminEmail || '';\n      this.form.timezone = this.setupRpc.timezoneID || '';\n\n      // Assign timezone data from the response\n      this.timezones = [['Etc/GMT+12', '(~UTC-12:00) Etc/GMT+12'], ['Etc/GMT+11', '(~UTC-11:00) Etc/GMT+11'], ['America/Boise', '(~UTC-07:00) America/Boise']\n      // Add additional timezones as needed\n      ];\n      console.log('Populated Timezones:', this.timezones);\n      console.log('Preselected Timezone:', this.form.timezone);\n    }\n  },\n  methods: {\n    validateForm: function validateForm() {\n      var _this$form = this.form,\n        password = _this$form.password,\n        confirmPassword = _this$form.confirmPassword;\n      if (password.length < 3 || password !== confirmPassword) return false;\n      return true;\n    },\n    onSave: function onSave() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.validateForm()) {\n                _context.next = 3;\n                break;\n              }\n              alert('All fields are required and passwords must match.');\n              return _context.abrupt(\"return\");\n            case 3:\n              _context.prev = 3;\n              console.log('Saving settings...');\n\n              // window.rpc = {}\n              window.rpc.setup = new window.JSONRpcClient('/setup/JSON-RPC').SetupContext; // to avoid invalid security nonce\n              // console.log(window.rpc.setup)\n              if (!(_this.setupRpc.timezoneID !== _this.form.timezone)) {\n                _context.next = 10;\n                break;\n              }\n              _context.next = 9;\n              return window.rpc.setup.setTimeZone(_this.form.timezone);\n            case 9:\n              console.log('Timezone updated successfully.');\n            case 10:\n              _context.next = 12;\n              return _this.saveAdminPassword();\n            case 12:\n              alert('Settings saved successfully.');\n              _context.next = 19;\n              break;\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              console.error('Error saving settings:', _context.t0);\n              alert('Failed to save settings. Please try again.');\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[3, 15]]);\n      }))();\n    },\n    saveAdminPassword: function saveAdminPassword() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              console.log('Attempting to update admin password...');\n              console.log('RPC Context:', window.rpc.setup);\n\n              // Update admin password\n              _context2.next = 5;\n              return window.rpc.setup.setAdminPassword(_this2.form.password, _this2.form.adminEmail, _this2.form.installType);\n            case 5:\n              console.log('Admin password updated successfully.');\n\n              // Authenticate the updated password\n              _context2.next = 8;\n              return new Promise(function (resolve, reject) {\n                Util.authenticate(_this2.form.password, function (error, success) {\n                  console.log('Authentication error:', error);\n                  console.log('Authentication success:', success);\n                  if (error || !success) {\n                    console.error('Authentication failed after password update:', error);\n                    reject(new Error('Authentication failed after password update.'));\n                  } else {\n                    console.log('Authentication successful after password update.');\n                    resolve();\n                    _this2.showInterfaces = true;\n                  }\n                });\n              });\n            case 8:\n              _context2.next = 14;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error saving admin password or authenticating:', _context2.t0);\n              throw _context2.t0;\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 10]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["Util","Interfaces","components","props","setupRpc","type","Object","required","adminRpc","data","form","password","confirmPassword","adminEmail","installType","timezone","timezones","installTypes","school","college","government","fedgovernment","nonprofit","retail","healthcare","financial","home","student","other","showInterfaces","mounted","timezoneID","console","log","methods","validateForm","_this$form","length","onSave","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","alert","abrupt","window","rpc","setup","JSONRpcClient","SetupContext","setTimeZone","saveAdminPassword","t0","error","stop","_this2","_callee2","_callee2$","_context2","setAdminPassword","Promise","resolve","reject","authenticate","success","Error"],"sources":["src/Setup_wizard/step/ServerSettings.vue"],"sourcesContent":["<template>\n  <Interfaces v-if=\"showInterfaces\" :setup-rpc=\"setupRpc\" :admin-rpc=\"adminRpc\" />\n  <div v-else class=\"server-settings\">\n    <h1>Server Settings</h1>\n\n    <p class=\"subtitle\">Configure the Server</p>\n\n    <div class=\"form-container\">\n      <!-- Admin Account Section -->\n      <div class=\"admin-account\">\n        <h3>Admin Account</h3>\n        <p class=\"info\">Choose a password for the <strong>admin</strong> account</p>\n\n        <div class=\"form-group\">\n          <label>Password</label>\n          <input v-model=\"form.password\" type=\"password\" placeholder=\"Enter Password\" class=\"form-input\" />\n          <p v-if=\"form.password.length < 3 && form.password !== ''\" class=\"error\">\n            The password must be at least 3 characters long.\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Confirm Password</label>\n          <input v-model=\"form.confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" class=\"form-input\" />\n          <p v-if=\"form.confirmPassword !== form.password && form.confirmPassword !== ''\" class=\"error\">\n            Passwords do not match.\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Admin Email</label>\n          <input v-model=\"form.adminEmail\" type=\"email\" placeholder=\"Enter Admin Email\" class=\"form-input\" />\n        </div>\n        <p class=\"info\">Administrators receive email alerts and report summaries.</p>\n      </div>\n\n      <!-- Install Type Section -->\n      <div class=\"install-type\">\n        <h3>Install Type</h3>\n        <p class=\"info\">Install type determines the optimal default settings for this deployment.</p>\n        <div class=\"form-group\">\n          <label>Choose Type</label>\n          <select v-model=\"form.installType\" class=\"form-select\">\n            <option value=\"\">Select type</option>\n            <option v-for=\"(label, value) in installTypes\" :key=\"value\" :value=\"value\">\n              {{ label }}\n            </option>\n          </select>\n        </div>\n\n        <h3>Timezone</h3>\n        <div class=\"form-group\">\n          <label>Choose Timezone</label>\n          <select v-model=\"form.timezone\" class=\"form-select\">\n            <option value=\"\">Select a Timezone</option>\n            <option v-for=\"timezone in timezones\" :key=\"timezone[0]\" :value=\"timezone[0]\">\n              {{ timezone[1] }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <button class=\"save-button\" @click=\"onSave\">Save</button>\n  </div>\n</template>\n\n<script>\n  import Util from '@/util/setupUtils'\n  import Interfaces from '@/Setup_wizard/step/Interfaces.vue'\n\n  export default {\n    components: {\n      Interfaces,\n    },\n    props: {\n      setupRpc: {\n        type: Object,\n        required: true,\n      },\n      adminRpc: {\n        type: Object,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        form: {\n          password: '',\n          confirmPassword: '',\n          adminEmail: '',\n          installType: '',\n          timezone: '',\n        },\n        timezones: [], // Correctly using this for timezones data\n        installTypes: {\n          school: 'School',\n          college: 'Higher Education',\n          government: 'State & Local Government',\n          fedgovernment: 'Federal Government',\n          nonprofit: 'Nonprofit',\n          retail: 'Hospitality & Retail',\n          healthcare: 'Healthcare',\n          financial: 'Banking & Financial',\n          home: 'Home',\n          student: 'Student',\n          other: 'Other',\n        },\n        showInterfaces: false,\n      }\n    },\n    mounted() {\n      if (this.setupRpc) {\n        this.form.adminEmail = this.setupRpc.adminEmail || ''\n        this.form.timezone = this.setupRpc.timezoneID || ''\n\n        // Assign timezone data from the response\n        this.timezones = [\n          ['Etc/GMT+12', '(~UTC-12:00) Etc/GMT+12'],\n          ['Etc/GMT+11', '(~UTC-11:00) Etc/GMT+11'],\n          ['America/Boise', '(~UTC-07:00) America/Boise'],\n          // Add additional timezones as needed\n        ]\n\n        console.log('Populated Timezones:', this.timezones)\n        console.log('Preselected Timezone:', this.form.timezone)\n      }\n    },\n    methods: {\n      validateForm() {\n        const { password, confirmPassword } = this.form\n        if (password.length < 3 || password !== confirmPassword) return false\n        return true\n      },\n\n      async onSave() {\n        if (!this.validateForm()) {\n          alert('All fields are required and passwords must match.')\n          return\n        }\n\n        try {\n          console.log('Saving settings...')\n\n          // window.rpc = {}\n          window.rpc.setup = new window.JSONRpcClient('/setup/JSON-RPC').SetupContext // to avoid invalid security nonce\n          // console.log(window.rpc.setup)\n          if (this.setupRpc.timezoneID !== this.form.timezone) {\n            await window.rpc.setup.setTimeZone(this.form.timezone)\n            console.log('Timezone updated successfully.')\n          }\n          await this.saveAdminPassword()\n          alert('Settings saved successfully.')\n        } catch (error) {\n          console.error('Error saving settings:', error)\n          alert('Failed to save settings. Please try again.')\n        }\n      },\n\n      async saveAdminPassword() {\n        try {\n          console.log('Attempting to update admin password...')\n          console.log('RPC Context:', window.rpc.setup)\n\n          // Update admin password\n          await window.rpc.setup.setAdminPassword(this.form.password, this.form.adminEmail, this.form.installType)\n          console.log('Admin password updated successfully.')\n\n          // Authenticate the updated password\n          await new Promise((resolve, reject) => {\n            Util.authenticate(this.form.password, (error, success) => {\n              console.log('Authentication error:', error)\n              console.log('Authentication success:', success)\n              if (error || !success) {\n                console.error('Authentication failed after password update:', error)\n                reject(new Error('Authentication failed after password update.'))\n              } else {\n                console.log('Authentication successful after password update.')\n                resolve()\n                this.showInterfaces = true\n              }\n            })\n          })\n        } catch (error) {\n          console.error('Error saving admin password or authenticating:', error)\n          throw error\n        }\n      },\n    },\n  }\n</script>\n\n<style scoped>\n  .server-settings {\n    padding: 20px;\n    background-color: #f9f9f9;\n    border-radius: 8px;\n    max-width: 800px;\n    margin: 0 auto;\n    font-family: Arial, sans-serif;\n    border: 2px solid #ccc; /* Add border */\n    border-radius: 8px; /* Optional: rounded corners */\n    margin: 20px; /* Optional: spacing around the div */\n  }\n\n  .subtitle {\n    color: #666;\n    margin-bottom: 20px;\n    font-size: 1rem;\n  }\n\n  .form-container {\n    display: flex;\n    gap: 20px;\n    margin: 20px 0;\n  }\n\n  .admin-account,\n  .install-type {\n    flex: 1;\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    color: #333;\n    margin-bottom: 10px;\n  }\n\n  .form-group {\n    margin-bottom: 15px;\n  }\n\n  label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n    color: #444;\n  }\n\n  .form-input,\n  .form-select {\n    width: 100%;\n    padding: 8px;\n    font-size: 1rem;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n\n  .form-input:focus,\n  .form-select:focus {\n    border-color: #007bff;\n    outline: none;\n  }\n\n  .error {\n    color: beige;\n    font-size: 0.875rem;\n    margin-top: 5px;\n  }\n\n  .info {\n    color: #5bc0de;\n    font-size: 0.875rem;\n    margin-top: 5px;\n  }\n\n  .save-button {\n    background-color: #007bff;\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    font-size: 1rem;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n\n  .save-button:hover {\n    background-color: #0056b3;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}