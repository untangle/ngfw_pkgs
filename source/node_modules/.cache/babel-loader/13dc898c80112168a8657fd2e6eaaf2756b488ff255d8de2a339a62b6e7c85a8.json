{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { VContainer, VSpacer, VDivider, VCheckbox, VBtn, VIcon } from 'vuetify/lib';\nimport cloneDeep from 'lodash/cloneDeep';\nimport USection from '../../components/USection/USection.vue';\nimport { RuleCondition, RuleAction } from '../Conditions';\nimport { ruleDefs } from '../Conditions/data/rulesDefinitions';\nexport default {\n  components: {\n    VContainer: VContainer,\n    VSpacer: VSpacer,\n    VDivider: VDivider,\n    VCheckbox: VCheckbox,\n    VBtn: VBtn,\n    VIcon: VIcon,\n    USection: USection,\n    RuleCondition: RuleCondition,\n    RuleAction: RuleAction\n  },\n  props: {\n    title: {\n      type: String,\n      \"default\": undefined\n    },\n    rule: {\n      type: Object,\n      \"default\": function _default() {}\n    },\n    // the rule type, e.g. wan-rules\n    ruleType: {\n      type: String,\n      \"default\": undefined\n    },\n    remoteData: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          apps: null,\n          policies: null\n        };\n      }\n    },\n    remoteFetching: {\n      type: Boolean,\n      \"default\": false\n    },\n    classicView: {\n      type: Boolean,\n      \"default\": false\n    },\n    excludedConditions: {\n      type: Array,\n      \"default\": null\n    },\n    // the settings applied on the box\n    boxSettings: {\n      type: Object,\n      \"default\": null\n    },\n    // used to show / hide the description field; shown for mfw-ui but hidden in ETM\n    showDescription: {\n      type: Boolean,\n      \"default\": true\n    },\n    features: {\n      type: Object,\n      \"default\": null\n    }\n  },\n  data: function data() {\n    return {\n      ruleCopy: undefined,\n      ruleDef: undefined\n    };\n  },\n  watch: {\n    rule: {\n      handler: function handler(rule) {\n        this.ruleDef = ruleDefs[this.ruleType];\n        if (rule) {\n          this.ruleCopy = cloneDeep(rule);\n        } else {\n          this.ruleCopy = cloneDeep(this.ruleDef[\"default\"]);\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    addLimitRate: function addLimitRate() {\n      var limitRateIndex = this.ruleCopy.conditions.findIndex(function (condition) {\n        return condition.type === 'LIMIT_RATE';\n      });\n      var burstIndex = this.ruleCopy.conditions.findIndex(function (condition) {\n        return condition.type === 'BURST_SIZE';\n      });\n      if (limitRateIndex === -1) {\n        // RATE_LIMIT condition does not exist add it 1 index before BURST_SIZE condition\n        this.ruleCopy.conditions.splice(burstIndex, 0, {\n          type: 'LIMIT_RATE',\n          op: undefined,\n          value: undefined,\n          rate_unit: undefined\n        });\n      } else if (burstIndex - limitRateIndex !== 1) {\n        // move RATE_LIMIT condition to one index before BURST_SIZE condition\n        this.ruleCopy.conditions.splice(burstIndex, 0, this.ruleCopy.conditions.splice(limitRateIndex, 1)[0]);\n      }\n    },\n    onAddCondition: function onAddCondition() {\n      this.ruleCopy.conditions.push({\n        type: undefined,\n        op: '==',\n        value: undefined\n      });\n    },\n    onRemoveCondition: function onRemoveCondition(index) {\n      this.$delete(this.ruleCopy.conditions, index);\n    },\n    /**\n     * validation called from parent component\n     */\n    validate: function validate() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var isValid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$refs.obs.validate();\n            case 2:\n              isValid = _context.sent;\n              return _context.abrupt(\"return\", isValid);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["VContainer","VSpacer","VDivider","VCheckbox","VBtn","VIcon","cloneDeep","USection","RuleCondition","RuleAction","ruleDefs","components","props","title","type","String","undefined","rule","Object","default","ruleType","remoteData","apps","policies","remoteFetching","Boolean","classicView","excludedConditions","Array","boxSettings","showDescription","features","data","ruleCopy","ruleDef","watch","handler","immediate","methods","addLimitRate","limitRateIndex","conditions","findIndex","condition","burstIndex","splice","op","value","rate_unit","onAddCondition","push","onRemoveCondition","index","$delete","validate","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isValid","wrap","_callee$","_context","prev","next","$refs","obs","sent","abrupt","stop"],"sources":["node_modules/vuntangle/src/shared/Rules/Rule.vue"],"sourcesContent":["<template>\n  <v-container>\n    <div class=\"d-flex align-center\">\n      <h1 v-if=\"classicView\" class=\"headline\">{{ title }}</h1>\n      <h2 v-else class=\"font-weight-light\">{{ title }}</h2>\n      <v-spacer />\n      <!-- #action slot used in parent component for action buttons -->\n      <slot name=\"actions\" :updated-rule=\"ruleCopy\"></slot>\n    </div>\n\n    <v-divider class=\"my-2\" />\n\n    <p\n      class=\"body-2 my-4\"\n      v-html=\"ruleType !== 'bypass' ? $vuntangle.$t('rule_info') : $vuntangle.$t('bypass_description')\"\n    />\n    <ValidationObserver ref=\"obs\">\n      <component :is=\"!$slots['extra-fields'] ? 'div' : 'u-section'\">\n        <slot v-if=\"!!$slots['extra-fields']\" name=\"extra-fields\" />\n        <ValidationProvider v-if=\"showDescription\" v-slot=\"{ errors }\" rules=\"required\" tag=\"div\" class=\"flex-grow-1\">\n          <u-text-field\n            v-model=\"ruleCopy.description\"\n            :placeholder=\"$vuntangle.$t('description')\"\n            :error-messages=\"errors\"\n            class=\"flex-grow-1\"\n          >\n            <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n          </u-text-field>\n        </ValidationProvider>\n      </component>\n\n      <component :is=\"!$slots['extra-fields'] ? 'div' : 'u-section'\">\n        <v-row>\n          <v-col class=\"d-flex\">\n            <v-checkbox v-model=\"ruleCopy.enabled\" :label=\"$vuntangle.$t('rule_enabled')\" hide-details />\n          </v-col>\n          <v-col v-if=\"ruleType === 'bypass'\" class=\"d-flex\">\n            <v-checkbox v-model=\"ruleCopy.log\" :ripple=\"false\" :label=\"$vuntangle.$t('log')\" hide-details />\n          </v-col>\n        </v-row>\n\n        <h3 class=\"mt-8 mb-2\">{{ $vuntangle.$t('conditions') }}</h3>\n        <p class=\"body-2\" v-html=\"$vuntangle.$t('conditions_text')\" />\n\n        <u-alert v-if=\"!ruleCopy.conditions.length\" class=\"body-2 mb-0 py-3\">\n          {{ $vuntangle.$t('no_conditions') }}\n        </u-alert>\n        <!-- using condition.type as an extra key composer -->\n        <div\n          v-for=\"(condition, i) in ruleCopy.conditions\"\n          :key=\"`${condition.type}-${i}`\"\n          class=\"d-flex align-center mb-2\"\n        >\n          <rule-condition\n            :condition.sync=\"ruleCopy.conditions[i]\"\n            :excluded-conditions=\"excludedConditions\"\n            :all-conditions.sync=\"ruleCopy.conditions\"\n            :box-settings=\"boxSettings\"\n            :features=\"features\"\n            v-bind=\"$props\"\n            @add-limit-rate=\"addLimitRate\"\n            v-on=\"$listeners\"\n          />\n          <v-btn icon class=\"ml-2\" @click=\"onRemoveCondition(i)\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </div>\n\n        <u-btn class=\"mt-2\" @click=\"onAddCondition\">{{ $vuntangle.$t('add_condition') }}</u-btn>\n\n        <template v-if=\"ruleType !== 'bypass'\">\n          <h3 class=\"mt-8 mb-2\">{{ $vuntangle.$t('action') }}</h3>\n          <p class=\"body-2\" v-html=\"$vuntangle.$t('action_text')\" />\n          <rule-action :action.sync=\"ruleCopy.action\" :rule=\"ruleCopy\" v-bind=\"$props\" v-on=\"$listeners\" />\n        </template>\n      </component>\n    </ValidationObserver>\n  </v-container>\n</template>\n<script>\n  import { VContainer, VSpacer, VDivider, VCheckbox, VBtn, VIcon } from 'vuetify/lib'\n  import cloneDeep from 'lodash/cloneDeep'\n  import USection from '../../components/USection/USection.vue'\n  import { RuleCondition, RuleAction } from '../Conditions'\n  import { ruleDefs } from '../Conditions/data/rulesDefinitions'\n\n  export default {\n    components: {\n      VContainer,\n      VSpacer,\n      VDivider,\n      VCheckbox,\n      VBtn,\n      VIcon,\n\n      USection,\n      RuleCondition,\n      RuleAction,\n    },\n    props: {\n      title: { type: String, default: undefined },\n      rule: { type: Object, default: () => {} },\n      // the rule type, e.g. wan-rules\n      ruleType: { type: String, default: undefined },\n      remoteData: { type: Object, default: () => ({ apps: null, policies: null }) },\n      remoteFetching: { type: Boolean, default: false },\n\n      classicView: { type: Boolean, default: false },\n      excludedConditions: { type: Array, default: null },\n      // the settings applied on the box\n      boxSettings: { type: Object, default: null },\n      // used to show / hide the description field; shown for mfw-ui but hidden in ETM\n      showDescription: { type: Boolean, default: true },\n      features: { type: Object, default: null },\n    },\n    data: () => ({\n      ruleCopy: undefined,\n      ruleDef: undefined,\n    }),\n\n    watch: {\n      rule: {\n        handler(rule) {\n          this.ruleDef = ruleDefs[this.ruleType]\n          if (rule) {\n            this.ruleCopy = cloneDeep(rule)\n          } else {\n            this.ruleCopy = cloneDeep(this.ruleDef.default)\n          }\n        },\n        immediate: true,\n      },\n    },\n\n    methods: {\n      addLimitRate() {\n        const limitRateIndex = this.ruleCopy.conditions.findIndex(condition => condition.type === 'LIMIT_RATE')\n        const burstIndex = this.ruleCopy.conditions.findIndex(condition => condition.type === 'BURST_SIZE')\n\n        if (limitRateIndex === -1) {\n          // RATE_LIMIT condition does not exist add it 1 index before BURST_SIZE condition\n          this.ruleCopy.conditions.splice(burstIndex, 0, {\n            type: 'LIMIT_RATE',\n            op: undefined,\n            value: undefined,\n            rate_unit: undefined,\n          })\n        } else if (burstIndex - limitRateIndex !== 1) {\n          // move RATE_LIMIT condition to one index before BURST_SIZE condition\n          this.ruleCopy.conditions.splice(burstIndex, 0, this.ruleCopy.conditions.splice(limitRateIndex, 1)[0])\n        }\n      },\n      onAddCondition() {\n        this.ruleCopy.conditions.push({\n          type: undefined,\n          op: '==',\n          value: undefined,\n        })\n      },\n      onRemoveCondition(index) {\n        this.$delete(this.ruleCopy.conditions, index)\n      },\n\n      /**\n       * validation called from parent component\n       */\n      async validate() {\n        const isValid = await this.$refs.obs.validate()\n        return isValid\n      },\n    },\n  }\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}