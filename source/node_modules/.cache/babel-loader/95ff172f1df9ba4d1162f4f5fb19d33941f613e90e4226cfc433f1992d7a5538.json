{"ast":null,"code":"import _slicedToArray from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * policy options\n * value: translation_key\n */\n\nexport var policyTypes = {\n  SPECIFIC_WAN: 'policy_type_specific',\n  BEST_OF: 'policy_type_best_of',\n  BALANCE: 'policy_type_balance'\n};\nexport var policyBestOfMetrics = {\n  LOWEST_LATENCY: 'policy_metrics_lowest_latency',\n  HIGHEST_AVAILABLE_BANDWIDTH: 'policy_metrics_highest_available_bandwidth',\n  LOWEST_JITTER: 'policy_metrics_lowest_jitter',\n  LOWEST_PACKET_LOSS: 'policy_metrics_lowest_packet_loss'\n};\nexport var policyBalanceAlgorithms = {\n  WEIGHTED: 'policy_balance_weighted',\n  LATENCY: 'policy_balance_latency',\n  AVAILABLE_BANDWIDTH: 'policy_balance_available_bandwidth',\n  BANDWIDTH: 'policy_balance_bandwidth'\n};\nexport var metricOperators = {\n  '>': 'greater_than',\n  '<': 'less_than',\n  '>=': 'greater_or_equal',\n  '<=': 'less_or_equal'\n};\nexport var criteriaTypes = {\n  ALWAYS_UP: 'always_up',\n  ATTRIBUTE: 'attribute',\n  METRIC: 'metric',\n  CONNECTIVITY: 'connectivity_test'\n};\nexport var metricOperatorOptions = Object.entries(metricOperators).map(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    k = _ref2[0],\n    v = _ref2[1];\n  return {\n    text: v,\n    value: k\n  };\n});","map":{"version":3,"names":["policyTypes","SPECIFIC_WAN","BEST_OF","BALANCE","policyBestOfMetrics","LOWEST_LATENCY","HIGHEST_AVAILABLE_BANDWIDTH","LOWEST_JITTER","LOWEST_PACKET_LOSS","policyBalanceAlgorithms","WEIGHTED","LATENCY","AVAILABLE_BANDWIDTH","BANDWIDTH","metricOperators","criteriaTypes","ALWAYS_UP","ATTRIBUTE","METRIC","CONNECTIVITY","metricOperatorOptions","Object","entries","map","_ref","_ref2","_slicedToArray","k","v","text","value"],"sources":["/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/vuntangle/src/shared/WanPolicies/data/options.js"],"sourcesContent":["/**\n * policy options\n * value: translation_key\n */\n\nexport const policyTypes = {\n  SPECIFIC_WAN: 'policy_type_specific',\n  BEST_OF: 'policy_type_best_of',\n  BALANCE: 'policy_type_balance',\n}\n\nexport const policyBestOfMetrics = {\n  LOWEST_LATENCY: 'policy_metrics_lowest_latency',\n  HIGHEST_AVAILABLE_BANDWIDTH: 'policy_metrics_highest_available_bandwidth',\n  LOWEST_JITTER: 'policy_metrics_lowest_jitter',\n  LOWEST_PACKET_LOSS: 'policy_metrics_lowest_packet_loss',\n}\n\nexport const policyBalanceAlgorithms = {\n  WEIGHTED: 'policy_balance_weighted',\n  LATENCY: 'policy_balance_latency',\n  AVAILABLE_BANDWIDTH: 'policy_balance_available_bandwidth',\n  BANDWIDTH: 'policy_balance_bandwidth',\n}\n\nexport const metricOperators = {\n  '>': 'greater_than',\n  '<': 'less_than',\n  '>=': 'greater_or_equal',\n  '<=': 'less_or_equal',\n}\n\nexport const criteriaTypes = {\n  ALWAYS_UP: 'always_up',\n  ATTRIBUTE: 'attribute',\n  METRIC: 'metric',\n  CONNECTIVITY: 'connectivity_test',\n}\n\nexport const metricOperatorOptions = Object.entries(metricOperators).map(([k, v]) => ({ text: v, value: k }))\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;;AAEA,OAAO,IAAMA,WAAW,GAAG;EACzBC,YAAY,EAAE,sBAAsB;EACpCC,OAAO,EAAE,qBAAqB;EAC9BC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,IAAMC,mBAAmB,GAAG;EACjCC,cAAc,EAAE,+BAA+B;EAC/CC,2BAA2B,EAAE,4CAA4C;EACzEC,aAAa,EAAE,8BAA8B;EAC7CC,kBAAkB,EAAE;AACtB,CAAC;AAED,OAAO,IAAMC,uBAAuB,GAAG;EACrCC,QAAQ,EAAE,yBAAyB;EACnCC,OAAO,EAAE,wBAAwB;EACjCC,mBAAmB,EAAE,oCAAoC;EACzDC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,IAAMC,eAAe,GAAG;EAC7B,GAAG,EAAE,cAAc;EACnB,GAAG,EAAE,WAAW;EAChB,IAAI,EAAE,kBAAkB;EACxB,IAAI,EAAE;AACR,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG;EAC3BC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,WAAW;EACtBC,MAAM,EAAE,QAAQ;EAChBC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,IAAMC,qBAAqB,GAAGC,MAAM,CAACC,OAAO,CAACR,eAAe,CAAC,CAACS,GAAG,CAAC,UAAAC,IAAA;EAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;IAAEG,CAAC,GAAAF,KAAA;IAAEG,CAAC,GAAAH,KAAA;EAAA,OAAO;IAAEI,IAAI,EAAED,CAAC;IAAEE,KAAK,EAAEH;EAAE,CAAC;AAAA,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}