{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport UDialog from '../UDialog';\nimport UCheckbox from '../UCheckbox';\nimport UErrorsTooltip from '../UErrorsTooltip';\nexport default {\n  components: {\n    UDialog: UDialog,\n    UCheckbox: UCheckbox,\n    UErrorsTooltip: UErrorsTooltip\n  },\n  props: {\n    attach: {\n      type: String,\n      required: false,\n      \"default\": ''\n    },\n    showMfa: {\n      type: Boolean,\n      \"default\": false\n    },\n    showBypassMfa: {\n      type: Boolean,\n      \"default\": true\n    },\n    // display instructions in the MFA dialog, should already be translated so we are not limited to vuntangle keys\n    instructions: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      resetShowMfa: false,\n      showMfaDialog: this.showMfa,\n      mfaCode: '',\n      bypassMfa: false\n    };\n  },\n  watch: {\n    showMfa: function showMfa(show) {\n      this.showMfaDialog = show;\n    },\n    showMfaDialog: function showMfaDialog(show) {\n      if (!show) {\n        this.mfaCode = '';\n        this.$refs.mfaObs.reset();\n        this.resetShowMfa = true;\n      }\n      this.$emit('update:showMfa', show);\n    }\n  },\n  methods: {\n    submitMfa: function submitMfa() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var valid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.resetShowMfa = false;\n              _context.next = 3;\n              return _this.$refs.mfaObs.validate();\n            case 3:\n              valid = _context.sent;\n              if (valid) {\n                _this.$emit('submit-mfa', _this.mfaCode, _this.bypassMfa);\n                _this.$refs.mfaObs.reset();\n              } else {\n                _this.resetShowMfa = true;\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    dialogCanceled: function dialogCanceled() {\n      this.showMfaDialog = false;\n      this.$emit('dialog-canceled');\n    }\n  }\n};","map":{"version":3,"names":["UDialog","UCheckbox","UErrorsTooltip","components","props","attach","type","String","required","showMfa","Boolean","showBypassMfa","instructions","data","resetShowMfa","showMfaDialog","mfaCode","bypassMfa","watch","show","$refs","mfaObs","reset","$emit","methods","submitMfa","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","valid","wrap","_callee$","_context","prev","next","validate","sent","stop","dialogCanceled"],"sources":["node_modules/vuntangle/src/components/UMfaDialog/UMfaDialog.vue"],"sourcesContent":["<template>\n  <u-dialog\n    :attach=\"attach\"\n    :show-dialog=\"showMfaDialog\"\n    :title=\"$vuntangle.$t('verification_code')\"\n    :buttons=\"[\n      { name: $vuntangle.$t('cancel'), handler: 'close-dialog' },\n      { name: $vuntangle.$t('ok'), handler: 'send-mfa-token', showProgress: true },\n    ]\"\n    :reset-state=\"resetShowMfa\"\n    @send-mfa-token=\"submitMfa\"\n    @close-dialog=\"dialogCanceled\"\n  >\n    <div v-if=\"instructions\" v-html=\"instructions\" />\n    <ValidationObserver ref=\"mfaObs\">\n      <ValidationProvider v-slot=\"{ errors }\" name=\"mfaCode\" rules=\"required\">\n        <v-text-field\n          v-model=\"mfaCode\"\n          :label=\"$vuntangle.$t('verification_code')\"\n          :error-messages=\"errors\"\n          outlined\n          hide-details\n          class=\"mt-4 fs-mask fs-mask-without-consent\"\n          @keyup.enter=\"submitMfa\"\n        >\n          <template v-if=\"errors.length\" #append>\n            <u-errors-tooltip :errors=\"errors\" />\n          </template>\n        </v-text-field>\n      </ValidationProvider>\n      <!-- bypassMFA checkbox(if login_mfa_verification_required) -->\n      <u-checkbox v-if=\"showBypassMfa\" v-model=\"bypassMfa\" :label=\"$vuntangle.$t('bypass_mfa')\"> </u-checkbox>\n    </ValidationObserver>\n  </u-dialog>\n</template>\n\n<script>\n  import UDialog from '../UDialog'\n  import UCheckbox from '../UCheckbox'\n  import UErrorsTooltip from '../UErrorsTooltip'\n\n  export default {\n    components: { UDialog, UCheckbox, UErrorsTooltip },\n    props: {\n      attach: { type: String, required: false, default: '' },\n      showMfa: { type: Boolean, default: false },\n      showBypassMfa: { type: Boolean, default: true },\n\n      // display instructions in the MFA dialog, should already be translated so we are not limited to vuntangle keys\n      instructions: { type: String, required: true },\n    },\n    data() {\n      return {\n        resetShowMfa: false,\n        showMfaDialog: this.showMfa,\n        mfaCode: '',\n        bypassMfa: false,\n      }\n    },\n\n    watch: {\n      showMfa(show) {\n        this.showMfaDialog = show\n      },\n      showMfaDialog(show) {\n        if (!show) {\n          this.mfaCode = ''\n          this.$refs.mfaObs.reset()\n          this.resetShowMfa = true\n        }\n        this.$emit('update:showMfa', show)\n      },\n    },\n\n    methods: {\n      async submitMfa() {\n        this.resetShowMfa = false\n        const valid = await this.$refs.mfaObs.validate()\n        if (valid) {\n          this.$emit('submit-mfa', this.mfaCode, this.bypassMfa)\n          this.$refs.mfaObs.reset()\n        } else {\n          this.resetShowMfa = true\n        }\n      },\n      dialogCanceled() {\n        this.showMfaDialog = false\n        this.$emit('dialog-canceled')\n      },\n    },\n  }\n</script>\n"],"mappings":";;AAqCA,OAAAA,OAAA;AACA,OAAAC,SAAA;AACA,OAAAC,cAAA;AAEA;EACAC,UAAA;IAAAH,OAAA,EAAAA,OAAA;IAAAC,SAAA,EAAAA,SAAA;IAAAC,cAAA,EAAAA;EAAA;EACAE,KAAA;IACAC,MAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;MAAA;IAAA;IACAC,OAAA;MAAAH,IAAA,EAAAI,OAAA;MAAA;IAAA;IACAC,aAAA;MAAAL,IAAA,EAAAI,OAAA;MAAA;IAAA;IAEA;IACAE,YAAA;MAAAN,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;EACA;EACAK,IAAA,WAAAA,KAAA;IACA;MACAC,YAAA;MACAC,aAAA,OAAAN,OAAA;MACAO,OAAA;MACAC,SAAA;IACA;EACA;EAEAC,KAAA;IACAT,OAAA,WAAAA,QAAAU,IAAA;MACA,KAAAJ,aAAA,GAAAI,IAAA;IACA;IACAJ,aAAA,WAAAA,cAAAI,IAAA;MACA,KAAAA,IAAA;QACA,KAAAH,OAAA;QACA,KAAAI,KAAA,CAAAC,MAAA,CAAAC,KAAA;QACA,KAAAR,YAAA;MACA;MACA,KAAAS,KAAA,mBAAAJ,IAAA;IACA;EACA;EAEAK,OAAA;IACAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,KAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAV,KAAA,CAAAZ,YAAA;cAAAoB,QAAA,CAAAE,IAAA;cAAA,OACAV,KAAA,CAAAN,KAAA,CAAAC,MAAA,CAAAgB,QAAA;YAAA;cAAAN,KAAA,GAAAG,QAAA,CAAAI,IAAA;cACA,IAAAP,KAAA;gBACAL,KAAA,CAAAH,KAAA,eAAAG,KAAA,CAAAV,OAAA,EAAAU,KAAA,CAAAT,SAAA;gBACAS,KAAA,CAAAN,KAAA,CAAAC,MAAA,CAAAC,KAAA;cACA;gBACAI,KAAA,CAAAZ,YAAA;cACA;YAAA;YAAA;cAAA,OAAAoB,QAAA,CAAAK,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA;IACA;IACAU,cAAA,WAAAA,eAAA;MACA,KAAAzB,aAAA;MACA,KAAAQ,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}