{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/**\n * This object is used to process promises one at a time in a FIFO queue\n */\nexport default {\n  queue: [],\n  processing: false,\n  /**\n   * Add a function that will return a promise to the queue for processing.\n   *\n   * @param {Function} promiseFunction\n   *\n   * @returns {Promise<*>}\n   */\n  add: function add(promiseFunction) {\n    var _this = this;\n    // wrap the function in a promise so resolve/reject can be called to signal it is done\n    return new Promise(function (resolve, reject) {\n      // make sure the promise function is a function\n      if (typeof promiseFunction !== 'function') {\n        reject(new Error('Cannot add a non-function to the promise queue'));\n        return;\n      }\n\n      // add the function to the queue and start processing promises\n      _this.queue.push({\n        promiseFunction: promiseFunction,\n        resolve: resolve,\n        reject: reject\n      });\n      _this.process();\n    });\n  },\n  /**\n   * Process promises from the queue.  This is a recursive function that will run until there are no more items in\n   * the queue.\n   *\n   * @returns {Void}\n   */\n  process: function process() {\n    var _this2 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var item, results;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!_this2.processing) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 2:\n            // get and remove the first item in the queue, return if it is empty\n            item = _this2.queue.shift();\n            if (item) {\n              _context.next = 5;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 5:\n            _context.prev = 5;\n            _this2.processing = true;\n\n            // run the promise function and call resolve/reject to signal it is done\n            _context.next = 9;\n            return item.promiseFunction();\n          case 9:\n            results = _context.sent;\n            item.resolve(results);\n            _context.next = 16;\n            break;\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](5);\n            item.reject(_context.t0);\n          case 16:\n            // run this method again to process the next item in the queue\n            _this2.processing = false;\n            _this2.process();\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[5, 13]]);\n    }))();\n  }\n};","map":{"version":3,"names":["queue","processing","add","promiseFunction","_this","Promise","resolve","reject","Error","push","process","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","item","results","wrap","_callee$","_context","prev","next","abrupt","shift","sent","t0","stop"],"sources":["/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/vuntangle/src/plugins/promiseQueue.js"],"sourcesContent":["/**\n * This object is used to process promises one at a time in a FIFO queue\n */\nexport default {\n  queue: [],\n  processing: false,\n\n  /**\n   * Add a function that will return a promise to the queue for processing.\n   *\n   * @param {Function} promiseFunction\n   *\n   * @returns {Promise<*>}\n   */\n  add(promiseFunction) {\n    // wrap the function in a promise so resolve/reject can be called to signal it is done\n    return new Promise((resolve, reject) => {\n      // make sure the promise function is a function\n      if (typeof promiseFunction !== 'function') {\n        reject(new Error('Cannot add a non-function to the promise queue'))\n        return\n      }\n\n      // add the function to the queue and start processing promises\n      this.queue.push({ promiseFunction, resolve, reject })\n      this.process()\n    })\n  },\n\n  /**\n   * Process promises from the queue.  This is a recursive function that will run until there are no more items in\n   * the queue.\n   *\n   * @returns {Void}\n   */\n  async process() {\n    // check the processing flag to not run calls at the same time\n    if (this.processing) {\n      return\n    }\n\n    // get and remove the first item in the queue, return if it is empty\n    const item = this.queue.shift()\n    if (!item) {\n      return\n    }\n\n    try {\n      this.processing = true\n\n      // run the promise function and call resolve/reject to signal it is done\n      const results = await item.promiseFunction()\n      item.resolve(results)\n    } catch (err) {\n      item.reject(err)\n    }\n\n    // run this method again to process the next item in the queue\n    this.processing = false\n    this.process()\n  },\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,eAAe;EACbA,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,KAAK;EAEjB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,GAAG,WAAHA,GAAGA,CAACC,eAAe,EAAE;IAAA,IAAAC,KAAA;IACnB;IACA,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;MACtC;MACA,IAAI,OAAOJ,eAAe,KAAK,UAAU,EAAE;QACzCI,MAAM,CAAC,IAAIC,KAAK,CAAC,gDAAgD,CAAC,CAAC;QACnE;MACF;;MAEA;MACAJ,KAAI,CAACJ,KAAK,CAACS,IAAI,CAAC;QAAEN,eAAe,EAAfA,eAAe;QAAEG,OAAO,EAAPA,OAAO;QAAEC,MAAM,EAANA;MAAO,CAAC,CAAC;MACrDH,KAAI,CAACM,OAAO,CAAC,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACQA,OAAO,WAAPA,OAAOA,CAAA,EAAG;IAAA,IAAAC,MAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,IAAA,EAAAC,OAAA;MAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,KAEVX,MAAI,CAACV,UAAU;cAAAmB,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAG,MAAA;UAAA;YAInB;YACMP,IAAI,GAAGL,MAAI,CAACX,KAAK,CAACwB,KAAK,CAAC,CAAC;YAAA,IAC1BR,IAAI;cAAAI,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAG,MAAA;UAAA;YAAAH,QAAA,CAAAC,IAAA;YAKPV,MAAI,CAACV,UAAU,GAAG,IAAI;;YAEtB;YAAAmB,QAAA,CAAAE,IAAA;YAAA,OACsBN,IAAI,CAACb,eAAe,CAAC,CAAC;UAAA;YAAtCc,OAAO,GAAAG,QAAA,CAAAK,IAAA;YACbT,IAAI,CAACV,OAAO,CAACW,OAAO,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAM,EAAA,GAAAN,QAAA;YAErBJ,IAAI,CAACT,MAAM,CAAAa,QAAA,CAAAM,EAAI,CAAC;UAAA;YAGlB;YACAf,MAAI,CAACV,UAAU,GAAG,KAAK;YACvBU,MAAI,CAACD,OAAO,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAU,QAAA,CAAAO,IAAA;QAAA;MAAA,GAAAZ,OAAA;IAAA;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}