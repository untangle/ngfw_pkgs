{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { VContainer, VRow, VCol } from 'vuetify/lib';\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\nimport UTextField from '../../components/UTextField';\nexport default {\n  components: {\n    VContainer: VContainer,\n    VRow: VRow,\n    VCol: VCol,\n    ValidationObserver: ValidationObserver,\n    ValidationProvider: ValidationProvider,\n    UTextField: UTextField\n  },\n  props: {\n    index: {\n      type: String,\n      \"default\": null\n    },\n    entries: {\n      type: Array,\n      \"default\": null\n    },\n    settings: {\n      type: Object,\n      required: false,\n      \"default\": function _default() {\n        return {\n          address: '',\n          description: '',\n          macAddress: ''\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      entry: undefined\n    };\n  },\n  computed: {\n    // used for validating unique IP addresses entries\n    addresses: function addresses() {\n      var _this = this;\n      var addresses = this.entries.map(function (entry) {\n        return entry.address;\n      });\n      if (this.index !== null) {\n        addresses = addresses.filter(function (entry, index) {\n          return index !== Number(_this.index);\n        });\n      }\n      return addresses;\n    },\n    // used for validating unique MAC addresses entries\n    macAddresses: function macAddresses() {\n      var _this2 = this;\n      var macAddresses = this.entries.map(function (entry) {\n        return entry.macAddress;\n      });\n      if (this.index !== null) {\n        macAddresses = macAddresses.filter(function (entry, index) {\n          return index !== Number(_this2.index);\n        });\n      }\n      return macAddresses;\n    }\n  },\n  watch: {\n    // copy the prop to the data model that can be mutated\n    settings: {\n      immediate: true,\n      deep: true,\n      handler: function handler(value) {\n        this.entry = _objectSpread({}, value);\n      }\n    }\n  },\n  methods: {\n    action: function action() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var isValid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this3.$refs.obs.validate();\n            case 2:\n              isValid = _context.sent;\n              if (isValid) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 5:\n              _this3.$emit('update', _objectSpread({}, _this3.entry), _this3.index);\n              _this3.$emit('close');\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["VContainer","VRow","VCol","ValidationObserver","ValidationProvider","UTextField","components","props","index","type","String","entries","Array","settings","Object","required","default","address","description","macAddress","data","entry","undefined","computed","addresses","_this","map","filter","Number","macAddresses","_this2","watch","immediate","deep","handler","value","_objectSpread","methods","action","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isValid","wrap","_callee$","_context","prev","next","$refs","obs","validate","sent","abrupt","$emit","stop"],"sources":["node_modules/vuntangle/src/shared/SettingsDhcp/DhcpReservation.vue"],"sourcesContent":["<template>\n  <v-container class=\"px-0\">\n    <ValidationObserver ref=\"obs\">\n      <v-row>\n        <v-col>\n          <ValidationProvider v-slot=\"{ errors }\" :rules=\"{ required: true, ip: true, unique: addresses }\">\n            <u-text-field v-model=\"entry.address\" :label=\"$vuntangle.$t('address')\" :error-messages=\"errors\">\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n            </u-text-field>\n          </ValidationProvider>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col>\n          <ValidationProvider v-slot=\"{ errors }\" :rules=\"{ required: true, mac_address: true, unique: macAddresses }\">\n            <u-text-field\n              v-model=\"entry.macAddress\"\n              :label=\"$vuntangle.$t('mac_address')\"\n              placeholder=\"00:1B:44:11:3A:B7\"\n              :error-messages=\"errors\"\n            >\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n            </u-text-field>\n          </ValidationProvider>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col>\n          <ValidationProvider v-slot=\"{ errors }\">\n            <u-text-field v-model=\"entry.description\" :label=\"$vuntangle.$t('description')\" :error-messages=\"errors\">\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n            </u-text-field>\n          </ValidationProvider>\n        </v-col>\n      </v-row>\n    </ValidationObserver>\n  </v-container>\n</template>\n<script>\n  import { VContainer, VRow, VCol } from 'vuetify/lib'\n  import { ValidationObserver, ValidationProvider } from 'vee-validate'\n  import UTextField from '../../components/UTextField'\n\n  export default {\n    components: {\n      VContainer,\n      VRow,\n      VCol,\n      ValidationObserver,\n      ValidationProvider,\n      UTextField,\n    },\n    props: {\n      index: { type: String, default: null },\n      entries: { type: Array, default: null },\n      settings: { type: Object, required: false, default: () => ({ address: '', description: '', macAddress: '' }) },\n    },\n    data: () => ({\n      entry: undefined,\n    }),\n    computed: {\n      // used for validating unique IP addresses entries\n      addresses() {\n        let addresses = this.entries.map(entry => entry.address)\n        if (this.index !== null) {\n          addresses = addresses.filter((entry, index) => index !== Number(this.index))\n        }\n        return addresses\n      },\n      // used for validating unique MAC addresses entries\n      macAddresses() {\n        let macAddresses = this.entries.map(entry => entry.macAddress)\n        if (this.index !== null) {\n          macAddresses = macAddresses.filter((entry, index) => index !== Number(this.index))\n        }\n        return macAddresses\n      },\n    },\n\n    watch: {\n      // copy the prop to the data model that can be mutated\n      settings: {\n        immediate: true,\n        deep: true,\n        handler(value) {\n          this.entry = { ...value }\n        },\n      },\n    },\n    methods: {\n      async action() {\n        const isValid = await this.$refs.obs.validate()\n        if (!isValid) return\n\n        this.$emit('update', { ...this.entry }, this.index)\n        this.$emit('close')\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;;;;;AAuCA,SAAAA,UAAA,EAAAC,IAAA,EAAAC,IAAA;AACA,SAAAC,kBAAA,EAAAC,kBAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IACAN,UAAA,EAAAA,UAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,kBAAA,EAAAA,kBAAA;IACAC,kBAAA,EAAAA,kBAAA;IACAC,UAAA,EAAAA;EACA;EACAE,KAAA;IACAC,KAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA;IAAA;IACAC,OAAA;MAAAF,IAAA,EAAAG,KAAA;MAAA;IAAA;IACAC,QAAA;MAAAJ,IAAA,EAAAK,MAAA;MAAAC,QAAA;MAAA,oBAAAC,SAAA;QAAA;UAAAC,OAAA;UAAAC,WAAA;UAAAC,UAAA;QAAA;MAAA;IAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IAAA;MACAC,KAAA,EAAAC;IACA;EAAA;EACAC,QAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MACA,IAAAD,SAAA,QAAAb,OAAA,CAAAe,GAAA,WAAAL,KAAA;QAAA,OAAAA,KAAA,CAAAJ,OAAA;MAAA;MACA,SAAAT,KAAA;QACAgB,SAAA,GAAAA,SAAA,CAAAG,MAAA,WAAAN,KAAA,EAAAb,KAAA;UAAA,OAAAA,KAAA,KAAAoB,MAAA,CAAAH,KAAA,CAAAjB,KAAA;QAAA;MACA;MACA,OAAAgB,SAAA;IACA;IACA;IACAK,YAAA,WAAAA,aAAA;MAAA,IAAAC,MAAA;MACA,IAAAD,YAAA,QAAAlB,OAAA,CAAAe,GAAA,WAAAL,KAAA;QAAA,OAAAA,KAAA,CAAAF,UAAA;MAAA;MACA,SAAAX,KAAA;QACAqB,YAAA,GAAAA,YAAA,CAAAF,MAAA,WAAAN,KAAA,EAAAb,KAAA;UAAA,OAAAA,KAAA,KAAAoB,MAAA,CAAAE,MAAA,CAAAtB,KAAA;QAAA;MACA;MACA,OAAAqB,YAAA;IACA;EACA;EAEAE,KAAA;IACA;IACAlB,QAAA;MACAmB,SAAA;MACAC,IAAA;MACAC,OAAA,WAAAA,QAAAC,KAAA;QACA,KAAAd,KAAA,GAAAe,aAAA,KAAAD,KAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,MAAA,WAAAA,OAAA;MAAA,IAAAC,MAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,OAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAV,MAAA,CAAAW,KAAA,CAAAC,GAAA,CAAAC,QAAA;YAAA;cAAAR,OAAA,GAAAG,QAAA,CAAAM,IAAA;cAAA,IACAT,OAAA;gBAAAG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAO,MAAA;YAAA;cAEAf,MAAA,CAAAgB,KAAA,WAAAnB,aAAA,KAAAG,MAAA,CAAAlB,KAAA,GAAAkB,MAAA,CAAA/B,KAAA;cACA+B,MAAA,CAAAgB,KAAA;YAAA;YAAA;cAAA,OAAAR,QAAA,CAAAS,IAAA;UAAA;QAAA,GAAAb,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}