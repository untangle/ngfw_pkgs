{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.link.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { gmapApi } from 'gmap-vue';\nimport GmapMap from 'gmap-vue/dist/components/map';\nimport GmapMarker from 'gmap-vue/dist/components/marker';\nimport GmapPolyline from 'gmap-vue/dist/components/polyline';\nimport GmapInfoWindow from 'gmap-vue/dist/components/info-window';\nexport default {\n  components: {\n    GmapMap: GmapMap,\n    GmapMarker: GmapMarker,\n    GmapPolyline: GmapPolyline,\n    GmapInfoWindow: GmapInfoWindow\n  },\n  props: {\n    markers: {\n      type: Array,\n      required: false,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    mapLines: {\n      type: Array,\n      required: false,\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      infoWindowPos: null,\n      infoWinOpen: false,\n      infoOptions: {\n        content: '',\n        // offset info window so it visually sits on top of the marker\n        pixelOffset: {\n          width: 0,\n          height: -35\n        },\n        disableAutoPan: true\n      },\n      map: null,\n      darkThemeStyles: [{\n        elementType: 'geometry',\n        stylers: [{\n          color: '#242f3e'\n        }]\n      }, {\n        elementType: 'labels.text.stroke',\n        stylers: [{\n          color: '#242f3e'\n        }]\n      }, {\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#746855'\n        }]\n      }, {\n        featureType: 'administrative.locality',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#d59563'\n        }]\n      }, {\n        featureType: 'poi',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#d59563'\n        }]\n      }, {\n        featureType: 'poi.park',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#263c3f'\n        }]\n      }, {\n        featureType: 'poi.park',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#6b9a76'\n        }]\n      }, {\n        featureType: 'road',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#38414e'\n        }]\n      }, {\n        featureType: 'road',\n        elementType: 'geometry.stroke',\n        stylers: [{\n          color: '#212a37'\n        }]\n      }, {\n        featureType: 'road',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#9ca5b3'\n        }]\n      }, {\n        featureType: 'road.highway',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#746855'\n        }]\n      }, {\n        featureType: 'road.highway',\n        elementType: 'geometry.stroke',\n        stylers: [{\n          color: '#1f2835'\n        }]\n      }, {\n        featureType: 'road.highway',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#f3d19c'\n        }]\n      }, {\n        featureType: 'transit',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#2f3948'\n        }]\n      }, {\n        featureType: 'transit.station',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#d59563'\n        }]\n      }, {\n        featureType: 'water',\n        elementType: 'geometry',\n        stylers: [{\n          color: '#17263c'\n        }]\n      }, {\n        featureType: 'water',\n        elementType: 'labels.text.fill',\n        stylers: [{\n          color: '#515c6d'\n        }]\n      }, {\n        featureType: 'water',\n        elementType: 'labels.text.stroke',\n        stylers: [{\n          color: '#17263c'\n        }]\n      }]\n    };\n  },\n  computed: {\n    google: gmapApi\n  },\n  watch: {\n    markers: {\n      immediate: true,\n      /**\n       * Set the zoom and center when the markers change.\n       *\n       * @returns {void}\n       */\n      handler: function handler() {\n        this.setMapZoomAndCenter();\n      }\n    }\n  },\n  /**\n   * Set the zoom and center when the map is loaded.\n   *\n   * @returns {void}\n   */\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.$refs.mapRef.$mapPromise;\n          case 2:\n            _this.map = _context.sent;\n            // set the center and zoom level when the map is loaded\n            _this.setMapZoomAndCenter();\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    /**\n     * Display the info window with information from the moused over marker.\n     *\n     * @param {Object} marker\n     * @param {number} idx\n     *\n     * @returns {void}\n     */\n    toggleInfoWindow: function toggleInfoWindow(marker) {\n      if (!marker.tooltip) {\n        return;\n      }\n      this.infoWindowPos = marker.position;\n      this.infoOptions.content = marker.tooltip;\n      this.infoWinOpen = true;\n    },\n    /**\n     * Go to the marker link if a marker link was set.\n     *\n     * @param {Object} marker\n     *\n     * @returns {void}\n     */\n    goToLink: function goToLink(marker) {\n      if (marker.link) {\n        this.$router.push(marker.link);\n      }\n    },\n    /**\n     * Set the zoom and center of the map around all the markers.  This should be called\n     * when the map is loaded and the markers are set.\n     *\n     * @returns {void}\n     */\n    setMapZoomAndCenter: function setMapZoomAndCenter() {\n      var _this2 = this;\n      // set zoom and center if there are markers and the map has loaded\n      if (this.markers.length === 0 || !this.map) {\n        return;\n      }\n\n      // get bounds of all markers\n      var bounds = new this.google.maps.LatLngBounds();\n      this.markers.forEach(function (marker) {\n        bounds.extend(marker.position);\n      });\n\n      // center around the bounds\n      this.map.setCenter(bounds.getCenter());\n\n      // the zoom will not update without a nextTick\n      this.$nextTick(function () {\n        // only one bound, so zoom out a bit\n        if (bounds.getNorthEast().equals(bounds.getSouthWest())) {\n          _this2.map.setZoom(14);\n        } else {\n          // zoom around bounds\n          _this2.map.fitBounds(bounds);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["gmapApi","GmapMap","GmapMarker","GmapPolyline","GmapInfoWindow","components","props","markers","type","Array","required","default","mapLines","data","infoWindowPos","infoWinOpen","infoOptions","content","pixelOffset","width","height","disableAutoPan","map","darkThemeStyles","elementType","stylers","color","featureType","computed","google","watch","immediate","handler","setMapZoomAndCenter","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$refs","mapRef","$mapPromise","sent","stop","methods","toggleInfoWindow","marker","tooltip","position","goToLink","link","$router","push","_this2","length","bounds","maps","LatLngBounds","forEach","extend","setCenter","getCenter","$nextTick","getNorthEast","equals","getSouthWest","setZoom","fitBounds"],"sources":["node_modules/vuntangle/src/components/UGmap/UGmap.vue"],"sourcesContent":["<template>\n  <gmap-map\n    ref=\"mapRef\"\n    :center=\"{ lat: 0.0, lng: 0.0 }\"\n    :zoom=\"2\"\n    map-type-id=\"roadmap\"\n    :options=\"{\n      mapTypeControlOptions: {\n        mapTypeIds: ['roadmap'],\n      },\n      streetViewControl: false,\n      fullscreenControl: false,\n      mapTypeControl: false,\n      styles: $vuntangle.theme === 'dark' ? darkThemeStyles : [],\n    }\"\n  >\n    <gmap-marker\n      v-for=\"(marker, index) in markers\"\n      :key=\"`marker-${index}`\"\n      :position=\"marker.position\"\n      :clickable=\"true\"\n      @click=\"goToLink(marker)\"\n      @mouseover=\"toggleInfoWindow(marker, index)\"\n      @mouseout=\"infoWinOpen = false\"\n    />\n    <gmap-polyline\n      v-for=\"mapLine in mapLines\"\n      :key=\"mapLine.id\"\n      :path.sync=\"mapLine.path\"\n      :options=\"{\n        strokeColor: mapLine.enabled ? '#008800' : '#FF0000',\n        strokeWeight: 1,\n        strokeOpacity: 0.8,\n        geodesic: true,\n      }\"\n    />\n    <gmap-info-window\n      v-if=\"markers.length\"\n      :options=\"infoOptions\"\n      :position=\"infoWindowPos\"\n      :opened=\"infoWinOpen\"\n      @closeclick=\"infoWinOpen = false\"\n    />\n  </gmap-map>\n</template>\n<script>\n  import { gmapApi } from 'gmap-vue'\n  import GmapMap from 'gmap-vue/dist/components/map'\n  import GmapMarker from 'gmap-vue/dist/components/marker'\n  import GmapPolyline from 'gmap-vue/dist/components/polyline'\n  import GmapInfoWindow from 'gmap-vue/dist/components/info-window'\n\n  export default {\n    components: {\n      GmapMap,\n      GmapMarker,\n      GmapPolyline,\n      GmapInfoWindow,\n    },\n    props: {\n      markers: {\n        type: Array,\n        required: false,\n        default: () => [],\n      },\n      mapLines: {\n        type: Array,\n        required: false,\n        default: () => [],\n      },\n    },\n    data() {\n      return {\n        infoWindowPos: null,\n        infoWinOpen: false,\n        infoOptions: {\n          content: '',\n          // offset info window so it visually sits on top of the marker\n          pixelOffset: {\n            width: 0,\n            height: -35,\n          },\n          disableAutoPan: true,\n        },\n        map: null,\n        darkThemeStyles: [\n          { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },\n          { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },\n          { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },\n          {\n            featureType: 'administrative.locality',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#d59563' }],\n          },\n          {\n            featureType: 'poi',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#d59563' }],\n          },\n          {\n            featureType: 'poi.park',\n            elementType: 'geometry',\n            stylers: [{ color: '#263c3f' }],\n          },\n          {\n            featureType: 'poi.park',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#6b9a76' }],\n          },\n          {\n            featureType: 'road',\n            elementType: 'geometry',\n            stylers: [{ color: '#38414e' }],\n          },\n          {\n            featureType: 'road',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#212a37' }],\n          },\n          {\n            featureType: 'road',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#9ca5b3' }],\n          },\n          {\n            featureType: 'road.highway',\n            elementType: 'geometry',\n            stylers: [{ color: '#746855' }],\n          },\n          {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#1f2835' }],\n          },\n          {\n            featureType: 'road.highway',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#f3d19c' }],\n          },\n          {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#2f3948' }],\n          },\n          {\n            featureType: 'transit.station',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#d59563' }],\n          },\n          {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#17263c' }],\n          },\n          {\n            featureType: 'water',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#515c6d' }],\n          },\n          {\n            featureType: 'water',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#17263c' }],\n          },\n        ],\n      }\n    },\n    computed: {\n      google: gmapApi,\n    },\n    watch: {\n      markers: {\n        immediate: true,\n\n        /**\n         * Set the zoom and center when the markers change.\n         *\n         * @returns {void}\n         */\n        handler() {\n          this.setMapZoomAndCenter()\n        },\n      },\n    },\n    /**\n     * Set the zoom and center when the map is loaded.\n     *\n     * @returns {void}\n     */\n    async mounted() {\n      this.map = await this.$refs.mapRef.$mapPromise\n\n      // set the center and zoom level when the map is loaded\n      this.setMapZoomAndCenter()\n    },\n    methods: {\n      /**\n       * Display the info window with information from the moused over marker.\n       *\n       * @param {Object} marker\n       * @param {number} idx\n       *\n       * @returns {void}\n       */\n      toggleInfoWindow(marker) {\n        if (!marker.tooltip) {\n          return\n        }\n\n        this.infoWindowPos = marker.position\n        this.infoOptions.content = marker.tooltip\n        this.infoWinOpen = true\n      },\n\n      /**\n       * Go to the marker link if a marker link was set.\n       *\n       * @param {Object} marker\n       *\n       * @returns {void}\n       */\n      goToLink(marker) {\n        if (marker.link) {\n          this.$router.push(marker.link)\n        }\n      },\n\n      /**\n       * Set the zoom and center of the map around all the markers.  This should be called\n       * when the map is loaded and the markers are set.\n       *\n       * @returns {void}\n       */\n      setMapZoomAndCenter() {\n        // set zoom and center if there are markers and the map has loaded\n        if (this.markers.length === 0 || !this.map) {\n          return\n        }\n\n        // get bounds of all markers\n        const bounds = new this.google.maps.LatLngBounds()\n        this.markers.forEach(function (marker) {\n          bounds.extend(marker.position)\n        })\n\n        // center around the bounds\n        this.map.setCenter(bounds.getCenter())\n\n        // the zoom will not update without a nextTick\n        this.$nextTick(() => {\n          // only one bound, so zoom out a bit\n          if (bounds.getNorthEast().equals(bounds.getSouthWest())) {\n            this.map.setZoom(14)\n          } else {\n            // zoom around bounds\n            this.map.fitBounds(bounds)\n          }\n        })\n      },\n    },\n  }\n</script>\n<style lang=\"scss\">\n  div {\n    .gm-style-iw-d {\n      /* set the max height of the gmap info window bigger or a scroll bar is shown */\n      max-height: 200px !important;\n\n      div {\n        color: black;\n      }\n    }\n  }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}