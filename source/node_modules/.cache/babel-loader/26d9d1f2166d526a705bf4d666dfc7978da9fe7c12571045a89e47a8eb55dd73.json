{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { VCard, VCardTitle, VSpacer, VDivider, VCheckbox } from 'vuetify/lib';\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\nimport cloneDeep from 'lodash/cloneDeep';\nimport RuleConditions from './RuleConditions.vue';\nexport default {\n  components: {\n    VCard: VCard,\n    VCardTitle: VCardTitle,\n    VSpacer: VSpacer,\n    VDivider: VDivider,\n    VCheckbox: VCheckbox,\n    ValidationObserver: ValidationObserver,\n    RuleConditions: RuleConditions,\n    ValidationProvider: ValidationProvider\n  },\n  props: {\n    rule: {\n      type: Object,\n      \"default\": function _default() {\n        return null;\n      }\n    },\n    zoneItems: {\n      type: Array,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      ruleCopy: null,\n      actionItems: [{\n        text: 'Enable',\n        value: 'ENABLE'\n      }, {\n        text: 'Disable',\n        value: 'DISABLE'\n      }]\n    };\n  },\n  watch: {\n    rule: {\n      handler: function handler(rule) {\n        // Assign an identifiable ruleID to the new rules\n        // This rule Id is not sent to the POST settings call\n        if (!rule.ruleId) {\n          rule.enabled = true;\n          rule.conditions = [];\n          rule.action = {\n            type: 'ENABLE'\n          };\n        }\n        this.ruleCopy = cloneDeep(rule);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    validate: function validate() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var isValid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$refs.obs.validate();\n            case 2:\n              isValid = _context.sent;\n              return _context.abrupt(\"return\", isValid);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["VCard","VCardTitle","VSpacer","VDivider","VCheckbox","ValidationObserver","ValidationProvider","cloneDeep","RuleConditions","components","props","rule","type","Object","default","zoneItems","Array","required","data","ruleCopy","actionItems","text","value","watch","handler","ruleId","enabled","conditions","action","immediate","methods","validate","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isValid","wrap","_callee$","_context","prev","next","$refs","obs","sent","abrupt","stop"],"sources":["node_modules/vuntangle/src/shared/SettingsCaptivePortal/components/Rule.vue"],"sourcesContent":["<template>\n  <v-card outlined style=\"flex-grow: 1\">\n    <v-card-title class=\"py-3 px-4\">\n      <span>{{ $t(`${!rule.ruleId ? 'cp_add_rule' : 'cp_edit_rule'}`) }}</span>\n      <v-spacer />\n      <slot name=\"actions\" :updated-rule=\"ruleCopy\"></slot>\n    </v-card-title>\n    <v-divider />\n    <div class=\"pa-4\">\n      <ValidationObserver ref=\"obs\">\n        <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n          <u-text-field v-model=\"ruleCopy.description\" :label=\"$t('description')\" outlined>\n            <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n          </u-text-field>\n        </ValidationProvider>\n        <div class=\"d-flex\">\n          <v-checkbox v-model=\"ruleCopy.enabled\" :ripple=\"false\" :label=\"$vuntangle.$t('rule_enabled')\" hide-details />\n        </div>\n\n        <h3 class=\"mt-8 mb-2\">{{ $t('conditions') }}</h3>\n\n        <rule-conditions :conditions=\"ruleCopy.conditions\" :zone-items=\"zoneItems\" />\n        <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n          <h3 class=\"mt-8\">{{ $t('action') }}</h3>\n          <div class=\"d-flex\">\n            <u-select\n              v-model=\"ruleCopy.action.type\"\n              :items=\"actionItems\"\n              value=\"enable\"\n              :ripple=\"false\"\n              :label=\"$t('action')\"\n              hide-details\n              class=\"my-0 mr-4\"\n            >\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template\n            ></u-select>\n          </div>\n        </ValidationProvider>\n      </ValidationObserver>\n    </div>\n  </v-card>\n</template>\n<script>\n  import { VCard, VCardTitle, VSpacer, VDivider, VCheckbox } from 'vuetify/lib'\n  import { ValidationObserver, ValidationProvider } from 'vee-validate'\n  import cloneDeep from 'lodash/cloneDeep'\n  import RuleConditions from './RuleConditions.vue'\n\n  export default {\n    components: {\n      VCard,\n      VCardTitle,\n      VSpacer,\n      VDivider,\n      VCheckbox,\n      ValidationObserver,\n      RuleConditions,\n      ValidationProvider,\n    },\n    props: {\n      rule: { type: Object, default: () => null },\n      zoneItems: { type: Array, required: true },\n    },\n    data: () => ({\n      ruleCopy: null,\n      actionItems: [\n        { text: 'Enable', value: 'ENABLE' },\n        { text: 'Disable', value: 'DISABLE' },\n      ],\n    }),\n    watch: {\n      rule: {\n        handler(rule) {\n          // Assign an identifiable ruleID to the new rules\n          // This rule Id is not sent to the POST settings call\n          if (!rule.ruleId) {\n            rule.enabled = true\n            rule.conditions = []\n            rule.action = { type: 'ENABLE' }\n          }\n          this.ruleCopy = cloneDeep(rule)\n        },\n        immediate: true,\n      },\n    },\n\n    methods: {\n      async validate() {\n        const isValid = await this.$refs.obs.validate()\n        return isValid\n      },\n    },\n  }\n</script>\n"],"mappings":";;AA2CA,SAAAA,KAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,SAAA;AACA,SAAAC,kBAAA,EAAAC,kBAAA;AACA,OAAAC,SAAA;AACA,OAAAC,cAAA;AAEA;EACAC,UAAA;IACAT,KAAA,EAAAA,KAAA;IACAC,UAAA,EAAAA,UAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,SAAA,EAAAA,SAAA;IACAC,kBAAA,EAAAA,kBAAA;IACAG,cAAA,EAAAA,cAAA;IACAF,kBAAA,EAAAA;EACA;EACAI,KAAA;IACAC,IAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;IACAC,SAAA;MAAAH,IAAA,EAAAI,KAAA;MAAAC,QAAA;IAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IAAA;MACAC,QAAA;MACAC,WAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA;IAEA;EAAA;EACAC,KAAA;IACAZ,IAAA;MACAa,OAAA,WAAAA,QAAAb,IAAA;QACA;QACA;QACA,KAAAA,IAAA,CAAAc,MAAA;UACAd,IAAA,CAAAe,OAAA;UACAf,IAAA,CAAAgB,UAAA;UACAhB,IAAA,CAAAiB,MAAA;YAAAhB,IAAA;UAAA;QACA;QACA,KAAAO,QAAA,GAAAZ,SAAA,CAAAI,IAAA;MACA;MACAkB,SAAA;IACA;EACA;EAEAC,OAAA;IACAC,QAAA,WAAAA,SAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,OAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAV,KAAA,CAAAW,KAAA,CAAAC,GAAA,CAAAb,QAAA;YAAA;cAAAM,OAAA,GAAAG,QAAA,CAAAK,IAAA;cAAA,OAAAL,QAAA,CAAAM,MAAA,WACAT,OAAA;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAX,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}