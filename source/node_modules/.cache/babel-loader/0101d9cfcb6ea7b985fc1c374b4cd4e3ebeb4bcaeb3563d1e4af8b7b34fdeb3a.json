{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// import http from '@/plugins/http'\n\nexport default {\n  inject: ['$intf', '$status'],\n  props: {\n    /**\n     * flag telling if the component is used in setup wizard\n     */\n    isSetup: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function data() {\n    return {\n      simApns: {\n        'T-Mobile': 'fast.t-mobile.com',\n        'Verizon': null,\n        'AT&T': 'm2m.com.attz'\n      },\n      simDetails: null\n    };\n  },\n  computed: {\n    intf: function intf(_ref) {\n      var $intf = _ref.$intf;\n      return $intf();\n    },\n    status: function status(_ref2) {\n      var $status = _ref2.$status;\n      return $status();\n    },\n    simNetworksOptions: function simNetworksOptions() {\n      return [{\n        text: this.$t('t_mobile'),\n        value: 'T-Mobile'\n      }, {\n        text: this.$t('verizon'),\n        value: 'Verizon'\n      }, {\n        text: this.$t('at_t'),\n        value: 'AT&T'\n      }];\n    }\n  },\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.$emit('get-status-wwan', _this.intf.device, function (response) {\n              // returns an array of objects like { 'frequency': '2.412 GHz', 'channel': 1 }\n              _this.simDetails = response || null;\n            });\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    setApn: function setApn(network) {\n      this.intf.simApn = this.simApns[network];\n    }\n  }\n};","map":{"version":3,"names":["inject","props","isSetup","type","Boolean","data","simApns","simDetails","computed","intf","_ref","$intf","status","_ref2","$status","simNetworksOptions","text","$t","value","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$emit","device","response","stop","methods","setApn","network","simApn"],"sources":["node_modules/vuntangle/src/shared/SettingsInterface/components/wwan/Wwan.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- show enabled/disabled option if component used in setup wizard -->\n    <div class=\"d-flex\">\n      <v-switch v-if=\"isSetup\" v-model=\"intf.enabled\" :label=\"$t('interface_enabled')\" class=\"mt-0\" />\n    </div>\n    <v-row>\n      <v-col>\n        <u-select v-model=\"intf.simNetwork\" :items=\"simNetworksOptions\" :label=\"$t('network')\" @change=\"setApn\" />\n      </v-col>\n      <v-col v-if=\"intf.simNetwork !== 'Verizon'\">\n        <ValidationProvider v-slot=\"{ errors }\" :rules=\"{ required: intf.simNetwork === 'AT&T' }\">\n          <u-text-field\n            v-if=\"intf.simNetwork === 'T-Mobile' || intf.simNetwork === 'AT&T'\"\n            v-model=\"intf.simApn\"\n            :label=\"apn\"\n            :disabled=\"intf.simNetwork === 'T-Mobile'\"\n            :error-messages=\"errors\"\n          >\n            <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n          </u-text-field>\n        </ValidationProvider>\n      </v-col>\n    </v-row>\n    <u-section v-if=\"simDetails\" :title=\"$t('sim_details')\" class=\"mt-8\" style=\"margin-bottom: 0 !important\">\n      <ul>\n        <li>IMEI: {{ simDetails.imei || $t('n_a') }}</li>\n        <li>IMSI: {{ simDetails.imsi || $t('n_a') }}</li>\n        <li>ICCID: {{ simDetails.iccid || $t('n_a') }}</li>\n      </ul>\n    </u-section>\n  </div>\n</template>\n<script>\n  // import http from '@/plugins/http'\n\n  export default {\n    inject: ['$intf', '$status'],\n    props: {\n      /**\n       * flag telling if the component is used in setup wizard\n       */\n      isSetup: { type: Boolean, default: false },\n    },\n    data() {\n      return {\n        simApns: {\n          'T-Mobile': 'fast.t-mobile.com',\n          'Verizon': null,\n          'AT&T': 'm2m.com.attz',\n        },\n        simDetails: null,\n      }\n    },\n    computed: {\n      intf: ({ $intf }) => $intf(),\n      status: ({ $status }) => $status(),\n\n      simNetworksOptions() {\n        return [\n          { text: this.$t('t_mobile'), value: 'T-Mobile' },\n          { text: this.$t('verizon'), value: 'Verizon' },\n          { text: this.$t('at_t'), value: 'AT&T' },\n        ]\n      },\n    },\n    async created() {\n      await this.$emit('get-status-wwan', this.intf.device, response => {\n        // returns an array of objects like { 'frequency': '2.412 GHz', 'channel': 1 }\n        this.simDetails = response || null\n      })\n    },\n    methods: {\n      setApn(network) {\n        this.intf.simApn = this.simApns[network]\n      },\n    },\n  }\n</script>\n"],"mappings":";;AAkCA;;AAEA;EACAA,MAAA;EACAC,KAAA;IACA;AACA;AACA;IACAC,OAAA;MAAAC,IAAA,EAAAC,OAAA;MAAA;IAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;QACA;QACA;QACA;MACA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACAC,IAAA,WAAAA,KAAAC,IAAA;MAAA,IAAAC,KAAA,GAAAD,IAAA,CAAAC,KAAA;MAAA,OAAAA,KAAA;IAAA;IACAC,MAAA,WAAAA,OAAAC,KAAA;MAAA,IAAAC,OAAA,GAAAD,KAAA,CAAAC,OAAA;MAAA,OAAAA,OAAA;IAAA;IAEAC,kBAAA,WAAAA,mBAAA;MACA,QACA;QAAAC,IAAA,OAAAC,EAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA,OAAAC,EAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA,OAAAC,EAAA;QAAAC,KAAA;MAAA,EACA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAT,KAAA,CAAAU,KAAA,oBAAAV,KAAA,CAAAX,IAAA,CAAAsB,MAAA,YAAAC,QAAA;cACA;cACAZ,KAAA,CAAAb,UAAA,GAAAyB,QAAA;YACA;UAAA;UAAA;YAAA,OAAAL,QAAA,CAAAM,IAAA;QAAA;MAAA,GAAAT,OAAA;IAAA;EACA;EACAU,OAAA;IACAC,MAAA,WAAAA,OAAAC,OAAA;MACA,KAAA3B,IAAA,CAAA4B,MAAA,QAAA/B,OAAA,CAAA8B,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}