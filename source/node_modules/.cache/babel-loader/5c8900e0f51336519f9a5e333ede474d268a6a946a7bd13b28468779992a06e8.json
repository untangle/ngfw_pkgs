{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport cloneDeep from 'lodash/cloneDeep';\nimport IpsecCipherDialog from './IpsecCipherDialog.vue';\nexport default {\n  props: {\n    ipsec: {\n      type: Object,\n      \"default\": function _default() {\n        return null;\n      }\n    },\n    item: {\n      type: Object,\n      \"default\": function _default() {\n        return null;\n      }\n    },\n    index: {\n      type: Number,\n      \"default\": null\n    },\n    phase: {\n      type: String,\n      \"default\": null\n    }\n  },\n  computed: {\n    fullCipher: function fullCipher() {\n      return \"\".concat(this.item.encryption, \"-\").concat(this.item.hash, \"-\").concat(this.item.group);\n    }\n  },\n  methods: {\n    /**\n     * Shows an editing dialog for proposal\n     * @param {Number} index - the index of the proposal being edited (-1 means new)\n     */\n    onEdit: function onEdit(index) {\n      this.$vuntangle.dialog.show({\n        title: index === -1 ? this.$t(\"add_\".concat(this.phase, \"_proposal\")) : this.$t(\"edit_\".concat(this.phase, \"_proposal\")),\n        component: IpsecCipherDialog,\n        width: 400,\n        actionLabel: index === -1 ? this.$t('add') : this.$t('update'),\n        componentProps: {\n          phase: this.phase,\n          list: this.ipsec[this.phase],\n          index: index\n        }\n      });\n    },\n    /**\n     * Removes a proposal from list\n     * @param {Number} index - the index of the proposal to be removed\n     */\n    onDelete: function onDelete(index) {\n      var phaseClone = cloneDeep(this.ipsec[this.phase]);\n      phaseClone.splice(index, 1);\n      this.$set(this.ipsec, this.phase, phaseClone);\n    }\n  }\n};","map":{"version":3,"names":["cloneDeep","IpsecCipherDialog","props","ipsec","type","Object","default","item","index","Number","phase","String","computed","fullCipher","concat","encryption","hash","group","methods","onEdit","$vuntangle","dialog","show","title","$t","component","width","actionLabel","componentProps","list","onDelete","phaseClone","splice","$set"],"sources":["node_modules/vuntangle/src/shared/SettingsInterface/components/ipsec/IpsecCipherItem.vue"],"sourcesContent":["<template>\n  <v-card outlined class=\"pa-1 my-1 d-flex align-center\" style=\"cursor: pointer\" height=\"44\">\n    <pre> {{ fullCipher }} </pre>\n    <v-spacer />\n    <v-btn icon @click=\"onEdit(index)\"> <v-icon> mdi-pencil </v-icon></v-btn>\n    <v-btn v-if=\"ipsec[phase].length > 1\" icon @click=\"onDelete(index)\">\n      <v-icon color=\"red\"> mdi-delete </v-icon></v-btn\n    >\n  </v-card>\n</template>\n\n<script>\n  import cloneDeep from 'lodash/cloneDeep'\n  import IpsecCipherDialog from './IpsecCipherDialog.vue'\n\n  export default {\n    props: {\n      ipsec: { type: Object, default: () => null },\n      item: { type: Object, default: () => null },\n      index: { type: Number, default: null },\n      phase: { type: String, default: null },\n    },\n\n    computed: {\n      fullCipher() {\n        return `${this.item.encryption}-${this.item.hash}-${this.item.group}`\n      },\n    },\n\n    methods: {\n      /**\n       * Shows an editing dialog for proposal\n       * @param {Number} index - the index of the proposal being edited (-1 means new)\n       */\n      onEdit(index) {\n        this.$vuntangle.dialog.show({\n          title: index === -1 ? this.$t(`add_${this.phase}_proposal`) : this.$t(`edit_${this.phase}_proposal`),\n          component: IpsecCipherDialog,\n          width: 400,\n          actionLabel: index === -1 ? this.$t('add') : this.$t('update'),\n          componentProps: {\n            phase: this.phase,\n            list: this.ipsec[this.phase],\n            index,\n          },\n        })\n      },\n\n      /**\n       * Removes a proposal from list\n       * @param {Number} index - the index of the proposal to be removed\n       */\n      onDelete(index) {\n        const phaseClone = cloneDeep(this.ipsec[this.phase])\n        phaseClone.splice(index, 1)\n        this.$set(this.ipsec, this.phase, phaseClone)\n      },\n    },\n  }\n</script>\n"],"mappings":";;;AAYA,OAAAA,SAAA;AACA,OAAAC,iBAAA;AAEA;EACAC,KAAA;IACAC,KAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;IACAC,IAAA;MAAAH,IAAA,EAAAC,MAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;IACAE,KAAA;MAAAJ,IAAA,EAAAK,MAAA;MAAA;IAAA;IACAC,KAAA;MAAAN,IAAA,EAAAO,MAAA;MAAA;IAAA;EACA;EAEAC,QAAA;IACAC,UAAA,WAAAA,WAAA;MACA,UAAAC,MAAA,MAAAP,IAAA,CAAAQ,UAAA,OAAAD,MAAA,MAAAP,IAAA,CAAAS,IAAA,OAAAF,MAAA,MAAAP,IAAA,CAAAU,KAAA;IACA;EACA;EAEAC,OAAA;IACA;AACA;AACA;AACA;IACAC,MAAA,WAAAA,OAAAX,KAAA;MACA,KAAAY,UAAA,CAAAC,MAAA,CAAAC,IAAA;QACAC,KAAA,EAAAf,KAAA,eAAAgB,EAAA,QAAAV,MAAA,MAAAJ,KAAA,uBAAAc,EAAA,SAAAV,MAAA,MAAAJ,KAAA;QACAe,SAAA,EAAAxB,iBAAA;QACAyB,KAAA;QACAC,WAAA,EAAAnB,KAAA,eAAAgB,EAAA,eAAAA,EAAA;QACAI,cAAA;UACAlB,KAAA,OAAAA,KAAA;UACAmB,IAAA,OAAA1B,KAAA,MAAAO,KAAA;UACAF,KAAA,EAAAA;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;IACAsB,QAAA,WAAAA,SAAAtB,KAAA;MACA,IAAAuB,UAAA,GAAA/B,SAAA,MAAAG,KAAA,MAAAO,KAAA;MACAqB,UAAA,CAAAC,MAAA,CAAAxB,KAAA;MACA,KAAAyB,IAAA,MAAA9B,KAAA,OAAAO,KAAA,EAAAqB,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}