{"ast":null,"code":"import _objectSpread from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { Chart } from 'highcharts-vue';\nimport merge from 'lodash/merge';\nimport UChartOverlay from '../UChartOverlay';\nimport uChartProps from './props';\nvar defaultOptions = {\n  credits: {\n    enabled: false\n  },\n  title: {\n    text: undefined\n  },\n  series: []\n};\nexport default {\n  components: {\n    Chart: Chart,\n    UChartOverlay: UChartOverlay\n  },\n  props: _objectSpread({\n    // different chart types (chart, mapChart, stockChart)\n    constructorType: {\n      type: String,\n      \"default\": 'chart'\n    },\n    // highcharts options object\n    options: {\n      type: Object,\n      required: true\n    }\n  }, uChartProps),\n  data: function data() {\n    return {\n      mergedOptions: defaultOptions\n    };\n  },\n  watch: {\n    resize: function resize(newResize) {\n      var _this = this;\n      if (newResize) {\n        this.$nextTick(function () {\n          _this.$refs.hc.chart.reflow();\n          // set the prop back in the parent so it can be resized again\n          _this.$emit('update:resize', false);\n        });\n      }\n    },\n    options: {\n      immediate: true,\n      deep: true,\n      handler: function handler(options) {\n        var _this2 = this;\n        this.$nextTick(function () {\n          return _this2.mergedOptions = merge({}, defaultOptions, options, _this2.getHcTheme(_this2.$vuntangle.theme));\n        });\n      }\n    },\n    'options.series': {\n      immediate: true,\n      deep: true,\n      handler: function handler() {\n        var _this3 = this;\n        this.$nextTick(function () {\n          return _this3.$refs.hc.chart.reflow();\n        });\n      }\n    },\n    '$vuntangle.theme': function $vuntangleTheme(theme) {\n      var _this4 = this;\n      this.$nextTick(function () {\n        return merge(_this4.mergedOptions, _this4.getHcTheme(theme));\n      });\n    }\n  },\n  methods: {\n    /**\n     * Returns light and dark theme settings for highcharts.\n     *\n     * @param {String} name - The name of the theme (\"Base Theme\" or \"Dark Theme\")\n     *\n     * @returns {Object}\n     */\n    getHcTheme: function getHcTheme(name) {\n      var lightTheme = {\n        colors: ['#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9', '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1'],\n        chart: {\n          backgroundColor: '#FFFFFF'\n        },\n        xAxis: {\n          lineColor: '#ccd6eb',\n          labels: {\n            style: {\n              color: '#555555'\n            }\n          }\n        },\n        yAxis: {\n          gridLineColor: '#e6e6e6',\n          labels: {\n            style: {\n              color: '#555555'\n            }\n          }\n        },\n        legend: {\n          itemStyle: {\n            color: '#333333',\n            fontWeight: 'normal'\n          },\n          itemHoverStyle: {\n            'color': '#000000'\n          },\n          itemHiddenStyle: {\n            'color': '#CCCCCC'\n          },\n          title: {\n            style: {\n              color: '#333'\n            }\n          }\n        },\n        plotOptions: {\n          pie: {\n            borderColor: '#FFFFFF'\n          },\n          series: {\n            dataLabels: {\n              style: {\n                color: '#333333',\n                fontWeight: 'normal',\n                textOutline: 0\n              }\n            }\n          }\n        }\n      };\n      var darkTheme = {\n        colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee', '#55BF3B', '#DF5353', '#7798BF'],\n        chart: {\n          backgroundColor: 'transparent'\n        },\n        xAxis: {\n          lineColor: '#444444',\n          gridLineColor: '#222222',\n          labels: {\n            style: {\n              color: '#AAA'\n            }\n          }\n        },\n        yAxis: {\n          gridLineColor: '#333333',\n          labels: {\n            style: {\n              color: '#AAA'\n            }\n          }\n        },\n        legend: {\n          itemStyle: {\n            color: '#CCCCCC',\n            fontWeight: 'normal'\n          },\n          itemHoverStyle: {\n            'color': '#EEEEEE'\n          },\n          itemHiddenStyle: {\n            'color': '#444444'\n          },\n          title: {\n            style: {\n              color: '#CCC'\n            }\n          }\n        },\n        plotOptions: {\n          pie: {\n            borderColor: '#1f2427'\n          },\n          series: {\n            dataLabels: {\n              style: {\n                color: '#EEEEEE',\n                fontWeight: 'normal',\n                textOutline: 0\n              }\n            }\n          }\n        }\n      };\n      return name === 'dark' ? darkTheme : lightTheme;\n    }\n  }\n};","map":{"version":3,"names":["Chart","merge","UChartOverlay","uChartProps","defaultOptions","credits","enabled","title","text","undefined","series","components","props","_objectSpread","constructorType","type","String","options","Object","required","data","mergedOptions","watch","resize","newResize","_this","$nextTick","$refs","hc","chart","reflow","$emit","immediate","deep","handler","_this2","getHcTheme","$vuntangle","theme","_this3","$vuntangleTheme","_this4","methods","name","lightTheme","colors","backgroundColor","xAxis","lineColor","labels","style","color","yAxis","gridLineColor","legend","itemStyle","fontWeight","itemHoverStyle","itemHiddenStyle","plotOptions","pie","borderColor","dataLabels","textOutline","darkTheme"],"sources":["node_modules/vuntangle/src/components/UChart/UChart.vue"],"sourcesContent":["<template>\n  <div style=\"position: relative; height: 100%; width: 100%\">\n    <chart\n      ref=\"hc\"\n      :constructor-type=\"constructorType\"\n      :options=\"mergedOptions\"\n      style=\"position: absolute; top: 0; right: 0; left: 0; bottom: 0; width: 100%; height: 100%\"\n    />\n    <u-chart-overlay :fetching=\"fetching\" :no-data=\"mergedOptions.series.length === 0\" />\n  </div>\n</template>\n<script>\n  import { Chart } from 'highcharts-vue'\n  import merge from 'lodash/merge'\n  import UChartOverlay from '../UChartOverlay'\n  import uChartProps from './props'\n\n  const defaultOptions = {\n    credits: { enabled: false },\n    title: { text: undefined },\n    series: [],\n  }\n\n  export default {\n    components: { Chart, UChartOverlay },\n    props: {\n      // different chart types (chart, mapChart, stockChart)\n      constructorType: { type: String, default: 'chart' },\n\n      // highcharts options object\n      options: { type: Object, required: true },\n\n      // import common props\n      ...uChartProps,\n    },\n    data: () => ({ mergedOptions: defaultOptions }),\n    watch: {\n      resize(newResize) {\n        if (newResize) {\n          this.$nextTick(() => {\n            this.$refs.hc.chart.reflow()\n            // set the prop back in the parent so it can be resized again\n            this.$emit('update:resize', false)\n          })\n        }\n      },\n      options: {\n        immediate: true,\n        deep: true,\n        handler(options) {\n          this.$nextTick(\n            () => (this.mergedOptions = merge({}, defaultOptions, options, this.getHcTheme(this.$vuntangle.theme))),\n          )\n        },\n      },\n      'options.series': {\n        immediate: true,\n        deep: true,\n        handler() {\n          this.$nextTick(() => this.$refs.hc.chart.reflow())\n        },\n      },\n      '$vuntangle.theme'(theme) {\n        this.$nextTick(() => merge(this.mergedOptions, this.getHcTheme(theme)))\n      },\n    },\n    methods: {\n      /**\n       * Returns light and dark theme settings for highcharts.\n       *\n       * @param {String} name - The name of the theme (\"Base Theme\" or \"Dark Theme\")\n       *\n       * @returns {Object}\n       */\n      getHcTheme(name) {\n        const lightTheme = {\n          colors: [\n            '#7cb5ec',\n            '#434348',\n            '#90ed7d',\n            '#f7a35c',\n            '#8085e9',\n            '#f15c80',\n            '#e4d354',\n            '#2b908f',\n            '#f45b5b',\n            '#91e8e1',\n          ],\n          chart: {\n            backgroundColor: '#FFFFFF',\n          },\n          xAxis: {\n            lineColor: '#ccd6eb',\n            labels: {\n              style: {\n                color: '#555555',\n              },\n            },\n          },\n          yAxis: {\n            gridLineColor: '#e6e6e6',\n            labels: {\n              style: {\n                color: '#555555',\n              },\n            },\n          },\n          legend: {\n            itemStyle: {\n              color: '#333333',\n              fontWeight: 'normal',\n            },\n            itemHoverStyle: {\n              'color': '#000000',\n            },\n            itemHiddenStyle: {\n              'color': '#CCCCCC',\n            },\n            title: {\n              style: { color: '#333' },\n            },\n          },\n          plotOptions: {\n            pie: {\n              borderColor: '#FFFFFF',\n            },\n            series: {\n              dataLabels: {\n                style: {\n                  color: '#333333',\n                  fontWeight: 'normal',\n                  textOutline: 0,\n                },\n              },\n            },\n          },\n        }\n\n        const darkTheme = {\n          colors: [\n            '#2b908f',\n            '#90ee7e',\n            '#f45b5b',\n            '#7798BF',\n            '#aaeeee',\n            '#ff0066',\n            '#eeaaee',\n            '#55BF3B',\n            '#DF5353',\n            '#7798BF',\n          ],\n          chart: {\n            backgroundColor: 'transparent',\n          },\n          xAxis: {\n            lineColor: '#444444',\n            gridLineColor: '#222222',\n            labels: {\n              style: {\n                color: '#AAA',\n              },\n            },\n          },\n          yAxis: {\n            gridLineColor: '#333333',\n            labels: {\n              style: {\n                color: '#AAA',\n              },\n            },\n          },\n          legend: {\n            itemStyle: {\n              color: '#CCCCCC',\n              fontWeight: 'normal',\n            },\n            itemHoverStyle: {\n              'color': '#EEEEEE',\n            },\n            itemHiddenStyle: {\n              'color': '#444444',\n            },\n            title: {\n              style: { color: '#CCC' },\n            },\n          },\n          plotOptions: {\n            pie: {\n              borderColor: '#1f2427',\n            },\n            series: {\n              dataLabels: {\n                style: {\n                  color: '#EEEEEE',\n                  fontWeight: 'normal',\n                  textOutline: 0,\n                },\n              },\n            },\n          },\n        }\n\n        return name === 'dark' ? darkTheme : lightTheme\n      },\n    },\n  }\n</script>\n"],"mappings":";AAYA,SAAAA,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,aAAA;AACA,OAAAC,WAAA;AAEA,IAAAC,cAAA;EACAC,OAAA;IAAAC,OAAA;EAAA;EACAC,KAAA;IAAAC,IAAA,EAAAC;EAAA;EACAC,MAAA;AACA;AAEA;EACAC,UAAA;IAAAX,KAAA,EAAAA,KAAA;IAAAE,aAAA,EAAAA;EAAA;EACAU,KAAA,EAAAC,aAAA;IACA;IACAC,eAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA;IAAA;IAEA;IACAC,OAAA;MAAAF,IAAA,EAAAG,MAAA;MAAAC,QAAA;IAAA;EAAA,GAGAhB,WAAA,CACA;EACAiB,IAAA,WAAAA,KAAA;IAAA;MAAAC,aAAA,EAAAjB;IAAA;EAAA;EACAkB,KAAA;IACAC,MAAA,WAAAA,OAAAC,SAAA;MAAA,IAAAC,KAAA;MACA,IAAAD,SAAA;QACA,KAAAE,SAAA;UACAD,KAAA,CAAAE,KAAA,CAAAC,EAAA,CAAAC,KAAA,CAAAC,MAAA;UACA;UACAL,KAAA,CAAAM,KAAA;QACA;MACA;IACA;IACAd,OAAA;MACAe,SAAA;MACAC,IAAA;MACAC,OAAA,WAAAA,QAAAjB,OAAA;QAAA,IAAAkB,MAAA;QACA,KAAAT,SAAA,CACA;UAAA,OAAAS,MAAA,CAAAd,aAAA,GAAApB,KAAA,KAAAG,cAAA,EAAAa,OAAA,EAAAkB,MAAA,CAAAC,UAAA,CAAAD,MAAA,CAAAE,UAAA,CAAAC,KAAA;QAAA,CACA;MACA;IACA;IACA;MACAN,SAAA;MACAC,IAAA;MACAC,OAAA,WAAAA,QAAA;QAAA,IAAAK,MAAA;QACA,KAAAb,SAAA;UAAA,OAAAa,MAAA,CAAAZ,KAAA,CAAAC,EAAA,CAAAC,KAAA,CAAAC,MAAA;QAAA;MACA;IACA;IACA,6BAAAU,gBAAAF,KAAA;MAAA,IAAAG,MAAA;MACA,KAAAf,SAAA;QAAA,OAAAzB,KAAA,CAAAwC,MAAA,CAAApB,aAAA,EAAAoB,MAAA,CAAAL,UAAA,CAAAE,KAAA;MAAA;IACA;EACA;EACAI,OAAA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAN,UAAA,WAAAA,WAAAO,IAAA;MACA,IAAAC,UAAA;QACAC,MAAA,GACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA;QACAhB,KAAA;UACAiB,eAAA;QACA;QACAC,KAAA;UACAC,SAAA;UACAC,MAAA;YACAC,KAAA;cACAC,KAAA;YACA;UACA;QACA;QACAC,KAAA;UACAC,aAAA;UACAJ,MAAA;YACAC,KAAA;cACAC,KAAA;YACA;UACA;QACA;QACAG,MAAA;UACAC,SAAA;YACAJ,KAAA;YACAK,UAAA;UACA;UACAC,cAAA;YACA;UACA;UACAC,eAAA;YACA;UACA;UACAnD,KAAA;YACA2C,KAAA;cAAAC,KAAA;YAAA;UACA;QACA;QACAQ,WAAA;UACAC,GAAA;YACAC,WAAA;UACA;UACAnD,MAAA;YACAoD,UAAA;cACAZ,KAAA;gBACAC,KAAA;gBACAK,UAAA;gBACAO,WAAA;cACA;YACA;UACA;QACA;MACA;MAEA,IAAAC,SAAA;QACAnB,MAAA,GACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA;QACAhB,KAAA;UACAiB,eAAA;QACA;QACAC,KAAA;UACAC,SAAA;UACAK,aAAA;UACAJ,MAAA;YACAC,KAAA;cACAC,KAAA;YACA;UACA;QACA;QACAC,KAAA;UACAC,aAAA;UACAJ,MAAA;YACAC,KAAA;cACAC,KAAA;YACA;UACA;QACA;QACAG,MAAA;UACAC,SAAA;YACAJ,KAAA;YACAK,UAAA;UACA;UACAC,cAAA;YACA;UACA;UACAC,eAAA;YACA;UACA;UACAnD,KAAA;YACA2C,KAAA;cAAAC,KAAA;YAAA;UACA;QACA;QACAQ,WAAA;UACAC,GAAA;YACAC,WAAA;UACA;UACAnD,MAAA;YACAoD,UAAA;cACAZ,KAAA;gBACAC,KAAA;gBACAK,UAAA;gBACAO,WAAA;cACA;YACA;UACA;QACA;MACA;MAEA,OAAApB,IAAA,cAAAqB,SAAA,GAAApB,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}