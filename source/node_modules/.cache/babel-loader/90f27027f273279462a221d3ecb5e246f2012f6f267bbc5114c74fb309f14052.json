{"ast":null,"code":"import _objectSpread from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { VContainer, VSpacer, VDivider, VCheckbox } from 'vuetify/lib';\nimport UBtn from '../../components/UBtn';\nimport UGrid from '../../components/UGrid';\nimport settingsMixin from '../settingsMixin';\nimport InvalidSettings from '../InvalidSettings/Main.vue';\nimport defaults from './defaults';\nimport schema from './schema';\nimport DhcpReservation from './DhcpReservation.vue';\nexport default {\n  components: {\n    VContainer: VContainer,\n    VSpacer: VSpacer,\n    VDivider: VDivider,\n    VCheckbox: VCheckbox,\n    UBtn: UBtn,\n    UGrid: UGrid,\n    InvalidSettings: InvalidSettings\n  },\n  mixins: [settingsMixin],\n  props: {\n    /**\n     * Leases are not a configuration and are fetched only on box ui,\n     * passing `false` will not render the leases grid (e.g. for cloud)\n     */\n    leases: {\n      type: [Array, Boolean],\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    fetching: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  defaults: defaults,\n  schema: schema,\n  data: function data() {\n    return {\n      actionColumnDefaults: {\n        maxWidth: 50,\n        flex: 0,\n        resizable: false,\n        sortable: false,\n        suppressMenu: true,\n        cellRenderer: 'ActionButton'\n      }\n    };\n  },\n  computed: {\n    reservationsColumnDefs: function reservationsColumnDefs() {\n      var _this = this;\n      var columns = [{\n        headerName: this.$vuntangle.$t('ip_address'),\n        field: 'address',\n        comparator: function comparator(a, b) {\n          return _this.$vuntangle.util.compareIpAny(a, b);\n        },\n        lockVisible: true\n      }, {\n        headerName: this.$vuntangle.$t('mac_address'),\n        field: 'macAddress'\n      }, {\n        headerName: this.$vuntangle.$t('description'),\n        field: 'description'\n      }];\n      columns.push(_objectSpread(_objectSpread({}, this.actionColumnDefaults), {}, {\n        cellRendererParams: {\n          icon: 'mdi-pencil',\n          small: true,\n          disabled: this.disabled,\n          click: function click(_ref) {\n            var node = _ref.node;\n            return _this.onAddEditReservation(node.id);\n          }\n        }\n      }), _objectSpread(_objectSpread({}, this.actionColumnDefaults), {}, {\n        cellRendererParams: {\n          icon: 'mdi-delete',\n          small: true,\n          disabled: this.disabled,\n          click: function click(_ref2) {\n            var node = _ref2.node;\n            return _this.onDeleteReservation(node.id);\n          }\n        }\n      }));\n      return columns;\n    },\n    leasesColumnDefs: function leasesColumnDefs() {\n      var _this2 = this;\n      var columns = [{\n        headerName: this.$vuntangle.$t('ip_address'),\n        field: 'ipAddr',\n        comparator: function comparator(a, b) {\n          return _this2.$vuntangle.util.compareIpAny(a, b);\n        },\n        lockVisible: true\n      }, {\n        headerName: this.$vuntangle.$t('mac_address'),\n        field: 'macAddress'\n      }, {\n        headerName: this.$vuntangle.$t('expiration'),\n        field: 'leaseExpiration',\n        valueGetter: function valueGetter(_ref3) {\n          var data = _ref3.data;\n          return _this2.$vuntangle.dates.formatLocaleDate(data.leaseExpiration * 1000);\n        }\n      }, {\n        headerName: this.$vuntangle.$t('host'),\n        field: 'hostName'\n      }];\n      columns.push(_objectSpread(_objectSpread({}, this.actionColumnDefaults), {}, {\n        cellRendererParams: function cellRendererParams(params) {\n          return {\n            icon: 'mdi-plus-circle',\n            small: true,\n            click: function click() {\n              _this2.onAddReservationFromLease(params.data);\n            }\n          };\n        }\n      }));\n      return columns;\n    }\n  },\n  methods: {\n    /**\n     * Shows a dialog to edit a reservation than updates the dhcp entries\n     * @param {Number} index - the index of entry being edited or null if added\n     */\n    onAddEditReservation: function onAddEditReservation(index) {\n      var _this3 = this;\n      this.$vuntangle.dialog.show({\n        title: index === null ? this.$vuntangle.$t('add_reservation') : this.$vuntangle.$t('edit_reservation'),\n        component: DhcpReservation,\n        width: 500,\n        actionLabel: index === null ? this.$vuntangle.$t('add') : this.$vuntangle.$t('update'),\n        componentProps: _objectSpread({\n          index: index,\n          entries: this.settingsCopy.staticDhcpEntries\n        }, index === null ? {} : {\n          settings: this.settingsCopy.staticDhcpEntries[index]\n        }),\n        componentEvents: {\n          update: function update(entry, index) {\n            if (index === null) {\n              _this3.settingsCopy.staticDhcpEntries.push(entry);\n            } else {\n              _this3.settingsCopy.staticDhcpEntries.splice(index, 1, entry);\n            }\n          }\n        }\n      });\n    },\n    /**\n     * Removes an existing static dhcp entry\n     * @param {Number} index - the index of entry being removed\n     */\n    onDeleteReservation: function onDeleteReservation(index) {\n      this.settingsCopy.staticDhcpEntries.splice(index, 1);\n    },\n    /**\n     * Adds a dhcp static entry from a lease\n     * @param {Object} lease - the lease data to be added to static dhcp entries\n     */\n    onAddReservationFromLease: function onAddReservationFromLease(lease) {\n      // prevent adding a lease entry for which macAddress or ip address already exists\n      var entries = this.settingsCopy.staticDhcpEntries;\n      if (entries.findIndex(function (item) {\n        return item.macAddress === lease.macAddress || item.address === lease.ipAddr;\n      }) >= 0) {\n        this.$vuntangle.toast.add(this.$vuntangle.$t('dhcp_lease_reservation_conflict'));\n        return;\n      }\n      this.settingsCopy.staticDhcpEntries.push({\n        address: lease.ipAddr,\n        macAddress: lease.macAddress,\n        description: lease.hostName\n      });\n    }\n  }\n};","map":{"version":3,"names":["VContainer","VSpacer","VDivider","VCheckbox","UBtn","UGrid","settingsMixin","InvalidSettings","defaults","schema","DhcpReservation","components","mixins","props","leases","type","Array","Boolean","default","fetching","data","actionColumnDefaults","maxWidth","flex","resizable","sortable","suppressMenu","cellRenderer","computed","reservationsColumnDefs","_this","columns","headerName","$vuntangle","$t","field","comparator","a","b","util","compareIpAny","lockVisible","push","_objectSpread","cellRendererParams","icon","small","disabled","click","_ref","node","onAddEditReservation","id","_ref2","onDeleteReservation","leasesColumnDefs","_this2","valueGetter","_ref3","dates","formatLocaleDate","leaseExpiration","params","onAddReservationFromLease","methods","index","_this3","dialog","show","title","component","width","actionLabel","componentProps","entries","settingsCopy","staticDhcpEntries","settings","componentEvents","update","entry","splice","lease","findIndex","item","macAddress","address","ipAddr","toast","add","description","hostName"],"sources":["node_modules/vuntangle/src/shared/SettingsDhcp/Main.vue"],"sourcesContent":["<template>\n  <v-container\n    :fluid=\"classicView ? true : false\"\n    :class=\"`${classicView ? 'pa-4 ' : ''}shared-cmp d-flex flex-column flex-grow-1`\"\n  >\n    <div class=\"d-flex align-center\">\n      <h1 v-if=\"classicView\" class=\"headline\">{{ $vuntangle.$t('dhcp') }}</h1>\n      <h2 v-else class=\"font-weight-light\">{{ $vuntangle.$t('dhcp') }}</h2>\n      <v-spacer />\n      <slot name=\"actions\" :new-settings=\"settingsCopy\" :is-dirty=\"isDirty\" />\n    </div>\n    <v-divider class=\"my-2\" />\n    <u-section v-if=\"!!$slots['extra-fields']\">\n      <slot name=\"extra-fields\" />\n    </u-section>\n    <div class=\"d-flex\">\n      <v-checkbox\n        v-model=\"settingsCopy.dhcpAuthoritative\"\n        :label=\"$vuntangle.$t('dhcp_authoritative')\"\n        :disabled=\"disabled\"\n      />\n    </div>\n\n    <div class=\"d-flex align-center mb-2\">\n      <h2 class=\"font-weight-light\">{{ $vuntangle.$t('reservations') }}</h2>\n      <v-spacer />\n      <u-btn :min-width=\"null\" :disabled=\"disabled\" @click=\"onAddEditReservation(null)\">{{\n        $vuntangle.$t('add_reservation')\n      }}</u-btn>\n    </div>\n\n    <u-grid\n      id=\"reservations\"\n      :row-data=\"settingsCopy.staticDhcpEntries\"\n      :column-defs=\"reservationsColumnDefs\"\n      :enable-refresh=\"false\"\n      style=\"height: 300px\"\n    />\n\n    <template v-if=\"leases !== false\">\n      <h2 class=\"font-weight-light mt-4 mb-2\">{{ $vuntangle.$t('leases') }}</h2>\n      <u-grid\n        id=\"leases\"\n        :row-data=\"leases\"\n        :column-defs=\"leasesColumnDefs\"\n        :fetching=\"fetching\"\n        @refresh=\"$emit('fetch-leases')\"\n        style=\"height: 300px\"\n      />\n    </template>\n\n    <invalid-settings\n      v-if=\"invalidSettingsErrors\"\n      service=\"DHCP Settings\"\n      :settings=\"settings\"\n      :schema=\"$options.schema\"\n      :errors.sync=\"invalidSettingsErrors\"\n    />\n  </v-container>\n</template>\n<script>\n  import { VContainer, VSpacer, VDivider, VCheckbox } from 'vuetify/lib'\n  import UBtn from '../../components/UBtn'\n  import UGrid from '../../components/UGrid'\n  import settingsMixin from '../settingsMixin'\n  import InvalidSettings from '../InvalidSettings/Main.vue'\n  import defaults from './defaults'\n  import schema from './schema'\n  import DhcpReservation from './DhcpReservation.vue'\n\n  export default {\n    components: {\n      VContainer,\n      VSpacer,\n      VDivider,\n      VCheckbox,\n      UBtn,\n      UGrid,\n      InvalidSettings,\n    },\n    mixins: [settingsMixin],\n    props: {\n      /**\n       * Leases are not a configuration and are fetched only on box ui,\n       * passing `false` will not render the leases grid (e.g. for cloud)\n       */\n      leases: { type: [Array, Boolean], default: () => [] },\n      fetching: { type: Boolean, default: false },\n    },\n    defaults,\n    schema,\n    data: () => ({\n      actionColumnDefaults: {\n        maxWidth: 50,\n        flex: 0,\n        resizable: false,\n        sortable: false,\n        suppressMenu: true,\n        cellRenderer: 'ActionButton',\n      },\n    }),\n    computed: {\n      reservationsColumnDefs() {\n        const columns = [\n          {\n            headerName: this.$vuntangle.$t('ip_address'),\n            field: 'address',\n            comparator: (a, b) => this.$vuntangle.util.compareIpAny(a, b),\n            lockVisible: true,\n          },\n          { headerName: this.$vuntangle.$t('mac_address'), field: 'macAddress' },\n          { headerName: this.$vuntangle.$t('description'), field: 'description' },\n        ]\n        columns.push(\n          {\n            ...this.actionColumnDefaults,\n            cellRendererParams: {\n              icon: 'mdi-pencil',\n              small: true,\n              disabled: this.disabled,\n              click: ({ node }) => this.onAddEditReservation(node.id),\n            },\n          },\n          {\n            ...this.actionColumnDefaults,\n            cellRendererParams: {\n              icon: 'mdi-delete',\n              small: true,\n              disabled: this.disabled,\n              click: ({ node }) => this.onDeleteReservation(node.id),\n            },\n          },\n        )\n        return columns\n      },\n      leasesColumnDefs() {\n        const columns = [\n          {\n            headerName: this.$vuntangle.$t('ip_address'),\n            field: 'ipAddr',\n            comparator: (a, b) => this.$vuntangle.util.compareIpAny(a, b),\n            lockVisible: true,\n          },\n          { headerName: this.$vuntangle.$t('mac_address'), field: 'macAddress' },\n          {\n            headerName: this.$vuntangle.$t('expiration'),\n            field: 'leaseExpiration',\n            valueGetter: ({ data }) => this.$vuntangle.dates.formatLocaleDate(data.leaseExpiration * 1000),\n          },\n          { headerName: this.$vuntangle.$t('host'), field: 'hostName' },\n        ]\n        columns.push({\n          ...this.actionColumnDefaults,\n          cellRendererParams: params => {\n            return {\n              icon: 'mdi-plus-circle',\n              small: true,\n              click: () => {\n                this.onAddReservationFromLease(params.data)\n              },\n            }\n          },\n        })\n        return columns\n      },\n    },\n\n    methods: {\n      /**\n       * Shows a dialog to edit a reservation than updates the dhcp entries\n       * @param {Number} index - the index of entry being edited or null if added\n       */\n      onAddEditReservation(index) {\n        this.$vuntangle.dialog.show({\n          title: index === null ? this.$vuntangle.$t('add_reservation') : this.$vuntangle.$t('edit_reservation'),\n          component: DhcpReservation,\n          width: 500,\n          actionLabel: index === null ? this.$vuntangle.$t('add') : this.$vuntangle.$t('update'),\n          componentProps: {\n            index,\n            entries: this.settingsCopy.staticDhcpEntries,\n            ...(index === null ? {} : { settings: this.settingsCopy.staticDhcpEntries[index] }),\n          },\n          componentEvents: {\n            update: (entry, index) => {\n              if (index === null) {\n                this.settingsCopy.staticDhcpEntries.push(entry)\n              } else {\n                this.settingsCopy.staticDhcpEntries.splice(index, 1, entry)\n              }\n            },\n          },\n        })\n      },\n\n      /**\n       * Removes an existing static dhcp entry\n       * @param {Number} index - the index of entry being removed\n       */\n      onDeleteReservation(index) {\n        this.settingsCopy.staticDhcpEntries.splice(index, 1)\n      },\n\n      /**\n       * Adds a dhcp static entry from a lease\n       * @param {Object} lease - the lease data to be added to static dhcp entries\n       */\n      onAddReservationFromLease(lease) {\n        // prevent adding a lease entry for which macAddress or ip address already exists\n        const entries = this.settingsCopy.staticDhcpEntries\n        if (entries.findIndex(item => item.macAddress === lease.macAddress || item.address === lease.ipAddr) >= 0) {\n          this.$vuntangle.toast.add(this.$vuntangle.$t('dhcp_lease_reservation_conflict'))\n          return\n        }\n\n        this.settingsCopy.staticDhcpEntries.push({\n          address: lease.ipAddr,\n          macAddress: lease.macAddress,\n          description: lease.hostName,\n        })\n      },\n    },\n  }\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}