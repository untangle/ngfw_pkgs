{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport default {\n  data: function data() {\n    return {\n      settings: undefined\n    };\n  },\n  computed: {\n    networkSettings: function networkSettings(_ref) {\n      var $store = _ref.$store;\n      return $store.getters['settings/networkSettings'];\n    }\n  },\n  watch: {\n    networkSettings: {\n      handler: function handler(settings) {\n        if (settings) this.settings = settings;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    onSaveSettings: function onSaveSettings() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$store.dispatch('settings/saveNetworkSettings', _this.settings);\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["data","settings","undefined","computed","networkSettings","_ref","$store","getters","watch","handler","immediate","methods","onSaveSettings","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","dispatch","stop"],"sources":["src/ngfw/NgfwSettings.vue"],"sourcesContent":["<template>\n  <v-container>\n    <ValidationObserver>\n      <!-- `hostName`, `domain` and `timeZone` settings -->\n      <u-section :title=\"$vuntangle.$t('settings')\">\n        <v-row>\n          <v-col cols=\"12\" lg=\"3\">\n            <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n              <u-text-field v-model=\"settings.hostName\" :label=\"$t('host_name')\" :error-messages=\"errors\">\n                <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n              </u-text-field>\n            </ValidationProvider>\n          </v-col>\n          <v-col cols=\"12\" lg=\"3\">\n            <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n              <u-text-field v-model=\"settings.domainName\" :label=\"$t('domain_name')\" :error-messages=\"errors\">\n                <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n              </u-text-field>\n            </ValidationProvider>\n          </v-col>\n        </v-row>\n      </u-section>\n\n      <!-- `httpPort` and `httpsPort` settings -->\n      <u-section :title=\"$vuntangle.$t('web_admin_ports')\">\n        <v-row>\n          <v-col cols=\"12\" lg=\"3\">\n            <ValidationProvider v-slot=\"{ errors }\" rules=\"required|port\">\n              <u-text-field v-model=\"settings.httpPort\" type=\"number\" :label=\"$t('http_port')\" :error-messages=\"errors\">\n                <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n              </u-text-field>\n            </ValidationProvider>\n          </v-col>\n          <v-col cols=\"12\" lg=\"3\">\n            <ValidationProvider v-slot=\"{ errors }\" rules=\"required|port\">\n              <u-text-field\n                v-model=\"settings.httpsPort\"\n                type=\"number\"\n                :label=\"$t('https_port')\"\n                :error-messages=\"errors\"\n              >\n                <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n              </u-text-field>\n            </ValidationProvider>\n          </v-col>\n        </v-row>\n      </u-section>\n    </ValidationObserver>\n    <u-btn class=\"mt-4\" @click=\"onSaveSettings\">{{ $t('save') }}</u-btn>\n  </v-container>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        settings: undefined,\n      }\n    },\n\n    computed: {\n      networkSettings: ({ $store }) => $store.getters['settings/networkSettings'],\n    },\n\n    watch: {\n      networkSettings: {\n        handler(settings) {\n          if (settings) this.settings = settings\n        },\n        immediate: true,\n      },\n    },\n\n    methods: {\n      async onSaveSettings() {\n        await this.$store.dispatch('settings/saveNetworkSettings', this.settings)\n      },\n    },\n  }\n</script>\n"],"mappings":";;AAoDA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA,EAAAC;IACA;EACA;EAEAC,QAAA;IACAC,eAAA,WAAAA,gBAAAC,IAAA;MAAA,IAAAC,MAAA,GAAAD,IAAA,CAAAC,MAAA;MAAA,OAAAA,MAAA,CAAAC,OAAA;IAAA;EACA;EAEAC,KAAA;IACAJ,eAAA;MACAK,OAAA,WAAAA,QAAAR,QAAA;QACA,IAAAA,QAAA,OAAAA,QAAA,GAAAA,QAAA;MACA;MACAS,SAAA;IACA;EACA;EAEAC,OAAA;IACAC,cAAA,WAAAA,eAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAT,KAAA,CAAAP,MAAA,CAAAiB,QAAA,iCAAAV,KAAA,CAAAZ,QAAA;YAAA;YAAA;cAAA,OAAAmB,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAP,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}