{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport cloneDeep from 'lodash/cloneDeep';\nimport IpsecNetworkDialog from './IpsecNetworkDialog.vue';\nexport default {\n  props: {\n    ipsec: {\n      type: Object,\n      \"default\": function _default() {\n        return null;\n      }\n    },\n    item: {\n      type: Object,\n      \"default\": function _default() {\n        return null;\n      }\n    },\n    index: {\n      type: Number,\n      \"default\": null\n    },\n    fullTunnel: {\n      type: Boolean,\n      \"default\": false\n    },\n    type: {\n      type: String,\n      \"default\": null\n    }\n  },\n  computed: {\n    isFullTunnelItem: function isFullTunnelItem() {\n      return this.item.network === '0.0.0.0' && this.item.prefix === 0;\n    },\n    networkWithPrefix: function networkWithPrefix() {\n      return \"\".concat(this.item.network, \"/\").concat(this.item.prefix);\n    }\n  },\n  methods: {\n    /**\n     * Shows an editing dialog for network\n     * @param {Number} index - the index of the network being edited (-1 means new)\n     */\n    onEdit: function onEdit(index) {\n      this.$vuntangle.dialog.show({\n        title: index === -1 ? this.$t(\"add_\".concat(this.type, \"_network\")) : this.$t(\"edit_\".concat(this.type, \"_network\")),\n        component: IpsecNetworkDialog,\n        width: 600,\n        actionLabel: index === -1 ? this.$t('add') : this.$t('update'),\n        componentProps: {\n          type: this.type,\n          // type: 'local' or 'remote'\n          ipsec: this.ipsec,\n          index: index\n        }\n      });\n    },\n    /**\n     * Removes a network from list\n     * @param {Number} index - the index of the network to be removed\n     */\n    onDelete: function onDelete(index) {\n      var networksClone = cloneDeep(this.ipsec[this.type].networks);\n      networksClone.splice(index, 1);\n      this.$set(this.ipsec[this.type], 'networks', networksClone);\n    }\n  }\n};","map":{"version":3,"names":["cloneDeep","IpsecNetworkDialog","props","ipsec","type","Object","default","item","index","Number","fullTunnel","Boolean","String","computed","isFullTunnelItem","network","prefix","networkWithPrefix","concat","methods","onEdit","$vuntangle","dialog","show","title","$t","component","width","actionLabel","componentProps","onDelete","networksClone","networks","splice","$set"],"sources":["node_modules/vuntangle/src/shared/SettingsInterface/components/ipsec/IpsecNetworkItem.vue"],"sourcesContent":["<template>\n  <v-card outlined class=\"pa-1 my-1 d-flex align-center\" :disabled=\"fullTunnel\" style=\"cursor: pointer\" height=\"44\">\n    <span v-if=\"!isFullTunnelItem && fullTunnel\" class=\"py-1 mx-2 font-weight-bold aristaLightGray--text\">\n      {{ networkWithPrefix }}\n    </span>\n    <span v-else class=\"py-1 mx-2 font-weight-bold\"> {{ networkWithPrefix }} </span>\n    <v-spacer />\n    <template v-if=\"!isFullTunnelItem\">\n      <v-btn icon @click=\"onEdit(index)\"> <v-icon> mdi-pencil </v-icon></v-btn>\n      <v-btn icon @click=\"onDelete(index)\"> <v-icon color=\"red\"> mdi-delete </v-icon></v-btn>\n    </template>\n  </v-card>\n</template>\n\n<script>\n  import cloneDeep from 'lodash/cloneDeep'\n  import IpsecNetworkDialog from './IpsecNetworkDialog.vue'\n\n  export default {\n    props: {\n      ipsec: { type: Object, default: () => null },\n      item: { type: Object, default: () => null },\n      index: { type: Number, default: null },\n      fullTunnel: { type: Boolean, default: false },\n      type: { type: String, default: null },\n    },\n\n    computed: {\n      isFullTunnelItem() {\n        return this.item.network === '0.0.0.0' && this.item.prefix === 0\n      },\n      networkWithPrefix() {\n        return `${this.item.network}/${this.item.prefix}`\n      },\n    },\n\n    methods: {\n      /**\n       * Shows an editing dialog for network\n       * @param {Number} index - the index of the network being edited (-1 means new)\n       */\n      onEdit(index) {\n        this.$vuntangle.dialog.show({\n          title: index === -1 ? this.$t(`add_${this.type}_network`) : this.$t(`edit_${this.type}_network`),\n          component: IpsecNetworkDialog,\n          width: 600,\n          actionLabel: index === -1 ? this.$t('add') : this.$t('update'),\n          componentProps: {\n            type: this.type, // type: 'local' or 'remote'\n            ipsec: this.ipsec,\n            index,\n          },\n        })\n      },\n\n      /**\n       * Removes a network from list\n       * @param {Number} index - the index of the network to be removed\n       */\n      onDelete(index) {\n        const networksClone = cloneDeep(this.ipsec[this.type].networks)\n        networksClone.splice(index, 1)\n        this.$set(this.ipsec[this.type], 'networks', networksClone)\n      },\n    },\n  }\n</script>\n"],"mappings":";;;AAeA,OAAAA,SAAA;AACA,OAAAC,kBAAA;AAEA;EACAC,KAAA;IACAC,KAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;IACAC,IAAA;MAAAH,IAAA,EAAAC,MAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;IACAE,KAAA;MAAAJ,IAAA,EAAAK,MAAA;MAAA;IAAA;IACAC,UAAA;MAAAN,IAAA,EAAAO,OAAA;MAAA;IAAA;IACAP,IAAA;MAAAA,IAAA,EAAAQ,MAAA;MAAA;IAAA;EACA;EAEAC,QAAA;IACAC,gBAAA,WAAAA,iBAAA;MACA,YAAAP,IAAA,CAAAQ,OAAA,uBAAAR,IAAA,CAAAS,MAAA;IACA;IACAC,iBAAA,WAAAA,kBAAA;MACA,UAAAC,MAAA,MAAAX,IAAA,CAAAQ,OAAA,OAAAG,MAAA,MAAAX,IAAA,CAAAS,MAAA;IACA;EACA;EAEAG,OAAA;IACA;AACA;AACA;AACA;IACAC,MAAA,WAAAA,OAAAZ,KAAA;MACA,KAAAa,UAAA,CAAAC,MAAA,CAAAC,IAAA;QACAC,KAAA,EAAAhB,KAAA,eAAAiB,EAAA,QAAAP,MAAA,MAAAd,IAAA,sBAAAqB,EAAA,SAAAP,MAAA,MAAAd,IAAA;QACAsB,SAAA,EAAAzB,kBAAA;QACA0B,KAAA;QACAC,WAAA,EAAApB,KAAA,eAAAiB,EAAA,eAAAA,EAAA;QACAI,cAAA;UACAzB,IAAA,OAAAA,IAAA;UAAA;UACAD,KAAA,OAAAA,KAAA;UACAK,KAAA,EAAAA;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;IACAsB,QAAA,WAAAA,SAAAtB,KAAA;MACA,IAAAuB,aAAA,GAAA/B,SAAA,MAAAG,KAAA,MAAAC,IAAA,EAAA4B,QAAA;MACAD,aAAA,CAAAE,MAAA,CAAAzB,KAAA;MACA,KAAA0B,IAAA,MAAA/B,KAAA,MAAAC,IAAA,eAAA2B,aAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}