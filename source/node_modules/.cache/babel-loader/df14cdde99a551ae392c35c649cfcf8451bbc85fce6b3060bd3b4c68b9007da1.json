{"ast":null,"code":"import { VCheckbox } from 'vuetify/lib';\nimport ReportGrid from '../components/ReportGrid.vue';\nimport viewsMixin from './viewsMixin';\nexport default {\n  components: {\n    VCheckbox: VCheckbox,\n    ReportGrid: ReportGrid\n  },\n  mixins: [viewsMixin],\n  data: function data() {\n    return {\n      fetching: true,\n      bypassed: false\n    };\n  },\n  computed: {\n    /**\n     * Adds custom condition based on `bypassed` field\n     * @param {Object} vm\n     * @param {Boolean} vm.bypassed\n     * @returns {Array<QueryCondition>}\n     */\n    queryConditions: function queryConditions(_ref) {\n      var bypassed = _ref.bypassed;\n      // Only add condition if `bypassed` is true\n      if (bypassed === true) {\n        return [{\n          column: 'bypassed',\n          operator: 'EQ',\n          value: true\n        }];\n      }\n      // Return an empty array or other conditions when `bypassed` is false\n      return [];\n    }\n  }\n};","map":{"version":3,"names":["VCheckbox","ReportGrid","viewsMixin","components","mixins","data","fetching","bypassed","computed","queryConditions","_ref","column","operator","value"],"sources":["node_modules/vuntangle/src/shared/Reports/views/AllSessions.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex flex-column flex-grow-1\">\n    <div class=\"d-flex align-center my-2\">\n      <v-checkbox v-model=\"bypassed\" :label=\"$vuntangle.$t('bypassed')\" class=\"pa-0 my-0 mr-4\" hide-details />\n    </div>\n\n    <report-grid :report=\"reports[0]\" :custom-conditions=\"queryConditions\" v-on=\"$listeners\" />\n  </div>\n</template>\n<script>\n  import { VCheckbox } from 'vuetify/lib'\n  import ReportGrid from '../components/ReportGrid.vue'\n  import viewsMixin from './viewsMixin'\n\n  export default {\n    components: { VCheckbox, ReportGrid },\n    mixins: [viewsMixin],\n\n    data() {\n      return {\n        fetching: true,\n        bypassed: false,\n      }\n    },\n\n    computed: {\n      /**\n       * Adds custom condition based on `bypassed` field\n       * @param {Object} vm\n       * @param {Boolean} vm.bypassed\n       * @returns {Array<QueryCondition>}\n       */\n      queryConditions: ({ bypassed }) => {\n        // Only add condition if `bypassed` is true\n        if (bypassed === true) {\n          return [\n            {\n              column: 'bypassed',\n              operator: 'EQ',\n              value: true,\n            },\n          ]\n        }\n        // Return an empty array or other conditions when `bypassed` is false\n        return []\n      },\n    },\n  }\n</script>\n"],"mappings":"AAUA,SAAAA,SAAA;AACA,OAAAC,UAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IAAAH,SAAA,EAAAA,SAAA;IAAAC,UAAA,EAAAA;EAAA;EACAG,MAAA,GAAAF,UAAA;EAEAG,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;IACA;EACA;EAEAC,QAAA;IACA;AACA;AACA;AACA;AACA;AACA;IACAC,eAAA,WAAAA,gBAAAC,IAAA;MAAA,IAAAH,QAAA,GAAAG,IAAA,CAAAH,QAAA;MACA;MACA,IAAAA,QAAA;QACA,QACA;UACAI,MAAA;UACAC,QAAA;UACAC,KAAA;QACA,EACA;MACA;MACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}