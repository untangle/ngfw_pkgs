{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { VMenu, VTextField, VCard, VList, VListItem, VListItemTitle, VListItemSubtitle, VSpacer, VIcon, VDivider } from 'vuetify/lib';\nimport { Category } from '../configs/constants';\nimport { views } from '../configs/viewsConfig';\nimport reports from '../../../plugins/reports';\nimport TimeRange from './TimeRange.vue';\nexport default {\n  components: {\n    VMenu: VMenu,\n    VTextField: VTextField,\n    VCard: VCard,\n    VList: VList,\n    VListItem: VListItem,\n    VListItemTitle: VListItemTitle,\n    VListItemSubtitle: VListItemSubtitle,\n    VSpacer: VSpacer,\n    VIcon: VIcon,\n    VDivider: VDivider,\n    TimeRange: TimeRange\n  },\n  props: {\n    viewId: {\n      type: String,\n      \"default\": undefined\n    }\n  },\n  data: function data() {\n    return {\n      reports: reports,\n      hoverCategory: undefined,\n      menuIcon: 'mdi-menu-down'\n    };\n  },\n  computed: {\n    /**\n     * Returns all the available categories\n     * @returns {Array<String>}\n     */\n    categories: function categories() {\n      return Object.values(Category);\n    },\n    /**\n     * Returns the selected report view\n     * @param {Object} vm\n     * @param {String} vm.viewId - the view id from props\n     * @returns {View}\n     */\n    selectedView: function selectedView(_ref) {\n      var viewId = _ref.viewId;\n      return views[viewId];\n    },\n    /**\n     * Returns the selected category derived from selected view\n     * @param {Object} vm\n     * @param {View} vm.selectedView - the selected view\n     * @returns {String}\n     */\n    selectedCategory: function selectedCategory(_ref2) {\n      var selectedView = _ref2.selectedView;\n      return selectedView === null || selectedView === void 0 ? void 0 : selectedView.category;\n    },\n    /**\n     * Returns all the views within a category\n     * @param {Object} vm\n     * @param {String} vm.hoverCategory - the category name upon mouseover\n     * @returns {Array<View>}\n     */\n    categoryViews: function categoryViews(_ref3) {\n      var hoverCategory = _ref3.hoverCategory;\n      return Object.values(views).filter(function (item) {\n        return item.category === hoverCategory;\n      });\n    },\n    /**\n     * Returns translated text shown as selection in the form:\n     * <Category Name> → <Report View Name>\n     * @param {Object} vm\n     * @param {Object} vm.$i18n - translation engine\n     * @param {String} vm.selectedCategory - the selected category\n     * @param {View} vm.selectedView - the selected view\n     * @returns {String}\n     */\n    selectionText: function selectionText(_ref4) {\n      var $i18n = _ref4.$i18n,\n        selectedCategory = _ref4.selectedCategory,\n        selectedView = _ref4.selectedView;\n      return \"\".concat($i18n.t(selectedCategory), \" \\u2192 \").concat($i18n.t(selectedView.name));\n    }\n  },\n  methods: {\n    /**\n     * When the menu opens/closes\n     * - sets the `hoverCategory` (initial selection)\n     * - sets the menu icon (up/down)\n     * @param {Boolean} event - true on open / false on close\n     * @return {undefined}\n     */\n    onMenuInput: function onMenuInput(event) {\n      this.hoverCategory = event ? this.selectedCategory : undefined;\n      this.menuIcon = event ? 'mdi-menu-up' : 'mdi-menu-down';\n    },\n    /**\n     * Sets the `hoverCategory` when mouse over a category\n     * @param {String} category - the category name (id)\n     * @return {undefined}\n     */\n    onCategoryMouseEnter: function onCategoryMouseEnter(category) {\n      this.hoverCategory = category;\n    }\n  }\n};","map":{"version":3,"names":["VMenu","VTextField","VCard","VList","VListItem","VListItemTitle","VListItemSubtitle","VSpacer","VIcon","VDivider","Category","views","reports","TimeRange","components","props","viewId","type","String","undefined","data","hoverCategory","menuIcon","computed","categories","Object","values","selectedView","_ref","selectedCategory","_ref2","category","categoryViews","_ref3","filter","item","selectionText","_ref4","$i18n","concat","t","name","methods","onMenuInput","event","onCategoryMouseEnter"],"sources":["node_modules/vuntangle/src/shared/Reports/components/ReportsNav.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"d-flex align-center flex-wrap\" style=\"gap: 12px\">\n      <v-menu offset-y flat @input=\"onMenuInput\">\n        <template #activator=\"{ on, attrs }\">\n          <v-text-field\n            v-model=\"selectionText\"\n            outlined\n            dense\n            readonly\n            hide-details\n            v-bind=\"attrs\"\n            :append-icon=\"menuIcon\"\n            v-on=\"on\"\n          />\n        </template>\n        <v-card outlined flat class=\"d-flex\">\n          <div>\n            <v-list dense class=\"py-0\" style=\"min-width: 200px\">\n              <v-list-item\n                v-for=\"category in categories\"\n                :key=\"category\"\n                :class=\"hoverCategory === category ? 'v-list-item--active' : ''\"\n                @click.prevent.stop\n                @mouseenter=\"onCategoryMouseEnter(category)\"\n              >\n                <v-list-item-title class=\"d-flex align-center caption\">\n                  {{ $vuntangle.$t(category) }}\n                  <v-spacer />\n                  <v-icon>mdi-chevron-right</v-icon>\n                </v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </div>\n          <v-divider vertical class=\"mr-2\" />\n\n          <v-list dense class=\"flex-grow-1 py-0\">\n            <v-list-item v-for=\"view in categoryViews\" :key=\"view.id\" @click=\"$emit('view-report', view.id)\">\n              <v-list-item-content>\n                <v-list-item-title>{{ $vuntangle.$t(view.name) }}</v-list-item-title>\n                <v-list-item-subtitle class=\"d-none d-lg-block font-weight-regular caption\" style=\"white-space: unset\">\n                  <span v-for=\"reportId in view.reports\" :key=\"reportId\" class=\"mr-4\">\n                    <v-icon small>{{ reports[reportId].icon }}</v-icon> {{ $vuntangle.$t(reports[reportId].title) }}\n                  </span>\n                </v-list-item-subtitle>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-card>\n      </v-menu>\n      <time-range />\n    </div>\n  </div>\n</template>\n<script>\n  import {\n    VMenu,\n    VTextField,\n    VCard,\n    VList,\n    VListItem,\n    VListItemTitle,\n    VListItemSubtitle,\n    VSpacer,\n    VIcon,\n    VDivider,\n  } from 'vuetify/lib'\n\n  import { Category } from '../configs/constants'\n  import { views } from '../configs/viewsConfig'\n  import reports from '../../../plugins/reports'\n  import TimeRange from './TimeRange.vue'\n\n  export default {\n    components: {\n      VMenu,\n      VTextField,\n      VCard,\n      VList,\n      VListItem,\n      VListItemTitle,\n      VListItemSubtitle,\n      VSpacer,\n      VIcon,\n      VDivider,\n\n      TimeRange,\n    },\n\n    props: {\n      viewId: { type: String, default: undefined },\n    },\n\n    data() {\n      return {\n        reports,\n        hoverCategory: undefined,\n        menuIcon: 'mdi-menu-down',\n      }\n    },\n\n    computed: {\n      /**\n       * Returns all the available categories\n       * @returns {Array<String>}\n       */\n      categories: () => Object.values(Category),\n\n      /**\n       * Returns the selected report view\n       * @param {Object} vm\n       * @param {String} vm.viewId - the view id from props\n       * @returns {View}\n       */\n      selectedView: ({ viewId }) => views[viewId],\n\n      /**\n       * Returns the selected category derived from selected view\n       * @param {Object} vm\n       * @param {View} vm.selectedView - the selected view\n       * @returns {String}\n       */\n      selectedCategory: ({ selectedView }) => selectedView?.category,\n\n      /**\n       * Returns all the views within a category\n       * @param {Object} vm\n       * @param {String} vm.hoverCategory - the category name upon mouseover\n       * @returns {Array<View>}\n       */\n      categoryViews: ({ hoverCategory }) => Object.values(views).filter(item => item.category === hoverCategory),\n\n      /**\n       * Returns translated text shown as selection in the form:\n       * <Category Name> → <Report View Name>\n       * @param {Object} vm\n       * @param {Object} vm.$i18n - translation engine\n       * @param {String} vm.selectedCategory - the selected category\n       * @param {View} vm.selectedView - the selected view\n       * @returns {String}\n       */\n      selectionText: ({ $i18n, selectedCategory, selectedView }) =>\n        `${$i18n.t(selectedCategory)} → ${$i18n.t(selectedView.name)}`,\n    },\n\n    methods: {\n      /**\n       * When the menu opens/closes\n       * - sets the `hoverCategory` (initial selection)\n       * - sets the menu icon (up/down)\n       * @param {Boolean} event - true on open / false on close\n       * @return {undefined}\n       */\n      onMenuInput(event) {\n        this.hoverCategory = event ? this.selectedCategory : undefined\n        this.menuIcon = event ? 'mdi-menu-up' : 'mdi-menu-down'\n      },\n\n      /**\n       * Sets the `hoverCategory` when mouse over a category\n       * @param {String} category - the category name (id)\n       * @return {undefined}\n       */\n      onCategoryMouseEnter(category) {\n        this.hoverCategory = category\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;AAuDA,SACAA,KAAA,EACAC,UAAA,EACAC,KAAA,EACAC,KAAA,EACAC,SAAA,EACAC,cAAA,EACAC,iBAAA,EACAC,OAAA,EACAC,KAAA,EACAC,QAAA,QACA;AAEA,SAAAC,QAAA;AACA,SAAAC,KAAA;AACA,OAAAC,OAAA;AACA,OAAAC,SAAA;AAEA;EACAC,UAAA;IACAd,KAAA,EAAAA,KAAA;IACAC,UAAA,EAAAA,UAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,SAAA,EAAAA,SAAA;IACAC,cAAA,EAAAA,cAAA;IACAC,iBAAA,EAAAA,iBAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,QAAA,EAAAA,QAAA;IAEAI,SAAA,EAAAA;EACA;EAEAE,KAAA;IACAC,MAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA,WAAAC;IAAA;EACA;EAEAC,IAAA,WAAAA,KAAA;IACA;MACAR,OAAA,EAAAA,OAAA;MACAS,aAAA,EAAAF,SAAA;MACAG,QAAA;IACA;EACA;EAEAC,QAAA;IACA;AACA;AACA;AACA;IACAC,UAAA,WAAAA,WAAA;MAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAhB,QAAA;IAAA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAiB,YAAA,WAAAA,aAAAC,IAAA;MAAA,IAAAZ,MAAA,GAAAY,IAAA,CAAAZ,MAAA;MAAA,OAAAL,KAAA,CAAAK,MAAA;IAAA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAa,gBAAA,WAAAA,iBAAAC,KAAA;MAAA,IAAAH,YAAA,GAAAG,KAAA,CAAAH,YAAA;MAAA,OAAAA,YAAA,aAAAA,YAAA,uBAAAA,YAAA,CAAAI,QAAA;IAAA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAC,aAAA,WAAAA,cAAAC,KAAA;MAAA,IAAAZ,aAAA,GAAAY,KAAA,CAAAZ,aAAA;MAAA,OAAAI,MAAA,CAAAC,MAAA,CAAAf,KAAA,EAAAuB,MAAA,WAAAC,IAAA;QAAA,OAAAA,IAAA,CAAAJ,QAAA,KAAAV,aAAA;MAAA;IAAA;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAe,aAAA,WAAAA,cAAAC,KAAA;MAAA,IAAAC,KAAA,GAAAD,KAAA,CAAAC,KAAA;QAAAT,gBAAA,GAAAQ,KAAA,CAAAR,gBAAA;QAAAF,YAAA,GAAAU,KAAA,CAAAV,YAAA;MAAA,UAAAY,MAAA,CACAD,KAAA,CAAAE,CAAA,CAAAX,gBAAA,eAAAU,MAAA,CAAAD,KAAA,CAAAE,CAAA,CAAAb,YAAA,CAAAc,IAAA;IAAA;EACA;EAEAC,OAAA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC,WAAA,WAAAA,YAAAC,KAAA;MACA,KAAAvB,aAAA,GAAAuB,KAAA,QAAAf,gBAAA,GAAAV,SAAA;MACA,KAAAG,QAAA,GAAAsB,KAAA;IACA;IAEA;AACA;AACA;AACA;AACA;IACAC,oBAAA,WAAAA,qBAAAd,QAAA;MACA,KAAAV,aAAA,GAAAU,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}