{"ast":null,"code":"import _objectSpread from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport defaults from '../../defaults';\nimport i18n from '../../../../plugins/vue-i18n';\nimport Ipv4PrefixAutocomplete from '../../../../components/Ipv4PrefixAutocomplete';\nexport default {\n  components: {\n    Ipv4PrefixAutocomplete: Ipv4PrefixAutocomplete\n  },\n  inject: ['$intf', '$status'],\n  props: {\n    ips: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      list: this.$intf().wireguardPeers[0].allowedIps,\n      // model for new v4 alias\n      ip: _objectSpread({}, defaults.wg_ip_config),\n      adding: false // boolean telling to show the add fields\n    };\n  },\n  computed: {\n    listIps: function listIps(_ref) {\n      var list = _ref.list;\n      return list.map(function (ipAddr) {\n        return ipAddr.address;\n      });\n    },\n    ipAddressRules: function ipAddressRules() {\n      return {\n        required: true,\n        ip: true,\n        unique_insensitive: {\n          list: this.listIps,\n          message: i18n.t('geoip_network_duplicate', [this.ip.address])\n        }\n      };\n    }\n  },\n  watch: {\n    adding: function adding(value) {\n      if (!value) {\n        // reset\n        this.ip = _objectSpread({}, defaults.wg_ip_config);\n      }\n    },\n    list: {\n      deep: true,\n      handler: function handler(newList) {\n        this.$emit('update:ips', newList);\n      }\n    },\n    ips: {\n      deep: true,\n      handler: function handler(newIps) {\n        this.list = newIps;\n      }\n    }\n  },\n  methods: {\n    onAddIp: function onAddIp() {\n      this.list.push(this.ip);\n      this.adding = false;\n    },\n    onRemoveIp: function onRemoveIp(index) {\n      this.list.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["defaults","i18n","Ipv4PrefixAutocomplete","components","inject","props","ips","type","Array","default","data","list","$intf","wireguardPeers","allowedIps","ip","_objectSpread","wg_ip_config","adding","computed","listIps","_ref","map","ipAddr","address","ipAddressRules","required","unique_insensitive","message","t","watch","value","deep","handler","newList","$emit","newIps","methods","onAddIp","push","onRemoveIp","index","splice"],"sources":["node_modules/vuntangle/src/shared/SettingsInterface/components/wireguard/WireguardAllowedIps.vue"],"sourcesContent":["<template>\n  <div>\n    <p class=\"font-weight-bold mt-6 mb-2\">{{ $t('allowed_ips') }}</p>\n\n    <v-chip v-for=\"(item, idx) in ips\" :key=\"idx\" close small class=\"mr-2 mb-2\" @click:close=\"onRemoveIp(idx)\">\n      {{ item.address }}{{ item.prefix || item.prefix === 0 ? `/${item.prefix}` : '' }}\n    </v-chip>\n\n    <v-chip v-if=\"!adding\" small color=\"primary\" class=\"mr-2 mb-2\" @click=\"adding = true\">\n      {{ $t('add_ip') }}\n    </v-chip>\n\n    <ValidationObserver v-slot=\"{ passes }\" tag=\"div\">\n      <v-row v-if=\"adding\" no-gutters align=\"center\" class=\"mt-2\">\n        <v-col class=\"grow\">\n          <!-- address -->\n          <ValidationProvider v-slot=\"{ errors }\" :rules=\"ipAddressRules\">\n            <u-text-field v-model=\"ip.address\" :label=\"$t('address')\" class=\"mr-2\" :error-messages=\"errors\">\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n            </u-text-field>\n          </ValidationProvider>\n        </v-col>\n        <v-col class=\"grow\">\n          <!-- prefix -->\n          <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n            <ipv-4-prefix-autocomplete v-model=\"ip.prefix\" :errors=\"errors\" />\n          </ValidationProvider>\n        </v-col>\n        <v-col class=\"shrink\">\n          <u-btn icon :small=\"false\" :min-width=\"null\" class=\"primary mx-4\" @click=\"passes(onAddIp)\">\n            <v-icon color=\"white\">mdi-check</v-icon>\n          </u-btn>\n        </v-col>\n        <v-col class=\"shrink\">\n          <u-btn icon :small=\"false\" :min-width=\"null\" @click=\"adding = false\"><v-icon>mdi-close</v-icon></u-btn>\n        </v-col>\n      </v-row>\n    </ValidationObserver>\n  </div>\n</template>\n<script>\n  import defaults from '../../defaults'\n  import i18n from '../../../../plugins/vue-i18n'\n  import Ipv4PrefixAutocomplete from '../../../../components/Ipv4PrefixAutocomplete'\n\n  export default {\n    components: {\n      Ipv4PrefixAutocomplete,\n    },\n    inject: ['$intf', '$status'],\n    props: {\n      ips: { type: Array, default: () => [] },\n    },\n    data() {\n      return {\n        list: this.$intf().wireguardPeers[0].allowedIps,\n        // model for new v4 alias\n        ip: { ...defaults.wg_ip_config },\n        adding: false, // boolean telling to show the add fields\n      }\n    },\n    computed: {\n      listIps: ({ list }) => list.map(ipAddr => ipAddr.address),\n      ipAddressRules() {\n        return {\n          required: true,\n          ip: true,\n          unique_insensitive: {\n            list: this.listIps,\n            message: i18n.t('geoip_network_duplicate', [this.ip.address]),\n          },\n        }\n      },\n    },\n    watch: {\n      adding(value) {\n        if (!value) {\n          // reset\n          this.ip = { ...defaults.wg_ip_config }\n        }\n      },\n      list: {\n        deep: true,\n        handler(newList) {\n          this.$emit('update:ips', newList)\n        },\n      },\n      ips: {\n        deep: true,\n        handler(newIps) {\n          this.list = newIps\n        },\n      },\n    },\n    methods: {\n      onAddIp() {\n        this.list.push(this.ip)\n        this.adding = false\n      },\n\n      onRemoveIp(index) {\n        this.list.splice(index, 1)\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;AAyCA,OAAAA,QAAA;AACA,OAAAC,IAAA;AACA,OAAAC,sBAAA;AAEA;EACAC,UAAA;IACAD,sBAAA,EAAAA;EACA;EACAE,MAAA;EACAC,KAAA;IACAC,GAAA;MAAAC,IAAA,EAAAC,KAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA,OAAAC,KAAA,GAAAC,cAAA,IAAAC,UAAA;MACA;MACAC,EAAA,EAAAC,aAAA,KAAAhB,QAAA,CAAAiB,YAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,WAAAA,QAAAC,IAAA;MAAA,IAAAV,IAAA,GAAAU,IAAA,CAAAV,IAAA;MAAA,OAAAA,IAAA,CAAAW,GAAA,WAAAC,MAAA;QAAA,OAAAA,MAAA,CAAAC,OAAA;MAAA;IAAA;IACAC,cAAA,WAAAA,eAAA;MACA;QACAC,QAAA;QACAX,EAAA;QACAY,kBAAA;UACAhB,IAAA,OAAAS,OAAA;UACAQ,OAAA,EAAA3B,IAAA,CAAA4B,CAAA,kCAAAd,EAAA,CAAAS,OAAA;QACA;MACA;IACA;EACA;EACAM,KAAA;IACAZ,MAAA,WAAAA,OAAAa,KAAA;MACA,KAAAA,KAAA;QACA;QACA,KAAAhB,EAAA,GAAAC,aAAA,KAAAhB,QAAA,CAAAiB,YAAA;MACA;IACA;IACAN,IAAA;MACAqB,IAAA;MACAC,OAAA,WAAAA,QAAAC,OAAA;QACA,KAAAC,KAAA,eAAAD,OAAA;MACA;IACA;IACA5B,GAAA;MACA0B,IAAA;MACAC,OAAA,WAAAA,QAAAG,MAAA;QACA,KAAAzB,IAAA,GAAAyB,MAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,OAAA,WAAAA,QAAA;MACA,KAAA3B,IAAA,CAAA4B,IAAA,MAAAxB,EAAA;MACA,KAAAG,MAAA;IACA;IAEAsB,UAAA,WAAAA,WAAAC,KAAA;MACA,KAAA9B,IAAA,CAAA+B,MAAA,CAAAD,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}