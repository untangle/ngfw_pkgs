{"ast":null,"code":"import { VSwitch, VRow, VCol, VCard } from 'vuetify/lib';\nimport Ipv4Aliases from '../ipv4/Ipv4Aliases.vue';\nimport VrrpTracking from './VrrpTracking.vue';\nexport default {\n  components: {\n    VSwitch: VSwitch,\n    VRow: VRow,\n    VCol: VCol,\n    VCard: VCard,\n    Ipv4Aliases: Ipv4Aliases,\n    VrrpTracking: VrrpTracking\n  },\n  inject: ['$intf', '$features'],\n  computed: {\n    intf: function intf(_ref) {\n      var $intf = _ref.$intf;\n      return $intf();\n    },\n    features: function features(_ref2) {\n      var $features = _ref2.$features;\n      return $features();\n    }\n  }\n};","map":{"version":3,"names":["VSwitch","VRow","VCol","VCard","Ipv4Aliases","VrrpTracking","components","inject","computed","intf","_ref","$intf","features","_ref2","$features"],"sources":["node_modules/vuntangle/src/shared/SettingsInterface/components/vrrp/Vrrp.vue"],"sourcesContent":["<!--\n  Component shown as a tab for non VPN interfaces,\n  used to edit VRRP interface settings as below:\n  - vrrpEnabled\n  - vrrpId\n  - vrrpPriority\n  - vrrpV4Aliases\n-->\n<template>\n  <div>\n    <!-- vrrpEnabled -->\n    <v-switch v-model=\"intf.vrrpEnabled\" :label=\"$t('vrrp_enabled')\" class=\"ma-0\" />\n\n    <v-row>\n      <v-col cols=\"4\">\n        <!-- vrrpId -->\n        <ValidationProvider\n          v-slot=\"{ errors }\"\n          :rules=\"intf.vrrpEnabled ? `required|numeric|integer|min_value:1|max_value:255` : ''\"\n        >\n          <u-text-field\n            v-model.number=\"intf.vrrpId\"\n            type=\"number\"\n            :disabled=\"!intf.vrrpEnabled\"\n            :label=\"$t('vrrp_id')\"\n            :error-messages=\"errors\"\n            :hide-details=\"false\"\n            :hint=\"$t('vrrp_id_hint')\"\n            persistent-hint\n          >\n            <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n          </u-text-field>\n        </ValidationProvider>\n      </v-col>\n\n      <v-col cols=\"4\">\n        <!-- vrrpPriority -->\n        <ValidationProvider\n          v-slot=\"{ errors }\"\n          :rules=\"intf.vrrpEnabled ? `required|numeric|integer|min_value:1|max_value:254` : ''\"\n        >\n          <u-text-field\n            v-model.number=\"intf.vrrpPriority\"\n            type=\"number\"\n            :disabled=\"!intf.vrrpEnabled\"\n            :label=\"$t('vrrp_priority')\"\n            :error-messages=\"errors\"\n            :hide-details=\"false\"\n            :hint=\"$t('vrrp_priority_hint')\"\n            persistent-hint\n          >\n            <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n          </u-text-field>\n        </ValidationProvider>\n      </v-col>\n    </v-row>\n\n    <!-- vrrptrack -->\n    <v-card v-if=\"features.interfaceTracking\" flat :disabled=\"!intf.vrrpEnabled\" color=\"transparent\">\n      <vrrp-tracking alias-key=\"vrrptrack\" />\n    </v-card>\n\n    <!-- vrrpV4Aliases -->\n    <v-card flat :disabled=\"!intf.vrrpEnabled\" color=\"transparent\">\n      <ipv-4-aliases alias-key=\"vrrpV4Aliases\" />\n    </v-card>\n  </div>\n</template>\n<script>\n  import { VSwitch, VRow, VCol, VCard } from 'vuetify/lib'\n  import Ipv4Aliases from '../ipv4/Ipv4Aliases.vue'\n  import VrrpTracking from './VrrpTracking.vue'\n\n  export default {\n    components: {\n      VSwitch,\n      VRow,\n      VCol,\n      VCard,\n      Ipv4Aliases,\n      VrrpTracking,\n    },\n    inject: ['$intf', '$features'],\n\n    computed: {\n      intf: ({ $intf }) => $intf(),\n      features: ({ $features }) => $features(),\n    },\n  }\n</script>\n"],"mappings":"AAqEA,SAAAA,OAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,KAAA;AACA,OAAAC,WAAA;AACA,OAAAC,YAAA;AAEA;EACAC,UAAA;IACAN,OAAA,EAAAA,OAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,WAAA,EAAAA,WAAA;IACAC,YAAA,EAAAA;EACA;EACAE,MAAA;EAEAC,QAAA;IACAC,IAAA,WAAAA,KAAAC,IAAA;MAAA,IAAAC,KAAA,GAAAD,IAAA,CAAAC,KAAA;MAAA,OAAAA,KAAA;IAAA;IACAC,QAAA,WAAAA,SAAAC,KAAA;MAAA,IAAAC,SAAA,GAAAD,KAAA,CAAAC,SAAA;MAAA,OAAAA,SAAA;IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}