{"ast":null,"code":"import _readOnlyError from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/readOnlyError.js\";\nimport _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport vuntangle from '@/plugins/vuntangle';\nvar getDefaultState = function getDefaultState() {\n  return {\n    setupWizardData: null,\n    // Holds the wizard data (could be steps, configurations, etc.)\n    currentStep: 1 // Keeps track of the current step\n  };\n};\nvar getters = {\n  setupWizardData: function setupWizardData(state) {\n    return state.setupWizardData;\n  },\n  currentStep: function currentStep(state) {\n    return state.currentStep;\n  },\n  currentStepData: function currentStepData(state) {\n    return function (stepNumber) {\n      // Assuming you have a specific data structure for each step\n      return state.setupWizardData ? state.setupWizardData[stepNumber] : null;\n    };\n  }\n};\nvar mutations = {\n  RESET: function RESET(state) {\n    return Object.assign(state, getDefaultState());\n  },\n  SET_SETUP_WIZARD_DATA: function SET_SETUP_WIZARD_DATA(state, value) {\n    state.setupWizardData = value;\n  },\n  SET_CURRENT_STEP: function SET_CURRENT_STEP(state, stepNumber) {\n    state.currentStep = stepNumber;\n  },\n  UPDATE_STEP_DATA: function UPDATE_STEP_DATA(state, _ref) {\n    var stepNumber = _ref.stepNumber,\n      data = _ref.data;\n    if (state.setupWizardData && state.setupWizardData[stepNumber]) {\n      state.setupWizardData[stepNumber] = data;\n    }\n  }\n};\nvar actions = {\n  fetchSetupWizardData: function fetchSetupWizardData(_ref2) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, state, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref2.commit, state = _ref2.state;\n            if (!(state.setupWizardData !== null)) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 3:\n            commit('SET_FETCHING', true, {\n              root: true\n            });\n            _context.next = 6;\n            return window.rpc.setupWizard.getWizardData();\n          case 6:\n            data = _context.sent;\n            // Replace with your API call\n            commit('SET_FETCHING', false, {\n              root: true\n            });\n            if (data) {\n              commit('SET_SETUP_WIZARD_DATA', data);\n            }\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  saveSetupWizardData: function saveSetupWizardData(_ref3, _ref4) {\n    var commit = _ref3.commit;\n    var stepNumber = _ref4.stepNumber,\n      data = _ref4.data;\n    return new Promise(function (resolve, reject) {\n      commit('SET_FETCHING', true, {\n        root: true\n      });\n      window.rpc.setupWizard.saveWizardData(function (response, exception) {\n        commit('SET_FETCHING', false, {\n          root: true\n        });\n        if (exception) {\n          vuntangle.toast.add(exception.message, 'error');\n          reject(exception);\n          return;\n        }\n        commit('UPDATE_STEP_DATA', {\n          stepNumber: stepNumber,\n          data: data\n        }); // Updates the data for the current step\n        vuntangle.toast.add(vuntangle.$t('saved_successfully', ['Wizard Data']));\n        resolve();\n      }, {\n        stepNumber: stepNumber,\n        data: data\n      }); // Send step-specific data\n    });\n  },\n  // Optional action to go to the next step\n  nextStep: function nextStep(_ref5) {\n    var commit = _ref5.commit,\n      state = _ref5.state;\n    var nextStep = state.currentStep + 1;\n    commit('SET_CURRENT_STEP', nextStep);\n  },\n  // Optional action to go to the previous step\n  previousStep: function previousStep(_ref6) {\n    var commit = _ref6.commit,\n      state = _ref6.state;\n    var prevStep = state.currentStep - 1;\n    commit('SET_CURRENT_STEP', prevStep);\n  },\n  // Optionally reset the wizard\n  resetSetupWizard: function resetSetupWizard(_ref7) {\n    var commit = _ref7.commit;\n    commit('RESET');\n  }\n};\nexport default {\n  namespaced: true,\n  state: getDefaultState,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"names":["vuntangle","getDefaultState","setupWizardData","currentStep","getters","state","currentStepData","stepNumber","mutations","RESET","Object","assign","SET_SETUP_WIZARD_DATA","value","SET_CURRENT_STEP","UPDATE_STEP_DATA","_ref","data","actions","fetchSetupWizardData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","wrap","_callee$","_context","prev","next","abrupt","root","window","rpc","setupWizard","getWizardData","sent","stop","saveSetupWizardData","_ref3","_ref4","Promise","resolve","reject","saveWizardData","response","exception","toast","add","message","$t","nextStep","_ref5","previousStep","_ref6","prevStep","resetSetupWizard","_ref7","namespaced"],"sources":["/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/src/store/setup.js"],"sourcesContent":["import vuntangle from '@/plugins/vuntangle'\n\nconst getDefaultState = () => ({\n  setupWizardData: null, // Holds the wizard data (could be steps, configurations, etc.)\n  currentStep: 1, // Keeps track of the current step\n})\n\nconst getters = {\n  setupWizardData: state => state.setupWizardData,\n  currentStep: state => state.currentStep,\n  currentStepData: state => stepNumber => {\n    // Assuming you have a specific data structure for each step\n    return state.setupWizardData ? state.setupWizardData[stepNumber] : null\n  },\n}\n\nconst mutations = {\n  RESET: state => Object.assign(state, getDefaultState()),\n\n  SET_SETUP_WIZARD_DATA: (state, value) => {\n    state.setupWizardData = value\n  },\n\n  SET_CURRENT_STEP: (state, stepNumber) => {\n    state.currentStep = stepNumber\n  },\n\n  UPDATE_STEP_DATA: (state, { stepNumber, data }) => {\n    if (state.setupWizardData && state.setupWizardData[stepNumber]) {\n      state.setupWizardData[stepNumber] = data\n    }\n  },\n}\n\nconst actions = {\n  async fetchSetupWizardData({ commit, state }) {\n    if (state.setupWizardData !== null) return\n    commit('SET_FETCHING', true, { root: true })\n    const data = await window.rpc.setupWizard.getWizardData() // Replace with your API call\n    commit('SET_FETCHING', false, { root: true })\n    if (data) {\n      commit('SET_SETUP_WIZARD_DATA', data)\n    }\n  },\n\n  saveSetupWizardData({ commit }, { stepNumber, data }) {\n    return new Promise((resolve, reject) => {\n      commit('SET_FETCHING', true, { root: true })\n      window.rpc.setupWizard.saveWizardData(\n        (response, exception) => {\n          commit('SET_FETCHING', false, { root: true })\n          if (exception) {\n            vuntangle.toast.add(exception.message, 'error')\n            reject(exception)\n            return\n          }\n          commit('UPDATE_STEP_DATA', { stepNumber, data }) // Updates the data for the current step\n          vuntangle.toast.add(vuntangle.$t('saved_successfully', ['Wizard Data']))\n          resolve()\n        },\n        { stepNumber, data },\n      ) // Send step-specific data\n    })\n  },\n\n  // Optional action to go to the next step\n  nextStep({ commit, state }) {\n    const nextStep = state.currentStep + 1\n    commit('SET_CURRENT_STEP', nextStep)\n  },\n\n  // Optional action to go to the previous step\n  previousStep({ commit, state }) {\n    const prevStep = state.currentStep - 1\n    commit('SET_CURRENT_STEP', prevStep)\n  },\n\n  // Optionally reset the wizard\n  resetSetupWizard({ commit }) {\n    commit('RESET')\n  },\n}\n\nexport default {\n  namespaced: true,\n  state: getDefaultState,\n  getters,\n  mutations,\n  actions,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}