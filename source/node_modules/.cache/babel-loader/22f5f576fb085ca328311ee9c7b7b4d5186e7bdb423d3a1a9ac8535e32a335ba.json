{"ast":null,"code":"import _defineProperty from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/**\n * All columns settings and methods\n * to build `column-defs` as expected by the grid\n * based on database fields, custom renderers and box settings\n */\nimport util from './util';\nimport dates from './dates';\nimport i18n from './vue-i18n';\nimport renderer from './renderer';\n\n// all existing columns\nvar columns = {\n  /**\n   * SESSIONS TABLE COLUMN FIELDS AS IN DB\n   */\n  // APPLICATION\n  application_blocked: {},\n  application_category: {},\n  application_category_inferred: {},\n  application_confidence: {},\n  application_confidence_inferred: {},\n  application_control_blocked: {},\n  application_control_bypassed: {},\n  application_control_flagged: {},\n  application_control_rejected: {},\n  application_detail: {},\n  // not used\n  application_flagged: {},\n  // not_used\n  application_id: {},\n  // not used\n  application_id_inferred: {},\n  // not used\n  application_name: {\n    valueGetter: function valueGetter(_ref) {\n      var data = _ref.data;\n      return data.application_name !== undefined && data.application_name !== null ? data.application_name : i18n.t('unknown');\n    }\n  },\n  application_name_inferred: {\n    valueGetter: function valueGetter(_ref2) {\n      var data = _ref2.data;\n      return data.application_name_inferred !== undefined && data.application_name_inferred !== null ? data.application_name_inferred : i18n.t('unknown');\n    }\n  },\n  application_productivity: {\n    valueGetter: function valueGetter(_ref3) {\n      var data = _ref3.data;\n      return renderer.applicationProductivityLevel(data.application_productivity);\n    }\n  },\n  application_productivity_inferred: {\n    valueGetter: function valueGetter(_ref4) {\n      var data = _ref4.data;\n      return renderer.applicationProductivityLevel(data.application_productivity_inferred);\n    }\n  },\n  application_protochain: {},\n  // not used\n  application_protochain_inferred: {},\n  // not_used\n  application_risk: {\n    valueGetter: function valueGetter(_ref5) {\n      var data = _ref5.data;\n      return renderer.applicationRiskLevel(data.application_risk);\n    }\n  },\n  application_risk_inferred: {\n    valueGetter: function valueGetter(_ref6) {\n      var data = _ref6.data;\n      return renderer.applicationRiskLevel(data.application_risk_inferred);\n    }\n  },\n  // BYPASS\n  bypassed: {},\n  // CAPTIVE PORTAL\n  captive_portal_client_ip: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    }\n  },\n  captive_portal_event_name: {},\n  // CERTS\n  certificate_subject_cn: {},\n  certificate_subject_o: {},\n  // CLIENT\n  client_address: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    },\n    valueGetter: function valueGetter(_ref7) {\n      var data = _ref7.data;\n      return data.client_address || i18n.t('unknown');\n    }\n  },\n  client_address_new: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    },\n    valueGetter: function valueGetter(_ref8) {\n      var data = _ref8.data;\n      return data.client_address_new || i18n.t('unknown');\n    }\n  },\n  client_country: {\n    valueGetter: function valueGetter(_ref9) {\n      var data = _ref9.data;\n      return renderer.country(data.client_country);\n    }\n  },\n  client_dns_hint: {},\n  client_hops: {},\n  client_interface_id: {\n    valueGetter: undefined // this is going to be set upon building the columns\n  },\n  client_interface_type: {\n    valueGetter: function valueGetter(_ref10) {\n      var data = _ref10.data;\n      return renderer.interfaceType(data.client_interface_type);\n    }\n  },\n  client_latitude: {},\n  client_longitude: {},\n  client_port: {\n    valueGetter: function valueGetter(_ref11) {\n      var data = _ref11.data;\n      return data.client_port !== undefined && data.client_port !== null ? data.client_port : i18n.t('unknown');\n    }\n  },\n  client_port_new: {\n    valueGetter: function valueGetter(_ref12) {\n      var data = _ref12.data;\n      return data.client_port_new !== undefined && data.client_port_new !== null ? data.client_port_new : i18n.t('unknown');\n    }\n  },\n  device_uid: {},\n  // not used\n  end_time: {},\n  family: {\n    valueGetter: function valueGetter(_ref13) {\n      var data = _ref13.data;\n      return renderer.familyRenderer(data.family);\n    }\n  },\n  // GEOIP\n  geo_ip_blocked_client: {\n    valueGetter: function valueGetter(_ref14) {\n      var data = _ref14.data;\n      return renderer[\"boolean\"](data.geo_ip_blocked_client);\n    }\n  },\n  geo_ip_blocked_server: {\n    valueGetter: function valueGetter(_ref15) {\n      var data = _ref15.data;\n      return renderer[\"boolean\"](data.geo_ip_blocked_server);\n    }\n  },\n  hostname: {},\n  ip_protocol: {\n    valueGetter: function valueGetter(_ref16) {\n      var data = _ref16.data;\n      return renderer.ipProtocol(data.ip_protocol);\n    }\n  },\n  local_address: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    }\n  },\n  policy__id: {},\n  // not used and `__` is not a typo\n  policy_flow_id: {},\n  // not used\n\n  // Policy Manager Events\n  action: {\n    valueGetter: function valueGetter(_ref17) {\n      var data = _ref17.data;\n      return i18n.t(data.action.toLowerCase()) || i18n.t('unknown');\n    }\n  },\n  evaluation: {\n    valueGetter: function valueGetter() {\n      return renderer[\"boolean\"](true);\n    }\n  },\n  policy_id: {},\n  rule_id: {},\n  config_set_id: {},\n  remote_address: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    }\n  },\n  // SERVER\n  server_address: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    },\n    valueGetter: function valueGetter(_ref18) {\n      var data = _ref18.data;\n      return data.server_address || i18n.t('unknown');\n    }\n  },\n  server_address_new: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    },\n    valueGetter: function valueGetter(_ref19) {\n      var data = _ref19.data;\n      return data.server_address_new || i18n.t('unknown');\n    }\n  },\n  server_country: {\n    valueGetter: function valueGetter(_ref20) {\n      var data = _ref20.data;\n      return renderer.country(data.server_country);\n    }\n  },\n  server_dns_hint: {},\n  server_hops: {},\n  server_interface_id: {\n    valueGetter: undefined // this is going to be set upon building the columns\n  },\n  server_interface_type: {\n    valueGetter: function valueGetter(_ref21) {\n      var data = _ref21.data;\n      return renderer.interfaceType(data.server_interface_type);\n    }\n  },\n  server_latitude: {},\n  server_longitude: {},\n  server_port: {\n    valueGetter: function valueGetter(_ref22) {\n      var data = _ref22.data;\n      return data.server_port !== undefined && data.server_port !== null ? data.server_port : i18n.t('unknown');\n    }\n  },\n  server_port_new: {\n    valueGetter: function valueGetter(_ref23) {\n      var data = _ref23.data;\n      return data.server_port_new !== undefined && data.server_port_new !== null ? data.server_port_new : i18n.t('unknown');\n    }\n  },\n  session_id: {},\n  ssl_sni: {},\n  // THREAT PREVENTION\n  threat_prevention_blocked_address: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    }\n  },\n  threat_prevention_threat_level: {\n    valueGetter: function valueGetter(_ref24) {\n      var data = _ref24.data;\n      return renderer.incomingThreatLevel(data.threat_prevention_threat_level);\n    }\n  },\n  dynamic_lists_blocked_address: {\n    comparator: function comparator(a, b) {\n      return util.compareIpAny(a, b);\n    }\n  },\n  time_stamp: {\n    comparator: function comparator(a, b) {\n      return dates.compareDates(a, b);\n    },\n    sort: 'desc'\n    // minWidth: 200,\n  },\n  username: {},\n  uuid: {},\n  // not used\n\n  // WAN POLICY\n  wan_policy_id: {},\n  wan_rule_chain: {},\n  // not used\n  wan_rule_id: {},\n  // WEB FILTER\n  web_filter_blocked: {},\n  web_filter_catid: {\n    valueGetter: function valueGetter(_ref25) {\n      var data = _ref25.data;\n      return renderer.webfilterCategory(data.web_filter_catid);\n    }\n  },\n  web_filter_flagged: {},\n  web_filter_hostname: {},\n  web_filter_reason: {\n    valueFormatter: function valueFormatter(params) {\n      return renderer.webfilterReason(params.value);\n    }\n  },\n  /** END SESSIONS TABLE COLUMN FILEDS */\n\n  /**\n   * DOS_EVENTS TABLE COLUMN FILEDS AS IN DB\n   */\n  from_host: {\n    valueGetter: function valueGetter(_ref26) {\n      var data = _ref26.data;\n      return data.from_host;\n    }\n  },\n  to_host: {\n    valueGetter: function valueGetter(_ref27) {\n      var data = _ref27.data;\n      return data.to_host;\n    }\n  },\n  dos_rule_id: {\n    valueGetter: function valueGetter(_ref28) {\n      var data = _ref28.data;\n      return data.rule_id;\n    }\n  },\n  dos_ip_protocol: {\n    valueGetter: function valueGetter(_ref29) {\n      var data = _ref29.data;\n      return renderer.dosIPProtocol(data.ip_protocol);\n    }\n  },\n  /** DOS_EVENTS TABLE COLUMN FILEDS END   */\n\n  /**\n   * SESSION_STATS TABLE COLUMN FILEDS AS IN DB\n   */\n  byte_rate: {\n    type: 'numericColumn',\n    cellRenderer: function cellRenderer(params) {\n      return renderer.bytesSecRenderer(params.value);\n    }\n  },\n  bytes: {\n    type: 'numericColumn',\n    cellRenderer: function cellRenderer(params) {\n      return renderer.bytesRenderer(params.value);\n    }\n  },\n  client_byte_rate: {\n    type: 'numericColumn',\n    cellRenderer: function cellRenderer(params) {\n      return renderer.bytesSecRenderer(params.value);\n    }\n  },\n  client_bytes: {\n    type: 'numericColumn',\n    cellRenderer: function cellRenderer(params) {\n      return renderer.bytesRenderer(params.value);\n    }\n  },\n  client_packet_rate: {\n    type: 'numericColumn'\n  },\n  client_packets: {},\n  // `device_uid` already in sessions table\n  packet_rate: {\n    type: 'numericColumn',\n    cellRenderer: function cellRenderer(params) {\n      return renderer.bytesSecRenderer(params.value);\n    }\n  },\n  packets: {\n    type: 'numericColumn'\n  },\n  server_byte_rate: {\n    type: 'numericColumn',\n    cellRenderer: function cellRenderer(params) {\n      return renderer.bytesSecRenderer(params.value);\n    }\n  },\n  server_bytes: {\n    type: 'numericColumn',\n    cellRenderer: function cellRenderer(params) {\n      return renderer.bytesRenderer(params.value);\n    }\n  },\n  server_packet_rate: {\n    type: 'numericColumn',\n    cellRenderer: function cellRenderer(params) {\n      return renderer.bytesSecRenderer(params.value);\n    }\n  },\n  server_packets: {},\n  // `session_id` already in sessions\n  tcp_state: {\n    valueGetter: function valueGetter(_ref30) {\n      var data = _ref30.data;\n      return renderer.tcpStateRenderer(data.tcp_state);\n    }\n  },\n  // `uuid` already in sessions\n  /** SESSION_STATS TABLE COLUMN FILEDS END   */\n\n  // other fields\n  age_milliseconds: {\n    sort: 'asc',\n    cellRenderer: function cellRenderer(_ref31) {\n      var value = _ref31.value;\n      return renderer.timeRangeMilliseconds(value);\n    }\n  },\n  conntrack_id: {},\n  mark: {},\n  priority: {\n    valueGetter: function valueGetter(_ref32) {\n      var data = _ref32.data;\n      return renderer.priorityNumToText(data.priority);\n    }\n  },\n  /** non field columns */\n  application_control_action: {\n    valueGetter: function valueGetter(_ref33) {\n      var data = _ref33.data;\n      if (data.application_control_rejected) return i18n.t('rejected');\n      if (data.application_control_blocked) return i18n.t('blocked');\n      if (data.application_control_bypassed) return i18n.t('bypassed');\n      if (data.application_control_flagged) return i18n.t('flagged');\n      return '';\n    }\n  }\n};\n\n/**\n * Predefined columns specific for some grids in the form\n * {\n *    all: ['col_name', ...] - all columns shown in the grid in the desired order\n *    hidden: ['col_name', ...] - columns found in `all` but by default are hidden\n *    renamed: { original_column_name: 'new_column_name' } - used for some grids in the UI\n * }\n */\nvar gridColumns = {\n  active_sessions: {\n    all: ['age_milliseconds',\n    // application\n    'application_name', 'application_name_inferred', 'application_category', 'application_category_inferred', 'application_confidence', 'application_confidence_inferred', 'application_productivity', 'application_productivity_inferred', 'application_risk', 'application_risk_inferred',\n    // client\n    'client_address', 'client_address_new', 'client_interface_id', 'client_interface_type', 'client_port', 'client_port_new', 'client_country',\n    // server\n    'server_address', 'server_address_new', 'server_interface_id', 'server_interface_type', 'server_country', 'server_dns_hint', 'server_port', 'server_port_new',\n    // bytes\n    'bytes', 'byte_rate',\n    // certs\n    'certificate_subject_cn', 'certificate_subject_o', 'ssl_sni', 'ip_protocol', 'family', 'local_address', 'remote_address', 'tcp_state', 'timeout_seconds', 'priority',\n    // web-filter\n    'web_filter_hostname', 'web_filter_reason', 'web_filter_blocked', 'web_filter_flagged', 'web_filter_catid',\n    // geoip\n    'geo_ip_blocked_client', 'geo_ip_blocked_server',\n    // threat-prevention\n    'threat_prevention_blocked_address', 'threat_prevention_threat_level'],\n    hidden: ['application_name_inferred', 'application_category', 'application_category_inferred', 'application_confidence', 'application_confidence_inferred', 'application_productivity', 'application_productivity_inferred', 'application_risk', 'application_risk_inferred', 'client_address_new', 'client_interface_type', 'client_port', 'client_port_new', 'client_country', 'server_address_new', 'server_interface_type', 'server_port_new', 'certificate_subject_cn', 'certificate_subject_o', 'ssl_sni', 'ip_protocol', 'family', 'local_address', 'remote_address', 'tcp_state', 'timeout_seconds', 'priority', 'web_filter_hostname', 'web_filter_reason', 'web_filter_blocked', 'web_filter_flagged', 'web_filter_catid', 'geo_ip_blocked_client', 'geo_ip_blocked_server', 'threat_prevention_blocked_address', 'threat_prevention_threat_level'],\n    renamed: {\n      priority: 'qos_priority',\n      client_port: 'source_port',\n      server_country: 'destination_country',\n      server_dns_hint: 'destination_dns_cache',\n      server_port: 'destination_port'\n    }\n  },\n  sessions: {\n    all: [\n    // this seems to be the order as it was before refactor\n    'time_stamp', 'geo_ip_blocked_server', 'threat_prevention_blocked_address', 'threat_prevention_threat_level',\n    // application\n    'application_name', 'application_name_inferred', 'application_category', 'application_category_inferred', 'application_confidence', 'application_confidence_inferred', 'application_productivity', 'application_productivity_inferred', 'application_risk', 'application_risk_inferred',\n    // client\n    'client_address', 'client_address_new', 'client_interface_id', 'client_interface_type', 'client_port', 'client_port_new', 'client_country',\n    // server\n    'server_address', 'server_address_new', 'server_interface_id', 'server_interface_type', 'server_country', 'server_dns_hint', 'server_port', 'server_port_new',\n    // certs\n    'certificate_subject_cn', 'certificate_subject_o', 'ssl_sni', 'ip_protocol', 'family', 'local_address', 'remote_address', 'priority',\n    // web-filter\n    'web_filter_hostname', 'web_filter_reason', 'web_filter_blocked', 'web_filter_flagged', 'web_filter_catid',\n    // geoip\n    'geo_ip_blocked_client',\n    // dynamic-lists\n    'dynamic_lists_blocked_address',\n    // tcp state\n    'tcp_state',\n    // bypass\n    'bypassed'],\n    hidden: ['application_name_inferred', 'application_category', 'application_category_inferred', 'application_confidence', 'application_confidence_inferred', 'application_productivity', 'application_productivity_inferred', 'application_risk', 'application_risk_inferred', 'client_address_new', 'client_interface_type', 'client_port', 'client_port_new', 'client_country', 'server_address_new', 'server_interface_type', 'server_port_new', 'certificate_subject_cn', 'certificate_subject_o', 'ssl_sni', 'ip_protocol', 'family', 'local_address', 'remote_address', 'priority', 'web_filter_hostname', 'web_filter_reason', 'web_filter_blocked', 'web_filter_flagged', 'web_filter_catid', 'geo_ip_blocked_client',\n    // dynamic-lists\n    'dynamic_lists_blocked_address',\n    // tcp state\n    'tcp_state'],\n    renamed: {\n      priority: 'qos_priority',\n      client_port: 'source_port',\n      server_country: 'destination_country',\n      server_dns_hint: 'destination_dns_cache',\n      server_port: 'destination_port'\n    }\n  },\n  wan_routing: {\n    all: ['time_stamp', 'server_interface_id', 'client_address', 'server_address', 'server_country', 'application_name_inferred', 'wan_rule_id', 'wan_policy_id', 'server_dns_hint'],\n    renamed: {\n      wan_rule_id: 'wan_rule',\n      wan_policy_id: 'wan_policy',\n      server_interface_id: 'wan_route',\n      server_dns_hint: 'domain_name',\n      server_country: 'destination_country'\n    }\n  },\n  threat_prevention_blocked: {\n    all: ['time_stamp', 'client_address', 'threat_prevention_blocked_address', 'threat_prevention_threat_level']\n  },\n  dynamic_lists_blocked: {\n    all: ['time_stamp', 'client_address', 'dynamic_lists_blocked_address']\n  },\n  geoip_outbound_blocked_sessions: {\n    all: ['time_stamp', 'client_address', 'server_address', 'server_country', 'server_dns_hint'],\n    renamed: {\n      server_country: 'destination_country',\n      server_dns_hint: 'destination_dns_cache'\n    }\n  },\n  geoip_inbound_blocked_sessions: {\n    all: ['time_stamp', 'client_address', 'server_address', 'client_country']\n  },\n  web_filter_visited_sites: {\n    all: ['time_stamp', 'web_filter_hostname', 'client_address', 'server_address', 'web_filter_blocked', 'web_filter_flagged', 'web_filter_catid', 'web_filter_reason'],\n    renamed: {\n      web_filter_hostname: 'site',\n      web_filter_reason: 'reason',\n      web_filter_catid: 'category',\n      web_filter_blocked: 'blocked',\n      web_filter_flagged: 'flagged'\n    }\n  },\n  application_control_applications: {\n    all: ['time_stamp', 'application_name', 'category',\n    // not rendered\n    'application_productivity', 'application_risk', 'application_control_action', 'client_address', 'client_port', 'server_address', 'server_port'],\n    renamed: {\n      application_name: 'name',\n      application_control_action: 'action',\n      client_port: 'source_port',\n      server_port: 'destination_port'\n    }\n  },\n  captive_portal_events: {\n    all: ['time_stamp', 'captive_portal_client_ip', 'server_address', 'server_port', 'captive_portal_event_name'],\n    renamed: {\n      server_port: 'destination_port'\n    }\n  },\n  policy_manager_events: {\n    all: ['time_stamp', 'session_id', 'policy_id', 'rule_id', 'config_set_id', 'device_uid', 'action', 'evaluation', 'client_address', 'client_port', 'ip_protocol', 'server_address', 'server_port'],\n    renamed: {\n      policy_id: 'policy_name',\n      rule_id: 'rule_name',\n      config_set_id: 'config_name',\n      client_port: 'source_port',\n      server_port: 'destination_port'\n    },\n    hidden: ['ip_protocol', 'config_set_id', 'device_uid']\n  },\n  denial_of_service_events: {\n    all: ['time_stamp', 'from_host', 'to_host', 'dos_ip_protocol', 'dos_rule_id'],\n    renamed: {\n      dos_ip_protocol: 'ip_protocol'\n    }\n  }\n};\n\n/**\n * Return needed mappings between ids and names as existing on the box\n * This are needed for proper rendering some of the columns like: `interface_id`, `wan_rule_id`, `wan_policy_id`\n * @param {Object} boxSettings - the box settings\n * @returns {Object}\n */\nvar boxIdNameMappings = function boxIdNameMappings(boxSettings) {\n  var _boxSettings$network, _boxSettings$wan, _boxSettings$wan2, _boxSettings$policy_m, _boxSettings$policy_m2, _boxSettings$policy_m3;\n  var interfaceIdNameMap = boxSettings === null || boxSettings === void 0 || (_boxSettings$network = boxSettings.network) === null || _boxSettings$network === void 0 ? void 0 : _boxSettings$network.interfaces.reduce(function (res, intf) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, intf.interfaceId, intf.name));\n  }, {});\n  var wanRules = boxSettings === null || boxSettings === void 0 || (_boxSettings$wan = boxSettings.wan) === null || _boxSettings$wan === void 0 ? void 0 : _boxSettings$wan.policy_chains.find(function (chain) {\n    return chain.name === 'user-wan-rules';\n  }).rules;\n  var wanRuleIdNameMap = wanRules === null || wanRules === void 0 ? void 0 : wanRules.reduce(function (res, rule) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, rule.ruleId, rule.description));\n  }, {});\n  var wanPolicyIdNameMap = boxSettings === null || boxSettings === void 0 || (_boxSettings$wan2 = boxSettings.wan) === null || _boxSettings$wan2 === void 0 ? void 0 : _boxSettings$wan2.policies.reduce(function (res, policy) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, policy.policyId, policy.description));\n  }, {});\n  var policyIdNameMap = boxSettings === null || boxSettings === void 0 || (_boxSettings$policy_m = boxSettings.policy_manager) === null || _boxSettings$policy_m === void 0 ? void 0 : _boxSettings$policy_m.policies.reduce(function (res, policy) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, policy.id, policy.name));\n  }, {});\n  var policyRuleIDNameMap = boxSettings === null || boxSettings === void 0 || (_boxSettings$policy_m2 = boxSettings.policy_manager) === null || _boxSettings$policy_m2 === void 0 ? void 0 : _boxSettings$policy_m2.rules.reduce(function (res, rule) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, rule.id, rule.name));\n  }, {});\n  var configSetIdNameMap = boxSettings === null || boxSettings === void 0 || (_boxSettings$policy_m3 = boxSettings.policy_manager) === null || _boxSettings$policy_m3 === void 0 ? void 0 : _boxSettings$policy_m3.configurations.reduce(function (res, config) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, config.id, config.name));\n  }, {});\n  return {\n    interfaceIdNameMap: interfaceIdNameMap,\n    wanRuleIdNameMap: wanRuleIdNameMap,\n    wanPolicyIdNameMap: wanPolicyIdNameMap,\n    policyIdNameMap: policyIdNameMap,\n    policyRuleIDNameMap: policyRuleIDNameMap,\n    configSetIdNameMap: configSetIdNameMap\n  };\n};\n\n/**\n * Global method used to build columns definitions as expected by the grid\n * @param {Object} gridColumns - array of grid columns as defined above: { all: [], hidden: [], renamed: [] }\n * @param {Object} boxSettings - the box settings\n * @returns {Array} - the `column-defs` prop for the grid\n */\nvar buildColumnDefs = function buildColumnDefs(gridColumns, boxSettings) {\n  var defs = [];\n  var all = gridColumns.all;\n  var hidden = gridColumns.hidden;\n  var renamed = gridColumns.renamed;\n\n  // get the id/name mappings from box settings\n  var idNameMappings = boxIdNameMappings(boxSettings);\n  all.forEach(function (field) {\n    if (!columns[field]) return;\n    var col = _objectSpread({\n      // data field\n      field: field,\n      // column header\n      headerName: renamed !== null && renamed !== void 0 && renamed[field] ? i18n.t(renamed[field]) : i18n.t(field),\n      // if it's hidden\n      hide: hidden === null || hidden === void 0 ? void 0 : hidden.includes(field),\n      flex: 1\n    }, columns[field]);\n\n    // for fields requiring box data for rendering, set the proper valueRenderer\n    switch (field) {\n      case 'client_interface_id':\n        col.valueGetter = function (_ref34) {\n          var data = _ref34.data;\n          return renderer.interfaceName(data.client_interface_id, idNameMappings === null || idNameMappings === void 0 ? void 0 : idNameMappings.interfaceIdNameMap);\n        };\n        break;\n      case 'server_interface_id':\n        col.valueGetter = function (_ref35) {\n          var data = _ref35.data;\n          return renderer.interfaceName(data.server_interface_id, idNameMappings === null || idNameMappings === void 0 ? void 0 : idNameMappings.interfaceIdNameMap);\n        };\n        break;\n      case 'wan_rule_id':\n        col.valueGetter = function (_ref36) {\n          var data = _ref36.data;\n          return renderer.wanRule(data.wan_rule_id, idNameMappings === null || idNameMappings === void 0 ? void 0 : idNameMappings.wanRuleIdNameMap);\n        };\n        break;\n      case 'wan_policy_id':\n        col.valueGetter = function (_ref37) {\n          var data = _ref37.data;\n          return renderer.wanPolicy(data.wan_policy_id, idNameMappings === null || idNameMappings === void 0 ? void 0 : idNameMappings.wanPolicyIdNameMap);\n        };\n        break;\n      case 'time_stamp':\n        col.valueFormatter = function (_ref38) {\n          var value = _ref38.value;\n          return renderer.timeStamp(value);\n        };\n        break;\n      case 'policy_id':\n        col.valueGetter = function (_ref39) {\n          var data = _ref39.data;\n          return renderer.policyName(data.policy_id, idNameMappings === null || idNameMappings === void 0 ? void 0 : idNameMappings.policyIdNameMap);\n        };\n        break;\n      case 'rule_id':\n        col.autoHeight = true;\n        col.cellRenderer = function (_ref40) {\n          var data = _ref40.data;\n          return renderer.ruleName(data.rule_id.split('|'), idNameMappings === null || idNameMappings === void 0 ? void 0 : idNameMappings.policyRuleIDNameMap).join(\"<br>\");\n        };\n        break;\n      case 'config_set_id':\n        col.valueGetter = function (_ref41) {\n          var data = _ref41.data;\n          return renderer.configName(data.config_set_id, idNameMappings === null || idNameMappings === void 0 ? void 0 : idNameMappings.configSetIdNameMap);\n        };\n        break;\n    }\n    defs.push(col);\n  });\n  return defs;\n};\nexport default {\n  gridColumns: gridColumns,\n  buildColumnDefs: buildColumnDefs\n};","map":{"version":3,"names":["util","dates","i18n","renderer","columns","application_blocked","application_category","application_category_inferred","application_confidence","application_confidence_inferred","application_control_blocked","application_control_bypassed","application_control_flagged","application_control_rejected","application_detail","application_flagged","application_id","application_id_inferred","application_name","valueGetter","_ref","data","undefined","t","application_name_inferred","_ref2","application_productivity","_ref3","applicationProductivityLevel","application_productivity_inferred","_ref4","application_protochain","application_protochain_inferred","application_risk","_ref5","applicationRiskLevel","application_risk_inferred","_ref6","bypassed","captive_portal_client_ip","comparator","a","b","compareIpAny","captive_portal_event_name","certificate_subject_cn","certificate_subject_o","client_address","_ref7","client_address_new","_ref8","client_country","_ref9","country","client_dns_hint","client_hops","client_interface_id","client_interface_type","_ref10","interfaceType","client_latitude","client_longitude","client_port","_ref11","client_port_new","_ref12","device_uid","end_time","family","_ref13","familyRenderer","geo_ip_blocked_client","_ref14","geo_ip_blocked_server","_ref15","hostname","ip_protocol","_ref16","ipProtocol","local_address","policy__id","policy_flow_id","action","_ref17","toLowerCase","evaluation","policy_id","rule_id","config_set_id","remote_address","server_address","_ref18","server_address_new","_ref19","server_country","_ref20","server_dns_hint","server_hops","server_interface_id","server_interface_type","_ref21","server_latitude","server_longitude","server_port","_ref22","server_port_new","_ref23","session_id","ssl_sni","threat_prevention_blocked_address","threat_prevention_threat_level","_ref24","incomingThreatLevel","dynamic_lists_blocked_address","time_stamp","compareDates","sort","username","uuid","wan_policy_id","wan_rule_chain","wan_rule_id","web_filter_blocked","web_filter_catid","_ref25","webfilterCategory","web_filter_flagged","web_filter_hostname","web_filter_reason","valueFormatter","params","webfilterReason","value","from_host","_ref26","to_host","_ref27","dos_rule_id","_ref28","dos_ip_protocol","_ref29","dosIPProtocol","byte_rate","type","cellRenderer","bytesSecRenderer","bytes","bytesRenderer","client_byte_rate","client_bytes","client_packet_rate","client_packets","packet_rate","packets","server_byte_rate","server_bytes","server_packet_rate","server_packets","tcp_state","_ref30","tcpStateRenderer","age_milliseconds","_ref31","timeRangeMilliseconds","conntrack_id","mark","priority","_ref32","priorityNumToText","application_control_action","_ref33","gridColumns","active_sessions","all","hidden","renamed","sessions","wan_routing","threat_prevention_blocked","dynamic_lists_blocked","geoip_outbound_blocked_sessions","geoip_inbound_blocked_sessions","web_filter_visited_sites","application_control_applications","captive_portal_events","policy_manager_events","denial_of_service_events","boxIdNameMappings","boxSettings","_boxSettings$network","_boxSettings$wan","_boxSettings$wan2","_boxSettings$policy_m","_boxSettings$policy_m2","_boxSettings$policy_m3","interfaceIdNameMap","network","interfaces","reduce","res","intf","_objectSpread","_defineProperty","interfaceId","name","wanRules","wan","policy_chains","find","chain","rules","wanRuleIdNameMap","rule","ruleId","description","wanPolicyIdNameMap","policies","policy","policyId","policyIdNameMap","policy_manager","id","policyRuleIDNameMap","configSetIdNameMap","configurations","config","buildColumnDefs","defs","idNameMappings","forEach","field","col","headerName","hide","includes","flex","_ref34","interfaceName","_ref35","_ref36","wanRule","_ref37","wanPolicy","_ref38","timeStamp","_ref39","policyName","autoHeight","_ref40","ruleName","split","join","_ref41","configName","push"],"sources":["/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/vuntangle/src/plugins/columns.js"],"sourcesContent":["/**\n * All columns settings and methods\n * to build `column-defs` as expected by the grid\n * based on database fields, custom renderers and box settings\n */\nimport util from './util'\nimport dates from './dates'\nimport i18n from './vue-i18n'\nimport renderer from './renderer'\n\n// all existing columns\nconst columns = {\n  /**\n   * SESSIONS TABLE COLUMN FIELDS AS IN DB\n   */\n  // APPLICATION\n  application_blocked: {},\n  application_category: {},\n  application_category_inferred: {},\n  application_confidence: {},\n  application_confidence_inferred: {},\n  application_control_blocked: {},\n  application_control_bypassed: {},\n  application_control_flagged: {},\n  application_control_rejected: {},\n  application_detail: {}, // not used\n  application_flagged: {}, // not_used\n  application_id: {}, // not used\n  application_id_inferred: {}, // not used\n  application_name: {\n    valueGetter: ({ data }) =>\n      data.application_name !== undefined && data.application_name !== null ? data.application_name : i18n.t('unknown'),\n  },\n  application_name_inferred: {\n    valueGetter: ({ data }) =>\n      data.application_name_inferred !== undefined && data.application_name_inferred !== null\n        ? data.application_name_inferred\n        : i18n.t('unknown'),\n  },\n  application_productivity: {\n    valueGetter: ({ data }) => renderer.applicationProductivityLevel(data.application_productivity),\n  },\n  application_productivity_inferred: {\n    valueGetter: ({ data }) => renderer.applicationProductivityLevel(data.application_productivity_inferred),\n  },\n  application_protochain: {}, // not used\n  application_protochain_inferred: {}, // not_used\n  application_risk: {\n    valueGetter: ({ data }) => renderer.applicationRiskLevel(data.application_risk),\n  },\n  application_risk_inferred: {\n    valueGetter: ({ data }) => renderer.applicationRiskLevel(data.application_risk_inferred),\n  },\n\n  // BYPASS\n  bypassed: {},\n\n  // CAPTIVE PORTAL\n  captive_portal_client_ip: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n  },\n  captive_portal_event_name: {},\n\n  // CERTS\n  certificate_subject_cn: {},\n  certificate_subject_o: {},\n\n  // CLIENT\n  client_address: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n    valueGetter: ({ data }) => data.client_address || i18n.t('unknown'),\n  },\n  client_address_new: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n    valueGetter: ({ data }) => data.client_address_new || i18n.t('unknown'),\n  },\n  client_country: {\n    valueGetter: ({ data }) => renderer.country(data.client_country),\n  },\n  client_dns_hint: {},\n  client_hops: {},\n  client_interface_id: {\n    valueGetter: undefined, // this is going to be set upon building the columns\n  },\n  client_interface_type: {\n    valueGetter: ({ data }) => renderer.interfaceType(data.client_interface_type),\n  },\n  client_latitude: {},\n  client_longitude: {},\n  client_port: {\n    valueGetter: ({ data }) =>\n      data.client_port !== undefined && data.client_port !== null ? data.client_port : i18n.t('unknown'),\n  },\n  client_port_new: {\n    valueGetter: ({ data }) =>\n      data.client_port_new !== undefined && data.client_port_new !== null ? data.client_port_new : i18n.t('unknown'),\n  },\n\n  device_uid: {}, // not used\n  end_time: {},\n  family: {\n    valueGetter: ({ data }) => renderer.familyRenderer(data.family),\n  },\n\n  // GEOIP\n  geo_ip_blocked_client: {\n    valueGetter: ({ data }) => renderer.boolean(data.geo_ip_blocked_client),\n  },\n  geo_ip_blocked_server: {\n    valueGetter: ({ data }) => renderer.boolean(data.geo_ip_blocked_server),\n  },\n\n  hostname: {},\n  ip_protocol: {\n    valueGetter: ({ data }) => renderer.ipProtocol(data.ip_protocol),\n  },\n  local_address: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n  },\n\n  policy__id: {}, // not used and `__` is not a typo\n  policy_flow_id: {}, // not used\n\n  // Policy Manager Events\n  action: {\n    valueGetter: ({ data }) => i18n.t(data.action.toLowerCase()) || i18n.t('unknown'),\n  },\n  evaluation: {\n    valueGetter: () => renderer.boolean(true),\n  },\n  policy_id: {},\n  rule_id: {},\n  config_set_id: {},\n\n  remote_address: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n  },\n\n  // SERVER\n  server_address: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n    valueGetter: ({ data }) => data.server_address || i18n.t('unknown'),\n  },\n  server_address_new: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n    valueGetter: ({ data }) => data.server_address_new || i18n.t('unknown'),\n  },\n  server_country: {\n    valueGetter: ({ data }) => renderer.country(data.server_country),\n  },\n  server_dns_hint: {},\n  server_hops: {},\n  server_interface_id: {\n    valueGetter: undefined, // this is going to be set upon building the columns\n  },\n  server_interface_type: {\n    valueGetter: ({ data }) => renderer.interfaceType(data.server_interface_type),\n  },\n  server_latitude: {},\n  server_longitude: {},\n  server_port: {\n    valueGetter: ({ data }) =>\n      data.server_port !== undefined && data.server_port !== null ? data.server_port : i18n.t('unknown'),\n  },\n  server_port_new: {\n    valueGetter: ({ data }) =>\n      data.server_port_new !== undefined && data.server_port_new !== null ? data.server_port_new : i18n.t('unknown'),\n  },\n\n  session_id: {},\n\n  ssl_sni: {},\n\n  // THREAT PREVENTION\n  threat_prevention_blocked_address: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n  },\n  threat_prevention_threat_level: {\n    valueGetter: ({ data }) => renderer.incomingThreatLevel(data.threat_prevention_threat_level),\n  },\n\n  dynamic_lists_blocked_address: {\n    comparator: (a, b) => util.compareIpAny(a, b),\n  },\n\n  time_stamp: {\n    comparator: (a, b) => dates.compareDates(a, b),\n    sort: 'desc',\n    // minWidth: 200,\n  },\n\n  username: {},\n  uuid: {}, // not used\n\n  // WAN POLICY\n  wan_policy_id: {},\n  wan_rule_chain: {}, // not used\n  wan_rule_id: {},\n\n  // WEB FILTER\n  web_filter_blocked: {},\n  web_filter_catid: {\n    valueGetter: ({ data }) => renderer.webfilterCategory(data.web_filter_catid),\n  },\n  web_filter_flagged: {},\n  web_filter_hostname: {},\n  web_filter_reason: {\n    valueFormatter: params => renderer.webfilterReason(params.value),\n  },\n  /** END SESSIONS TABLE COLUMN FILEDS */\n\n  /**\n   * DOS_EVENTS TABLE COLUMN FILEDS AS IN DB\n   */\n  from_host: {\n    valueGetter: ({ data }) => data.from_host,\n  },\n  to_host: {\n    valueGetter: ({ data }) => data.to_host,\n  },\n  dos_rule_id: {\n    valueGetter: ({ data }) => data.rule_id,\n  },\n  dos_ip_protocol: {\n    valueGetter: ({ data }) => renderer.dosIPProtocol(data.ip_protocol),\n  },\n  /** DOS_EVENTS TABLE COLUMN FILEDS END   */\n\n  /**\n   * SESSION_STATS TABLE COLUMN FILEDS AS IN DB\n   */\n  byte_rate: {\n    type: 'numericColumn',\n    cellRenderer: params => renderer.bytesSecRenderer(params.value),\n  },\n  bytes: {\n    type: 'numericColumn',\n    cellRenderer: params => renderer.bytesRenderer(params.value),\n  },\n  client_byte_rate: {\n    type: 'numericColumn',\n    cellRenderer: params => renderer.bytesSecRenderer(params.value),\n  },\n  client_bytes: {\n    type: 'numericColumn',\n    cellRenderer: params => renderer.bytesRenderer(params.value),\n  },\n  client_packet_rate: {\n    type: 'numericColumn',\n  },\n  client_packets: {},\n  // `device_uid` already in sessions table\n  packet_rate: {\n    type: 'numericColumn',\n    cellRenderer: params => renderer.bytesSecRenderer(params.value),\n  },\n  packets: {\n    type: 'numericColumn',\n  },\n  server_byte_rate: {\n    type: 'numericColumn',\n    cellRenderer: params => renderer.bytesSecRenderer(params.value),\n  },\n  server_bytes: {\n    type: 'numericColumn',\n    cellRenderer: params => renderer.bytesRenderer(params.value),\n  },\n  server_packet_rate: {\n    type: 'numericColumn',\n    cellRenderer: params => renderer.bytesSecRenderer(params.value),\n  },\n  server_packets: {},\n\n  // `session_id` already in sessions\n  tcp_state: {\n    valueGetter: ({ data }) => renderer.tcpStateRenderer(data.tcp_state),\n  },\n\n  // `uuid` already in sessions\n  /** SESSION_STATS TABLE COLUMN FILEDS END   */\n\n  // other fields\n  age_milliseconds: {\n    sort: 'asc',\n    cellRenderer: ({ value }) => renderer.timeRangeMilliseconds(value),\n  },\n  conntrack_id: {},\n  mark: {},\n\n  priority: {\n    valueGetter: ({ data }) => renderer.priorityNumToText(data.priority),\n  },\n\n  /** non field columns */\n  application_control_action: {\n    valueGetter: ({ data }) => {\n      if (data.application_control_rejected) return i18n.t('rejected')\n      if (data.application_control_blocked) return i18n.t('blocked')\n      if (data.application_control_bypassed) return i18n.t('bypassed')\n      if (data.application_control_flagged) return i18n.t('flagged')\n      return ''\n    },\n  },\n}\n\n/**\n * Predefined columns specific for some grids in the form\n * {\n *    all: ['col_name', ...] - all columns shown in the grid in the desired order\n *    hidden: ['col_name', ...] - columns found in `all` but by default are hidden\n *    renamed: { original_column_name: 'new_column_name' } - used for some grids in the UI\n * }\n */\nconst gridColumns = {\n  active_sessions: {\n    all: [\n      'age_milliseconds',\n      // application\n      'application_name',\n      'application_name_inferred',\n      'application_category',\n      'application_category_inferred',\n      'application_confidence',\n      'application_confidence_inferred',\n      'application_productivity',\n      'application_productivity_inferred',\n      'application_risk',\n      'application_risk_inferred',\n      // client\n      'client_address',\n      'client_address_new',\n      'client_interface_id',\n      'client_interface_type',\n      'client_port',\n      'client_port_new',\n      'client_country',\n      // server\n      'server_address',\n      'server_address_new',\n      'server_interface_id',\n      'server_interface_type',\n      'server_country',\n      'server_dns_hint',\n      'server_port',\n      'server_port_new',\n      // bytes\n      'bytes',\n      'byte_rate',\n      // certs\n      'certificate_subject_cn',\n      'certificate_subject_o',\n      'ssl_sni',\n      'ip_protocol',\n      'family',\n      'local_address',\n      'remote_address',\n      'tcp_state',\n      'timeout_seconds',\n      'priority',\n      // web-filter\n      'web_filter_hostname',\n      'web_filter_reason',\n      'web_filter_blocked',\n      'web_filter_flagged',\n      'web_filter_catid',\n      // geoip\n      'geo_ip_blocked_client',\n      'geo_ip_blocked_server',\n      // threat-prevention\n      'threat_prevention_blocked_address',\n      'threat_prevention_threat_level',\n    ],\n    hidden: [\n      'application_name_inferred',\n      'application_category',\n      'application_category_inferred',\n      'application_confidence',\n      'application_confidence_inferred',\n      'application_productivity',\n      'application_productivity_inferred',\n      'application_risk',\n      'application_risk_inferred',\n      'client_address_new',\n      'client_interface_type',\n      'client_port',\n      'client_port_new',\n      'client_country',\n      'server_address_new',\n      'server_interface_type',\n      'server_port_new',\n      'certificate_subject_cn',\n      'certificate_subject_o',\n      'ssl_sni',\n      'ip_protocol',\n      'family',\n      'local_address',\n      'remote_address',\n      'tcp_state',\n      'timeout_seconds',\n      'priority',\n      'web_filter_hostname',\n      'web_filter_reason',\n      'web_filter_blocked',\n      'web_filter_flagged',\n      'web_filter_catid',\n      'geo_ip_blocked_client',\n      'geo_ip_blocked_server',\n      'threat_prevention_blocked_address',\n      'threat_prevention_threat_level',\n    ],\n    renamed: {\n      priority: 'qos_priority',\n      client_port: 'source_port',\n      server_country: 'destination_country',\n      server_dns_hint: 'destination_dns_cache',\n      server_port: 'destination_port',\n    },\n  },\n  sessions: {\n    all: [\n      // this seems to be the order as it was before refactor\n      'time_stamp',\n      'geo_ip_blocked_server',\n      'threat_prevention_blocked_address',\n      'threat_prevention_threat_level',\n\n      // application\n      'application_name',\n      'application_name_inferred',\n      'application_category',\n      'application_category_inferred',\n      'application_confidence',\n      'application_confidence_inferred',\n      'application_productivity',\n      'application_productivity_inferred',\n      'application_risk',\n      'application_risk_inferred',\n      // client\n      'client_address',\n      'client_address_new',\n      'client_interface_id',\n      'client_interface_type',\n      'client_port',\n      'client_port_new',\n      'client_country',\n      // server\n      'server_address',\n      'server_address_new',\n      'server_interface_id',\n      'server_interface_type',\n      'server_country',\n      'server_dns_hint',\n      'server_port',\n      'server_port_new',\n      // certs\n      'certificate_subject_cn',\n      'certificate_subject_o',\n      'ssl_sni',\n      'ip_protocol',\n      'family',\n      'local_address',\n      'remote_address',\n      'priority',\n      // web-filter\n      'web_filter_hostname',\n      'web_filter_reason',\n      'web_filter_blocked',\n      'web_filter_flagged',\n      'web_filter_catid',\n      // geoip\n      'geo_ip_blocked_client',\n      // dynamic-lists\n      'dynamic_lists_blocked_address',\n      // tcp state\n      'tcp_state',\n      // bypass\n      'bypassed',\n    ],\n    hidden: [\n      'application_name_inferred',\n      'application_category',\n      'application_category_inferred',\n      'application_confidence',\n      'application_confidence_inferred',\n      'application_productivity',\n      'application_productivity_inferred',\n      'application_risk',\n      'application_risk_inferred',\n      'client_address_new',\n      'client_interface_type',\n      'client_port',\n      'client_port_new',\n      'client_country',\n      'server_address_new',\n      'server_interface_type',\n      'server_port_new',\n      'certificate_subject_cn',\n      'certificate_subject_o',\n      'ssl_sni',\n      'ip_protocol',\n      'family',\n      'local_address',\n      'remote_address',\n      'priority',\n      'web_filter_hostname',\n      'web_filter_reason',\n      'web_filter_blocked',\n      'web_filter_flagged',\n      'web_filter_catid',\n      'geo_ip_blocked_client',\n      // dynamic-lists\n      'dynamic_lists_blocked_address',\n      // tcp state\n      'tcp_state',\n    ],\n    renamed: {\n      priority: 'qos_priority',\n      client_port: 'source_port',\n      server_country: 'destination_country',\n      server_dns_hint: 'destination_dns_cache',\n      server_port: 'destination_port',\n    },\n  },\n  wan_routing: {\n    all: [\n      'time_stamp',\n      'server_interface_id',\n      'client_address',\n      'server_address',\n      'server_country',\n      'application_name_inferred',\n      'wan_rule_id',\n      'wan_policy_id',\n      'server_dns_hint',\n    ],\n    renamed: {\n      wan_rule_id: 'wan_rule',\n      wan_policy_id: 'wan_policy',\n      server_interface_id: 'wan_route',\n      server_dns_hint: 'domain_name',\n      server_country: 'destination_country',\n    },\n  },\n  threat_prevention_blocked: {\n    all: ['time_stamp', 'client_address', 'threat_prevention_blocked_address', 'threat_prevention_threat_level'],\n  },\n  dynamic_lists_blocked: {\n    all: ['time_stamp', 'client_address', 'dynamic_lists_blocked_address'],\n  },\n  geoip_outbound_blocked_sessions: {\n    all: ['time_stamp', 'client_address', 'server_address', 'server_country', 'server_dns_hint'],\n    renamed: {\n      server_country: 'destination_country',\n      server_dns_hint: 'destination_dns_cache',\n    },\n  },\n\n  geoip_inbound_blocked_sessions: {\n    all: ['time_stamp', 'client_address', 'server_address', 'client_country'],\n  },\n  web_filter_visited_sites: {\n    all: [\n      'time_stamp',\n      'web_filter_hostname',\n      'client_address',\n      'server_address',\n      'web_filter_blocked',\n      'web_filter_flagged',\n      'web_filter_catid',\n      'web_filter_reason',\n    ],\n    renamed: {\n      web_filter_hostname: 'site',\n      web_filter_reason: 'reason',\n      web_filter_catid: 'category',\n      web_filter_blocked: 'blocked',\n      web_filter_flagged: 'flagged',\n    },\n  },\n  application_control_applications: {\n    all: [\n      'time_stamp',\n      'application_name',\n      'category', // not rendered\n      'application_productivity',\n      'application_risk',\n      'application_control_action',\n      'client_address',\n      'client_port',\n      'server_address',\n      'server_port',\n    ],\n    renamed: {\n      application_name: 'name',\n      application_control_action: 'action',\n      client_port: 'source_port',\n      server_port: 'destination_port',\n    },\n  },\n  captive_portal_events: {\n    all: ['time_stamp', 'captive_portal_client_ip', 'server_address', 'server_port', 'captive_portal_event_name'],\n    renamed: {\n      server_port: 'destination_port',\n    },\n  },\n  policy_manager_events: {\n    all: [\n      'time_stamp',\n      'session_id',\n      'policy_id',\n      'rule_id',\n      'config_set_id',\n      'device_uid',\n      'action',\n      'evaluation',\n      'client_address',\n      'client_port',\n      'ip_protocol',\n      'server_address',\n      'server_port',\n    ],\n    renamed: {\n      policy_id: 'policy_name',\n      rule_id: 'rule_name',\n      config_set_id: 'config_name',\n      client_port: 'source_port',\n      server_port: 'destination_port',\n    },\n    hidden: ['ip_protocol', 'config_set_id', 'device_uid'],\n  },\n  denial_of_service_events: {\n    all: ['time_stamp', 'from_host', 'to_host', 'dos_ip_protocol', 'dos_rule_id'],\n    renamed: {\n      dos_ip_protocol: 'ip_protocol',\n    },\n  },\n}\n\n/**\n * Return needed mappings between ids and names as existing on the box\n * This are needed for proper rendering some of the columns like: `interface_id`, `wan_rule_id`, `wan_policy_id`\n * @param {Object} boxSettings - the box settings\n * @returns {Object}\n */\nconst boxIdNameMappings = boxSettings => {\n  const interfaceIdNameMap = boxSettings?.network?.interfaces.reduce((res, intf) => {\n    return { ...res, [intf.interfaceId]: intf.name }\n  }, {})\n\n  const wanRules = boxSettings?.wan?.policy_chains.find(chain => chain.name === 'user-wan-rules').rules\n  const wanRuleIdNameMap = wanRules?.reduce((res, rule) => {\n    return { ...res, [rule.ruleId]: rule.description }\n  }, {})\n\n  const wanPolicyIdNameMap = boxSettings?.wan?.policies.reduce((res, policy) => {\n    return { ...res, [policy.policyId]: policy.description }\n  }, {})\n\n  const policyIdNameMap = boxSettings?.policy_manager?.policies.reduce((res, policy) => {\n    return { ...res, [policy.id]: policy.name }\n  }, {})\n\n  const policyRuleIDNameMap = boxSettings?.policy_manager?.rules.reduce((res, rule) => {\n    return { ...res, [rule.id]: rule.name }\n  }, {})\n\n  const configSetIdNameMap = boxSettings?.policy_manager?.configurations.reduce((res, config) => {\n    return { ...res, [config.id]: config.name }\n  }, {})\n\n  return {\n    interfaceIdNameMap,\n    wanRuleIdNameMap,\n    wanPolicyIdNameMap,\n    policyIdNameMap,\n    policyRuleIDNameMap,\n    configSetIdNameMap,\n  }\n}\n\n/**\n * Global method used to build columns definitions as expected by the grid\n * @param {Object} gridColumns - array of grid columns as defined above: { all: [], hidden: [], renamed: [] }\n * @param {Object} boxSettings - the box settings\n * @returns {Array} - the `column-defs` prop for the grid\n */\nconst buildColumnDefs = (gridColumns, boxSettings) => {\n  const defs = []\n  const all = gridColumns.all\n  const hidden = gridColumns.hidden\n  const renamed = gridColumns.renamed\n\n  // get the id/name mappings from box settings\n  const idNameMappings = boxIdNameMappings(boxSettings)\n\n  all.forEach(field => {\n    if (!columns[field]) return\n\n    const col = {\n      // data field\n      field,\n      // column header\n      headerName: renamed?.[field] ? i18n.t(renamed[field]) : i18n.t(field),\n      // if it's hidden\n      hide: hidden?.includes(field),\n      flex: 1,\n      // any other static props from `columns`\n      ...columns[field],\n    }\n\n    // for fields requiring box data for rendering, set the proper valueRenderer\n    switch (field) {\n      case 'client_interface_id':\n        col.valueGetter = ({ data }) =>\n          renderer.interfaceName(data.client_interface_id, idNameMappings?.interfaceIdNameMap)\n        break\n      case 'server_interface_id':\n        col.valueGetter = ({ data }) =>\n          renderer.interfaceName(data.server_interface_id, idNameMappings?.interfaceIdNameMap)\n        break\n      case 'wan_rule_id':\n        col.valueGetter = ({ data }) => renderer.wanRule(data.wan_rule_id, idNameMappings?.wanRuleIdNameMap)\n        break\n      case 'wan_policy_id':\n        col.valueGetter = ({ data }) => renderer.wanPolicy(data.wan_policy_id, idNameMappings?.wanPolicyIdNameMap)\n        break\n      case 'time_stamp':\n        col.valueFormatter = ({ value }) => renderer.timeStamp(value)\n        break\n      case 'policy_id':\n        col.valueGetter = ({ data }) => renderer.policyName(data.policy_id, idNameMappings?.policyIdNameMap)\n        break\n      case 'rule_id':\n        col.autoHeight = true\n        col.cellRenderer = ({ data }) =>\n          renderer.ruleName(data.rule_id.split('|'), idNameMappings?.policyRuleIDNameMap).join(`<br>`)\n        break\n      case 'config_set_id':\n        col.valueGetter = ({ data }) => renderer.configName(data.config_set_id, idNameMappings?.configSetIdNameMap)\n        break\n    }\n    defs.push(col)\n  })\n\n  return defs\n}\n\nexport default { gridColumns, buildColumnDefs }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}