{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { SettingsDns } from 'vuntangle';\nimport transform from '@/util/transform';\nexport default {\n  components: {\n    SettingsDns: SettingsDns\n  },\n  computed: {\n    dnsSettings: function dnsSettings() {\n      return transform.dns.get();\n    }\n  },\n  methods: {\n    onSaveSettings: function onSaveSettings(newDnsSettings) {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$store.dispatch('settings/saveNetworkSettings', transform.dns.set(newDnsSettings));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["SettingsDns","transform","components","computed","dnsSettings","dns","get","methods","onSaveSettings","newDnsSettings","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","dispatch","set","stop"],"sources":["src/ngfw/NgfwDns.vue"],"sourcesContent":["<template>\n  <settings-dns ref=\"dns\" :settings=\"dnsSettings\">\n    <template #actions=\"{ newSettings, isDirty }\">\n      <u-btn :min-width=\"null\" :disabled=\"!isDirty\" @click=\"onSaveSettings(newSettings)\">{{ $t('save123') }}</u-btn>\n      <u-btn :min-width=\"null\" :disabled=\"!isDirty\" @click=\"onSaveSettings(newSettings)\">{{ $t('save') }}</u-btn>\n    </template>\n  </settings-dns>\n</template>\n<script>\n  import { SettingsDns } from 'vuntangle'\n  import transform from '@/util/transform'\n\n  export default {\n    components: { SettingsDns },\n\n    computed: {\n      dnsSettings: () => transform.dns.get(),\n    },\n\n    methods: {\n      async onSaveSettings(newDnsSettings) {\n        await this.$store.dispatch('settings/saveNetworkSettings', transform.dns.set(newDnsSettings))\n      },\n    },\n  }\n</script>\n"],"mappings":";;AASA,SAAAA,WAAA;AACA,OAAAC,SAAA;AAEA;EACAC,UAAA;IAAAF,WAAA,EAAAA;EAAA;EAEAG,QAAA;IACAC,WAAA,WAAAA,YAAA;MAAA,OAAAH,SAAA,CAAAI,GAAA,CAAAC,GAAA;IAAA;EACA;EAEAC,OAAA;IACAC,cAAA,WAAAA,eAAAC,cAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAT,KAAA,CAAAU,MAAA,CAAAC,QAAA,iCAAApB,SAAA,CAAAI,GAAA,CAAAiB,GAAA,CAAAb,cAAA;YAAA;YAAA;cAAA,OAAAQ,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}