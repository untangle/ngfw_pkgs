{"ast":null,"code":"import _slicedToArray from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { VCheckbox, VSelect } from 'vuetify/lib';\nimport ReportGrid from '../components/ReportGrid.vue';\nimport viewsMixin from './viewsMixin';\nexport default {\n  components: {\n    VCheckbox: VCheckbox,\n    VSelect: VSelect,\n    ReportGrid: ReportGrid\n  },\n  mixins: [viewsMixin],\n  data: function data() {\n    return {\n      fetching: true,\n      conditions: {\n        web_filter_blocked: false,\n        web_filter_flagged: false,\n        web_filter_reason: null\n      }\n    };\n  },\n  computed: {\n    /**\n     * Returns the select items used to choose Web Filter reason for an action\n     * @param {Object} vm\n     * @param {Object} vm.$i18n - localization engine\n     * @returns {Array}\n     */\n    reasonItems: function reasonItems(_ref) {\n      var $i18n = _ref.$i18n;\n      return [{\n        text: $i18n.t('block_category'),\n        value: 1\n      }, {\n        text: $i18n.t('block_list'),\n        value: 2\n      }, {\n        text: $i18n.t('pass_category'),\n        value: 0\n      }, {\n        text: $i18n.t('pass_list'),\n        value: 3\n      }, {\n        text: $i18n.t('all'),\n        value: null\n      }];\n    },\n    /**\n     * Builds up custom report query conditions based on filtering options\n     * @param {Object} vm\n     * @param {Object} vm.conditions - the filtering options\n     * @returns {Array<QueryCondition>}\n     */\n    queryConditions: function queryConditions(_ref2) {\n      var conditions = _ref2.conditions;\n      // get only the web traffic\n      var list = [{\n        column: 'web_filter_hostname',\n        operator: 'NE',\n        value: ''\n      }];\n      Object.entries(conditions).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n        if (value || value === 0) {\n          list.push({\n            column: key,\n            operator: 'EQ',\n            value: value\n          });\n        }\n      });\n      return list;\n    }\n  }\n};","map":{"version":3,"names":["VCheckbox","VSelect","ReportGrid","viewsMixin","components","mixins","data","fetching","conditions","web_filter_blocked","web_filter_flagged","web_filter_reason","computed","reasonItems","_ref","$i18n","text","t","value","queryConditions","_ref2","list","column","operator","Object","entries","forEach","_ref3","_ref4","_slicedToArray","key","push"],"sources":["node_modules/vuntangle/src/shared/Reports/views/WebFilterVisitedSites.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex flex-column flex-grow-1\">\n    <div class=\"d-flex align-center my-2\">\n      <v-checkbox\n        v-model=\"conditions.web_filter_blocked\"\n        :label=\"$vuntangle.$t('blocked')\"\n        class=\"pa-0 my-0 mr-4\"\n        hide-details\n      />\n      <v-checkbox\n        v-model=\"conditions.web_filter_flagged\"\n        :label=\"$vuntangle.$t('flagged')\"\n        class=\"pa-0 my-0 mr-4\"\n        hide-details\n      />\n      <div>\n        <v-select\n          v-model=\"conditions.web_filter_reason\"\n          :items=\"reasonItems\"\n          :label=\"$vuntangle.$t('reason')\"\n          :menu-props=\"{ offsetY: true, dense: true }\"\n          outlined\n          dense\n          hide-details\n        />\n      </div>\n    </div>\n\n    <report-grid :report=\"reports[0]\" :custom-conditions=\"queryConditions\" v-on=\"$listeners\" />\n  </div>\n</template>\n<script>\n  import { VCheckbox, VSelect } from 'vuetify/lib'\n  import ReportGrid from '../components/ReportGrid.vue'\n  import viewsMixin from './viewsMixin'\n\n  export default {\n    components: { VCheckbox, VSelect, ReportGrid },\n    mixins: [viewsMixin],\n\n    data() {\n      return {\n        fetching: true,\n        conditions: {\n          web_filter_blocked: false,\n          web_filter_flagged: false,\n          web_filter_reason: null,\n        },\n      }\n    },\n\n    computed: {\n      /**\n       * Returns the select items used to choose Web Filter reason for an action\n       * @param {Object} vm\n       * @param {Object} vm.$i18n - localization engine\n       * @returns {Array}\n       */\n      reasonItems: ({ $i18n }) => [\n        { text: $i18n.t('block_category'), value: 1 },\n        { text: $i18n.t('block_list'), value: 2 },\n        { text: $i18n.t('pass_category'), value: 0 },\n        { text: $i18n.t('pass_list'), value: 3 },\n        { text: $i18n.t('all'), value: null },\n      ],\n\n      /**\n       * Builds up custom report query conditions based on filtering options\n       * @param {Object} vm\n       * @param {Object} vm.conditions - the filtering options\n       * @returns {Array<QueryCondition>}\n       */\n      queryConditions: ({ conditions }) => {\n        // get only the web traffic\n        const list = [\n          {\n            column: 'web_filter_hostname',\n            operator: 'NE',\n            value: '',\n          },\n        ]\n\n        Object.entries(conditions).forEach(([key, value]) => {\n          if (value || value === 0) {\n            list.push({\n              column: key,\n              operator: 'EQ',\n              value,\n            })\n          }\n        })\n\n        return list\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;;AAgCA,SAAAA,SAAA,EAAAC,OAAA;AACA,OAAAC,UAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IAAAJ,SAAA,EAAAA,SAAA;IAAAC,OAAA,EAAAA,OAAA;IAAAC,UAAA,EAAAA;EAAA;EACAG,MAAA,GAAAF,UAAA;EAEAG,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;QACAC,kBAAA;QACAC,kBAAA;QACAC,iBAAA;MACA;IACA;EACA;EAEAC,QAAA;IACA;AACA;AACA;AACA;AACA;AACA;IACAC,WAAA,WAAAA,YAAAC,IAAA;MAAA,IAAAC,KAAA,GAAAD,IAAA,CAAAC,KAAA;MAAA,QACA;QAAAC,IAAA,EAAAD,KAAA,CAAAE,CAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA,EAAAD,KAAA,CAAAE,CAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA,EAAAD,KAAA,CAAAE,CAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA,EAAAD,KAAA,CAAAE,CAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA,EAAAD,KAAA,CAAAE,CAAA;QAAAC,KAAA;MAAA,EACA;IAAA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAC,eAAA,WAAAA,gBAAAC,KAAA;MAAA,IAAAZ,UAAA,GAAAY,KAAA,CAAAZ,UAAA;MACA;MACA,IAAAa,IAAA,IACA;QACAC,MAAA;QACAC,QAAA;QACAL,KAAA;MACA,EACA;MAEAM,MAAA,CAAAC,OAAA,CAAAjB,UAAA,EAAAkB,OAAA,WAAAC,KAAA;QAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;UAAAG,GAAA,GAAAF,KAAA;UAAAV,KAAA,GAAAU,KAAA;QACA,IAAAV,KAAA,IAAAA,KAAA;UACAG,IAAA,CAAAU,IAAA;YACAT,MAAA,EAAAQ,GAAA;YACAP,QAAA;YACAL,KAAA,EAAAA;UACA;QACA;MACA;MAEA,OAAAG,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}