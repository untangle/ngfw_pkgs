{"ast":null,"code":"import _objectSpread from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport { VDialog, VCard, VCardTitle, VSpacer, VBtn, VIcon, VCardActions, VOverlay, VProgressCircular } from 'vuetify/lib';\nexport default {\n  components: {\n    VDialog: VDialog,\n    VCard: VCard,\n    VCardTitle: VCardTitle,\n    VSpacer: VSpacer,\n    VBtn: VBtn,\n    VIcon: VIcon,\n    VCardActions: VCardActions,\n    VOverlay: VOverlay,\n    VProgressCircular: VProgressCircular\n  },\n  data: function data() {\n    return {\n      title: null,\n      component: null,\n      componentProps: null,\n      componentEvents: null,\n      buttons: null,\n      actionLabel: null,\n      cancelLabel: null,\n      width: null,\n      height: null,\n      progress: false,\n      actionEnabled: true,\n      edge: false // whether to use the `dialog-edge` class defined in style below\n    };\n  },\n  computed: {\n    // returns a boolean showing/hiding the dialog if component is set\n    displayDialog: function displayDialog() {\n      return this.component !== null;\n    }\n  },\n  created: function created() {\n    this.$vuntangle.vm.$on('show-dialog', this.show);\n  },\n  methods: {\n    show: function show(options) {\n      Object.assign(this, _objectSpread({}, options));\n    },\n    /**\n     * Hides and resets the dialog data\n     */\n    onClose: function onClose() {\n      this.$emit('close'); // this notifies dialog opener about closing\n\n      this.title = null;\n      this.component = null;\n      this.componentProps = null;\n      this.buttons = null;\n      this.cancelLabel = null;\n      this.actionLabel = null;\n      this.width = null;\n      this.progress = false;\n      this.edge = null;\n      this.$off('close');\n    },\n    onAction: function onAction() {\n      if (!this.actionEnabled) return;\n      // the inner content component must implement \"action\" method\n      this.$refs.content.action();\n    },\n    onButtonClick: function onButtonClick(handler) {\n      // bind 'this' to this component, can use arrow function to get the caller 'this'\n      var bindThis = handler.bind(this);\n      bindThis();\n    }\n  }\n};","map":{"version":3,"names":["VDialog","VCard","VCardTitle","VSpacer","VBtn","VIcon","VCardActions","VOverlay","VProgressCircular","components","data","title","component","componentProps","componentEvents","buttons","actionLabel","cancelLabel","width","height","progress","actionEnabled","edge","computed","displayDialog","created","$vuntangle","vm","$on","show","methods","options","Object","assign","_objectSpread","onClose","$emit","$off","onAction","$refs","content","action","onButtonClick","handler","bindThis","bind"],"sources":["node_modules/vuntangle/src/framework/UDialog/UDialog.vue"],"sourcesContent":["<template>\n  <v-dialog\n    v-model=\"displayDialog\"\n    :transition=\"false\"\n    persistent\n    :width=\"width || 600\"\n    :content-class=\"edge ? 'dialog-edge' : ''\"\n    @keydown.esc=\"onClose\"\n    @keydown.enter=\"onAction\"\n  >\n    <v-card class=\"d-flex flex-column fill-height\">\n      <v-card-title class=\"text-h5 font-weight-light px-4\">\n        <span v-html=\"title\"></span>\n        <v-spacer />\n        <v-btn :small=\"false\" icon color=\"grey\" @click=\"onClose\"><v-icon>mdi-close</v-icon></v-btn>\n      </v-card-title>\n      <!-- the component being rendered inside dialog with the props passed to it -->\n      <div v-if=\"component\" :style=\"`max-height: ${height || 400}px; overflow-y: auto`\" class=\"flex-grow-1 px-4 py-2\">\n        <component\n          :is=\"component\"\n          ref=\"content\"\n          v-bind=\"componentProps\"\n          v-on=\"componentEvents\"\n          @progress-show=\"progress = true\"\n          @progress-hide=\"progress = false\"\n          @action-enabled=\"enabled => (actionEnabled = enabled)\"\n          @close=\"onClose\"\n        />\n      </div>\n      <v-card-actions class=\"px-4 pb-4\">\n        <v-spacer />\n        <template v-if=\"buttons\">\n          <u-btn\n            v-for=\"button in buttons\"\n            :key=\"button.name\"\n            :small=\"false\"\n            :text=\"button.text\"\n            @click=\"onButtonClick(button.handler)\"\n          >\n            {{ button.name }}\n          </u-btn>\n        </template>\n        <template v-else>\n          <u-btn :small=\"false\" text :min-width=\"80\" class=\"px-4 mr-2\" @click=\"onClose\" @keydown.enter.stop>\n            {{ cancelLabel || $t('cancel') }}\n          </u-btn>\n          <u-btn\n            :disabled=\"!actionEnabled\"\n            :small=\"false\"\n            :min-width=\"80\"\n            class=\"px-4\"\n            elevation=\"0\"\n            @click=\"onAction\"\n            @keydown.enter.stop\n          >\n            {{ actionLabel || $t('ok') }}\n          </u-btn>\n        </template>\n      </v-card-actions>\n      <v-overlay v-if=\"progress\" absolute>\n        <v-progress-circular indeterminate color=\"primary\" />\n      </v-overlay>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\n  import {\n    VDialog,\n    VCard,\n    VCardTitle,\n    VSpacer,\n    VBtn,\n    VIcon,\n    VCardActions,\n    VOverlay,\n    VProgressCircular,\n  } from 'vuetify/lib'\n\n  export default {\n    components: { VDialog, VCard, VCardTitle, VSpacer, VBtn, VIcon, VCardActions, VOverlay, VProgressCircular },\n    data() {\n      return {\n        title: null,\n        component: null,\n        componentProps: null,\n        componentEvents: null,\n        buttons: null,\n        actionLabel: null,\n        cancelLabel: null,\n        width: null,\n        height: null,\n        progress: false,\n        actionEnabled: true,\n        edge: false, // whether to use the `dialog-edge` class defined in style below\n      }\n    },\n    computed: {\n      // returns a boolean showing/hiding the dialog if component is set\n      displayDialog() {\n        return this.component !== null\n      },\n    },\n    created() {\n      this.$vuntangle.vm.$on('show-dialog', this.show)\n    },\n\n    methods: {\n      show(options) {\n        Object.assign(this, { ...options })\n      },\n      /**\n       * Hides and resets the dialog data\n       */\n      onClose() {\n        this.$emit('close') // this notifies dialog opener about closing\n\n        this.title = null\n        this.component = null\n        this.componentProps = null\n        this.buttons = null\n        this.cancelLabel = null\n        this.actionLabel = null\n        this.width = null\n        this.progress = false\n        this.edge = null\n\n        this.$off('close')\n      },\n\n      onAction() {\n        if (!this.actionEnabled) return\n        // the inner content component must implement \"action\" method\n        this.$refs.content.action()\n      },\n      onButtonClick(handler) {\n        // bind 'this' to this component, can use arrow function to get the caller 'this'\n        const bindThis = handler.bind(this)\n        bindThis()\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  // show a 90% visible height of the window height\n  .dialog-edge {\n    height: 90vh;\n  }\n</style>\n"],"mappings":";;AAmEA,SACAA,OAAA,EACAC,KAAA,EACAC,UAAA,EACAC,OAAA,EACAC,IAAA,EACAC,KAAA,EACAC,YAAA,EACAC,QAAA,EACAC,iBAAA,QACA;AAEA;EACAC,UAAA;IAAAT,OAAA,EAAAA,OAAA;IAAAC,KAAA,EAAAA,KAAA;IAAAC,UAAA,EAAAA,UAAA;IAAAC,OAAA,EAAAA,OAAA;IAAAC,IAAA,EAAAA,IAAA;IAAAC,KAAA,EAAAA,KAAA;IAAAC,YAAA,EAAAA,YAAA;IAAAC,QAAA,EAAAA,QAAA;IAAAC,iBAAA,EAAAA;EAAA;EACAE,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,SAAA;MACAC,cAAA;MACAC,eAAA;MACAC,OAAA;MACAC,WAAA;MACAC,WAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,aAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,aAAA,WAAAA,cAAA;MACA,YAAAZ,SAAA;IACA;EACA;EACAa,OAAA,WAAAA,QAAA;IACA,KAAAC,UAAA,CAAAC,EAAA,CAAAC,GAAA,qBAAAC,IAAA;EACA;EAEAC,OAAA;IACAD,IAAA,WAAAA,KAAAE,OAAA;MACAC,MAAA,CAAAC,MAAA,OAAAC,aAAA,KAAAH,OAAA;IACA;IACA;AACA;AACA;IACAI,OAAA,WAAAA,QAAA;MACA,KAAAC,KAAA;;MAEA,KAAAzB,KAAA;MACA,KAAAC,SAAA;MACA,KAAAC,cAAA;MACA,KAAAE,OAAA;MACA,KAAAE,WAAA;MACA,KAAAD,WAAA;MACA,KAAAE,KAAA;MACA,KAAAE,QAAA;MACA,KAAAE,IAAA;MAEA,KAAAe,IAAA;IACA;IAEAC,QAAA,WAAAA,SAAA;MACA,UAAAjB,aAAA;MACA;MACA,KAAAkB,KAAA,CAAAC,OAAA,CAAAC,MAAA;IACA;IACAC,aAAA,WAAAA,cAAAC,OAAA;MACA;MACA,IAAAC,QAAA,GAAAD,OAAA,CAAAE,IAAA;MACAD,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}