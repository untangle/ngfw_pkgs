{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { VContainer, VSpacer, VDivider, VSwitch, VTooltip } from 'vuetify/lib';\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\nimport InvalidSettings from '../InvalidSettings/Main.vue';\nimport settingsMixin from '../settingsMixin';\nimport AutoInterval from './AutoInterval.vue';\nimport defaults from './defaults';\nimport schema from './schema';\nexport default {\n  components: {\n    VContainer: VContainer,\n    VSpacer: VSpacer,\n    VDivider: VDivider,\n    VSwitch: VSwitch,\n    VTooltip: VTooltip,\n    ValidationObserver: ValidationObserver,\n    ValidationProvider: ValidationProvider,\n    AutoInterval: AutoInterval,\n    InvalidSettings: InvalidSettings\n  },\n  mixins: [settingsMixin],\n  inheritAttrs: false,\n  schema: schema,\n  defaults: defaults,\n  methods: {\n    // method called from parent component upon save to validate input data\n    validate: function validate() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var isValid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$refs.obs.validate();\n            case 2:\n              isValid = _context.sent;\n              return _context.abrupt(\"return\", isValid);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["VContainer","VSpacer","VDivider","VSwitch","VTooltip","ValidationObserver","ValidationProvider","InvalidSettings","settingsMixin","AutoInterval","defaults","schema","components","mixins","inheritAttrs","methods","validate","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isValid","wrap","_callee$","_context","prev","next","$refs","obs","sent","abrupt","stop"],"sources":["node_modules/vuntangle/src/shared/SettingsNetworkDiscovery/Main.vue"],"sourcesContent":["<template>\n  <v-container\n    :fluid=\"classicView ? true : false\"\n    :class=\"`${classicView ? 'pa-4 ' : ''}shared-cmp ${disabled ? 'disabled' : ''}`\"\n  >\n    <ValidationObserver ref=\"obs\" v-slot=\"{ valid }\">\n      <div class=\"d-flex align-center\">\n        <h1 v-if=\"classicView\" class=\"headline\">{{ $t('network_discovery') }}</h1>\n        <h2 v-else class=\"font-weight-light\">{{ $t('network_discovery') }}</h2>\n        <v-spacer />\n        <slot\n          name=\"actions\"\n          :new-settings=\"settingsCopy\"\n          :is-valid=\"valid\"\n          :is-dirty=\"isDirty\"\n          :defaults=\"$options.defaults\"\n        />\n      </div>\n\n      <v-divider class=\"my-2\" />\n      <u-section v-if=\"!!$slots['extra-fields']\">\n        <slot name=\"extra-fields\" />\n      </u-section>\n      <component :is=\"!$slots['extra-fields'] ? 'div' : 'u-section'\">\n        <div class=\"body-2 mt-4\">\n          <!-- Enable/Disable toggle (hidden if not licensed) -->\n          <v-switch\n            v-model=\"settingsCopy.enabled\"\n            :disabled=\"disabled\"\n            class=\"body-2 mb-4\"\n            dense\n            inset\n            hide-details\n            :label=\"$t('toggle_network_discovery', [settingsCopy.enabled ? $t('enabled') : $t('disabled')])\"\n          />\n        </div>\n\n        <h3 class=\"mt-4\">{{ $t('plugins') }}</h3>\n        <p class=\"text--secondary\">\n          {{ $t('network_discovery_plugins') }}\n        </p>\n\n        <div class=\"mt-4\">\n          <div v-for=\"(plugin, idx) in settingsCopy.plugins\" :key=\"idx\">\n            <div class=\"d-flex align-center my-6\" style=\"align-items: center\">\n              <v-tooltip bottom>\n                <template #activator=\"{ on }\">\n                  <div style=\"width: 160px\" v-on=\"on\">\n                    <ValidationProvider rules=\"required\" class=\"d-flex align-center\">\n                      <v-switch\n                        v-model=\"plugin.enabled\"\n                        :label=\"$t(`collector_${plugin.type}`)\"\n                        hide-details\n                        inset\n                        dense\n                        :disabled=\"disabled || !settingsCopy.enabled\"\n                        class=\"my-0 py-0\"\n                      />\n                    </ValidationProvider>\n                  </div>\n                </template>\n                <span>{{ $t(`collector_${plugin.type}_tooltip`) }}</span>\n              </v-tooltip>\n              <auto-interval\n                v-model=\"plugin.autoInterval\"\n                :disabled=\"!plugin.enabled || !settingsCopy.enabled\"\n                class=\"flex-grow-0 mr-2\"\n              />\n              <u-btn\n                v-if=\"!features.isTemplateView\"\n                :small=\"false\"\n                :disabled=\"disabled || !plugin.enabled || !settingsCopy.enabled\"\n                :min-width=\"null\"\n                @click=\"$emit('run-collector', plugin.type)\"\n              >\n                {{ $t('run_sync') }}\n              </u-btn>\n            </div>\n          </div>\n        </div>\n      </component>\n    </ValidationObserver>\n    <invalid-settings\n      v-if=\"invalidSettingsErrors\"\n      service=\"Network Discovery\"\n      :settings=\"settings\"\n      :schema=\"$options.schema\"\n      :errors.sync=\"invalidSettingsErrors\"\n    />\n  </v-container>\n</template>\n<script>\n  import { VContainer, VSpacer, VDivider, VSwitch, VTooltip } from 'vuetify/lib'\n  import { ValidationObserver, ValidationProvider } from 'vee-validate'\n  import InvalidSettings from '../InvalidSettings/Main.vue'\n  import settingsMixin from '../settingsMixin'\n  import AutoInterval from './AutoInterval.vue'\n\n  import defaults from './defaults'\n  import schema from './schema'\n\n  export default {\n    components: {\n      VContainer,\n      VSpacer,\n      VDivider,\n      VSwitch,\n      VTooltip,\n      ValidationObserver,\n      ValidationProvider,\n\n      AutoInterval,\n      InvalidSettings,\n    },\n    mixins: [settingsMixin],\n    inheritAttrs: false,\n    schema,\n    defaults,\n    methods: {\n      // method called from parent component upon save to validate input data\n      async validate() {\n        const isValid = await this.$refs.obs.validate()\n        return isValid\n      },\n    },\n  }\n</script>\n"],"mappings":";;AA4FA,SAAAA,UAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,OAAA,EAAAC,QAAA;AACA,SAAAC,kBAAA,EAAAC,kBAAA;AACA,OAAAC,eAAA;AACA,OAAAC,aAAA;AACA,OAAAC,YAAA;AAEA,OAAAC,QAAA;AACA,OAAAC,MAAA;AAEA;EACAC,UAAA;IACAZ,UAAA,EAAAA,UAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,kBAAA,EAAAA,kBAAA;IACAC,kBAAA,EAAAA,kBAAA;IAEAG,YAAA,EAAAA,YAAA;IACAF,eAAA,EAAAA;EACA;EACAM,MAAA,GAAAL,aAAA;EACAM,YAAA;EACAH,MAAA,EAAAA,MAAA;EACAD,QAAA,EAAAA,QAAA;EACAK,OAAA;IACA;IACAC,QAAA,WAAAA,SAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,OAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAV,KAAA,CAAAW,KAAA,CAAAC,GAAA,CAAAb,QAAA;YAAA;cAAAM,OAAA,GAAAG,QAAA,CAAAK,IAAA;cAAA,OAAAL,QAAA,CAAAM,MAAA,WACAT,OAAA;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAX,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}