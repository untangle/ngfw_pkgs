{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { VContainer, VSpacer, VDivider, VRow, VCol, VCheckbox, VBtn, VIcon } from 'vuetify/lib';\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\nimport settingsMixin from '../settingsMixin';\nimport UTextField from '../../components/UTextField';\nimport UTextArea from '../../components/UTextArea';\nimport { AddDefaults } from './defaults';\nexport default {\n  components: {\n    UTextField: UTextField,\n    UTextArea: UTextArea,\n    VContainer: VContainer,\n    VSpacer: VSpacer,\n    VDivider: VDivider,\n    VRow: VRow,\n    VCol: VCol,\n    VCheckbox: VCheckbox,\n    VBtn: VBtn,\n    VIcon: VIcon,\n    ValidationObserver: ValidationObserver,\n    ValidationProvider: ValidationProvider\n  },\n  mixins: [settingsMixin],\n  defaults: AddDefaults,\n  props: {\n    // settings, settingsCopy from mixin\n    interfaces: {\n      type: Array,\n      \"default\": null\n    },\n    index: {\n      type: Number,\n      \"default\": undefined\n    },\n    // names used for unique validation\n    existingNames: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    ipv4Addresses: {\n      get: function get(_ref) {\n        var settingsCopy = _ref.settingsCopy;\n        return settingsCopy.ipv4Addresses.join(', ');\n      },\n      set: function set(value) {\n        this.settingsCopy.ipv4Addresses = value.split(',').map(function (item) {\n          return item.trim();\n        });\n      }\n    },\n    ipv6Addresses: {\n      get: function get(_ref2) {\n        var settingsCopy = _ref2.settingsCopy;\n        return settingsCopy.ipv6Addresses.join(', ');\n      },\n      set: function set(value) {\n        this.settingsCopy.ipv6Addresses = value.split(',').map(function (item) {\n          return item.trim();\n        });\n      }\n    },\n    filteredInterfaces: function filteredInterfaces() {\n      return this.interfaces.filter(function (intf) {\n        return intf.enabled && intf.wan;\n      });\n    }\n  },\n  methods: {\n    // Dialog main action emitting updated settings\n    action: function action() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var isValid;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$refs.obs.validate();\n            case 2:\n              isValid = _context.sent;\n              if (isValid) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 5:\n              _this.$emit('update', _this.settingsCopy, _this.index);\n              _this.$emit('close');\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["VContainer","VSpacer","VDivider","VRow","VCol","VCheckbox","VBtn","VIcon","ValidationObserver","ValidationProvider","settingsMixin","UTextField","UTextArea","AddDefaults","components","mixins","defaults","props","interfaces","type","Array","index","Number","undefined","existingNames","default","computed","ipv4Addresses","get","_ref","settingsCopy","join","set","value","split","map","item","trim","ipv6Addresses","_ref2","filteredInterfaces","filter","intf","enabled","wan","methods","action","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isValid","wrap","_callee$","_context","prev","next","$refs","obs","validate","sent","abrupt","$emit","stop"],"sources":["node_modules/vuntangle/src/shared/StatusAnalyzers/PingAnalyzerEdit.vue"],"sourcesContent":["<template>\n  <v-container>\n    <ValidationObserver ref=\"obs\">\n      <component :is=\"!classicView ? 'div' : 'u-section'\">\n        <v-row v-if=\"!classicView\">\n          <v-col>\n            <ValidationProvider\n              v-slot=\"{ errors }\"\n              :rules=\"{\n                required: true,\n                unique_insensitive: { list: existingNames, message: $t('name_already_used') },\n              }\"\n            >\n              <u-text-field v-model=\"settingsCopy.name\" :label=\"$vuntangle.$t('name')\" :error-messages=\"errors\">\n                <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n              </u-text-field>\n            </ValidationProvider>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"3\">\n            <v-checkbox v-model=\"settingsCopy.enabled\" :label=\"$vuntangle.$t('enabled')\" hide-details class=\"ma-0\" />\n          </v-col>\n        </v-row>\n        <v-row v-if=\"!features.isTemplateView\" class=\"align-center\">\n          <v-col class=\"d-flex flex-row align-center\">\n            <div class=\"mr-4 font-weight-bold\">Select WANs:</div>\n            <v-checkbox\n              v-for=\"intf in filteredInterfaces\"\n              :key=\"intf.interfaceId\"\n              v-model=\"settingsCopy.interfaceIds\"\n              :label=\"intf.name\"\n              :value=\"intf.interfaceId\"\n              class=\"ma-0 mr-4 pa-0\"\n              hide-details\n            />\n          </v-col>\n        </v-row>\n\n        <v-row class=\"mt-4 align-center\">\n          <v-col>\n            <ValidationProvider v-slot=\"{ errors }\" :rules=\"{ required: true, ip: { multiple: true } }\">\n              <u-text-field\n                v-model=\"ipv4Addresses\"\n                :error-messages=\"errors\"\n                :label=\"$vuntangle.$t('ipv4_addresses')\"\n                :hint=\"$vuntangle.$t('comma_separated_ips')\"\n                :hide-details=\"false\"\n                persistent-hint\n              >\n                <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n              </u-text-field>\n            </ValidationProvider>\n          </v-col>\n        </v-row>\n\n        <v-row class=\"mt-4 align-center\">\n          <v-col>\n            <ValidationProvider v-slot=\"{ errors }\" :rules=\"{ ip_v6: { multiple: true } }\">\n              <u-text-area\n                v-model=\"ipv6Addresses\"\n                :rows=\"3\"\n                :error-messages=\"errors\"\n                :label=\"$vuntangle.$t('ipv6_addresses')\"\n                :hint=\"$vuntangle.$t('comma_separated_ips')\"\n                :hide-details=\"false\"\n                persistent-hint\n              >\n                <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n              </u-text-area>\n            </ValidationProvider>\n          </v-col>\n        </v-row>\n      </component>\n    </ValidationObserver>\n  </v-container>\n</template>\n<script>\n  import { VContainer, VSpacer, VDivider, VRow, VCol, VCheckbox, VBtn, VIcon } from 'vuetify/lib'\n  import { ValidationObserver, ValidationProvider } from 'vee-validate'\n  import settingsMixin from '../settingsMixin'\n\n  import UTextField from '../../components/UTextField'\n  import UTextArea from '../../components/UTextArea'\n\n  import { AddDefaults } from './defaults'\n\n  export default {\n    components: {\n      UTextField,\n      UTextArea,\n      VContainer,\n      VSpacer,\n      VDivider,\n      VRow,\n      VCol,\n      VCheckbox,\n      VBtn,\n      VIcon,\n      ValidationObserver,\n      ValidationProvider,\n    },\n    mixins: [settingsMixin],\n    defaults: AddDefaults,\n    props: {\n      // settings, settingsCopy from mixin\n      interfaces: { type: Array, default: null },\n      index: { type: Number, default: undefined },\n      // names used for unique validation\n      existingNames: { type: Array, default: () => [] },\n    },\n    computed: {\n      ipv4Addresses: {\n        get: ({ settingsCopy }) => settingsCopy.ipv4Addresses.join(', '),\n        set(value) {\n          this.settingsCopy.ipv4Addresses = value.split(',').map(item => item.trim())\n        },\n      },\n      ipv6Addresses: {\n        get: ({ settingsCopy }) => settingsCopy.ipv6Addresses.join(', '),\n        set(value) {\n          this.settingsCopy.ipv6Addresses = value.split(',').map(item => item.trim())\n        },\n      },\n      filteredInterfaces() {\n        return this.interfaces.filter(intf => intf.enabled && intf.wan)\n      },\n    },\n    methods: {\n      // Dialog main action emitting updated settings\n      async action() {\n        const isValid = await this.$refs.obs.validate()\n        if (!isValid) return\n\n        this.$emit('update', this.settingsCopy, this.index)\n        this.$emit('close')\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;;;;;AA8EA,SAAAA,UAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,SAAA,EAAAC,IAAA,EAAAC,KAAA;AACA,SAAAC,kBAAA,EAAAC,kBAAA;AACA,OAAAC,aAAA;AAEA,OAAAC,UAAA;AACA,OAAAC,SAAA;AAEA,SAAAC,WAAA;AAEA;EACAC,UAAA;IACAH,UAAA,EAAAA,UAAA;IACAC,SAAA,EAAAA,SAAA;IACAZ,UAAA,EAAAA,UAAA;IACAC,OAAA,EAAAA,OAAA;IACAC,QAAA,EAAAA,QAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,SAAA,EAAAA,SAAA;IACAC,IAAA,EAAAA,IAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,kBAAA,EAAAA,kBAAA;IACAC,kBAAA,EAAAA;EACA;EACAM,MAAA,GAAAL,aAAA;EACAM,QAAA,EAAAH,WAAA;EACAI,KAAA;IACA;IACAC,UAAA;MAAAC,IAAA,EAAAC,KAAA;MAAA;IAAA;IACAC,KAAA;MAAAF,IAAA,EAAAG,MAAA;MAAA,WAAAC;IAAA;IACA;IACAC,aAAA;MAAAL,IAAA,EAAAC,KAAA;MAAA,oBAAAK,SAAA;QAAA;MAAA;IAAA;EACA;EACAC,QAAA;IACAC,aAAA;MACAC,GAAA,WAAAA,IAAAC,IAAA;QAAA,IAAAC,YAAA,GAAAD,IAAA,CAAAC,YAAA;QAAA,OAAAA,YAAA,CAAAH,aAAA,CAAAI,IAAA;MAAA;MACAC,GAAA,WAAAA,IAAAC,KAAA;QACA,KAAAH,YAAA,CAAAH,aAAA,GAAAM,KAAA,CAAAC,KAAA,MAAAC,GAAA,WAAAC,IAAA;UAAA,OAAAA,IAAA,CAAAC,IAAA;QAAA;MACA;IACA;IACAC,aAAA;MACAV,GAAA,WAAAA,IAAAW,KAAA;QAAA,IAAAT,YAAA,GAAAS,KAAA,CAAAT,YAAA;QAAA,OAAAA,YAAA,CAAAQ,aAAA,CAAAP,IAAA;MAAA;MACAC,GAAA,WAAAA,IAAAC,KAAA;QACA,KAAAH,YAAA,CAAAQ,aAAA,GAAAL,KAAA,CAAAC,KAAA,MAAAC,GAAA,WAAAC,IAAA;UAAA,OAAAA,IAAA,CAAAC,IAAA;QAAA;MACA;IACA;IACAG,kBAAA,WAAAA,mBAAA;MACA,YAAAtB,UAAA,CAAAuB,MAAA,WAAAC,IAAA;QAAA,OAAAA,IAAA,CAAAC,OAAA,IAAAD,IAAA,CAAAE,GAAA;MAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,MAAA,WAAAA,OAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,OAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAV,KAAA,CAAAW,KAAA,CAAAC,GAAA,CAAAC,QAAA;YAAA;cAAAR,OAAA,GAAAG,QAAA,CAAAM,IAAA;cAAA,IACAT,OAAA;gBAAAG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAO,MAAA;YAAA;cAEAf,KAAA,CAAAgB,KAAA,WAAAhB,KAAA,CAAAjB,YAAA,EAAAiB,KAAA,CAAA1B,KAAA;cACA0B,KAAA,CAAAgB,KAAA;YAAA;YAAA;cAAA,OAAAR,QAAA,CAAAS,IAAA;UAAA;QAAA,GAAAb,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}