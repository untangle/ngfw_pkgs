{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  inject: ['$onManageStatusAnalyzers', '$pingAnalyzers'],\n  props: {\n    interfaceId: {\n      type: Number,\n      \"default\": undefined\n    }\n  },\n  computed: {\n    pingAnalyzers: function pingAnalyzers(_ref) {\n      var $pingAnalyzers = _ref.$pingAnalyzers;\n      return $pingAnalyzers();\n    },\n    /**\n     * Returns Status Analyzers associated with a given interface id\n     * @param {*} param\n     */\n    statusAnalyzers: function statusAnalyzers(_ref2) {\n      var interfaceId = _ref2.interfaceId,\n        pingAnalyzers = _ref2.pingAnalyzers;\n      if (!(pingAnalyzers !== null && pingAnalyzers !== void 0 && pingAnalyzers.length) || !interfaceId) return;\n      return pingAnalyzers.filter(function (item) {\n        return item.interfaceIds.includes(interfaceId);\n      });\n    }\n  }\n};","map":{"version":3,"names":["inject","props","interfaceId","type","Number","undefined","computed","pingAnalyzers","_ref","$pingAnalyzers","statusAnalyzers","_ref2","length","filter","item","interfaceIds","includes"],"sources":["node_modules/vuntangle/src/shared/SettingsInterface/components/ipsec/StatusAnalyzerInfo.vue"],"sourcesContent":["<template>\n  <div>\n    <p class=\"font-weight-bold mb-4\">{{ $t('status_analyzers') }}</p>\n    <div v-if=\"statusAnalyzers.length\">\n      <div v-for=\"(item, index) in statusAnalyzers\" :key=\"index\">\n        &bull; {{ item.name }} {{ !item.enabled ? ` (${$t('disabled')})` : '' }}\n      </div>\n    </div>\n    <div v-else>\n      <em>&bull; {{ $t('not_set') }}</em>\n    </div>\n    <u-btn class=\"mt-2\" @click=\"$onManageStatusAnalyzers\">{{ $t('manage') }}</u-btn>\n  </div>\n</template>\n<script>\n  export default {\n    inject: ['$onManageStatusAnalyzers', '$pingAnalyzers'],\n    props: {\n      interfaceId: { type: Number, default: undefined },\n    },\n    computed: {\n      pingAnalyzers: ({ $pingAnalyzers }) => $pingAnalyzers(),\n      /**\n       * Returns Status Analyzers associated with a given interface id\n       * @param {*} param\n       */\n      statusAnalyzers: ({ interfaceId, pingAnalyzers }) => {\n        if (!pingAnalyzers?.length || !interfaceId) return\n        return pingAnalyzers.filter(item => item.interfaceIds.includes(interfaceId))\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;AAeA;EACAA,MAAA;EACAC,KAAA;IACAC,WAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA,WAAAC;IAAA;EACA;EACAC,QAAA;IACAC,aAAA,WAAAA,cAAAC,IAAA;MAAA,IAAAC,cAAA,GAAAD,IAAA,CAAAC,cAAA;MAAA,OAAAA,cAAA;IAAA;IACA;AACA;AACA;AACA;IACAC,eAAA,WAAAA,gBAAAC,KAAA;MAAA,IAAAT,WAAA,GAAAS,KAAA,CAAAT,WAAA;QAAAK,aAAA,GAAAI,KAAA,CAAAJ,aAAA;MACA,MAAAA,aAAA,aAAAA,aAAA,eAAAA,aAAA,CAAAK,MAAA,MAAAV,WAAA;MACA,OAAAK,aAAA,CAAAM,MAAA,WAAAC,IAAA;QAAA,OAAAA,IAAA,CAAAC,YAAA,CAAAC,QAAA,CAAAd,WAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}