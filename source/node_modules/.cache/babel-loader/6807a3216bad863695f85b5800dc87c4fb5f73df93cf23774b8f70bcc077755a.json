{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport UToastMessage from './UToastMessage';\nexport default {\n  components: {\n    UToastMessage: UToastMessage\n  },\n  data: function data() {\n    return {\n      toastMessages: [],\n      // hold a unique ID for each toast message, this is used for removing\n      // the message\n      toastMessageId: 1\n    };\n  },\n  created: function created() {\n    this.$vuntangle.vm.$on('add-toast', this.addToast);\n    this.$vuntangle.vm.$on('clear-toasts', this.clearToasts);\n  },\n  methods: {\n    addToast: function addToast(_ref) {\n      var message = _ref.message,\n        type = _ref.type;\n      // errors do not get removed automatically, so do not display duplicate errors\n      if (type === 'error' && this.toastMessages.find(function (toastMessage) {\n        return toastMessage.message === message;\n      })) {\n        return;\n      }\n      this.toastMessages.push({\n        id: this.toastMessageId++,\n        message: message,\n        type: type\n      });\n    },\n    deleteToast: function deleteToast(id) {\n      var toastMessageIndex = this.toastMessages.findIndex(function (r) {\n        return r.id === id;\n      });\n      if (toastMessageIndex !== -1) {\n        this.toastMessages.splice(toastMessageIndex, 1);\n      }\n    },\n    clearToasts: function clearToasts() {\n      this.toastMessages = [];\n    }\n  }\n};","map":{"version":3,"names":["UToastMessage","components","data","toastMessages","toastMessageId","created","$vuntangle","vm","$on","addToast","clearToasts","methods","_ref","message","type","find","toastMessage","push","id","deleteToast","toastMessageIndex","findIndex","r","splice"],"sources":["node_modules/vuntangle/src/framework/UToast/UToast.vue"],"sourcesContent":["<template>\n  <transition-group name=\"fade\" tag=\"div\" class=\"toast-container\">\n    <u-toast-message\n      v-for=\"toastMessage in toastMessages\"\n      :id=\"toastMessage.id\"\n      :key=\"`toastMessage${toastMessage.id}`\"\n      :color=\"toastMessage.type\"\n      :timeout=\"toastMessage.type === 'error' ? -1 : 5000\"\n      :show-dialog=\"true\"\n      :text=\"toastMessage.message\"\n      @close-dialog=\"deleteToast\"\n    />\n  </transition-group>\n</template>\n<script>\n  import UToastMessage from './UToastMessage'\n\n  export default {\n    components: { UToastMessage },\n    data() {\n      return {\n        toastMessages: [],\n\n        // hold a unique ID for each toast message, this is used for removing\n        // the message\n        toastMessageId: 1,\n      }\n    },\n    created() {\n      this.$vuntangle.vm.$on('add-toast', this.addToast)\n      this.$vuntangle.vm.$on('clear-toasts', this.clearToasts)\n    },\n    methods: {\n      addToast({ message, type }) {\n        // errors do not get removed automatically, so do not display duplicate errors\n        if (type === 'error' && this.toastMessages.find(toastMessage => toastMessage.message === message)) {\n          return\n        }\n\n        this.toastMessages.push({ id: this.toastMessageId++, message, type })\n      },\n      deleteToast(id) {\n        const toastMessageIndex = this.toastMessages.findIndex(r => r.id === id)\n        if (toastMessageIndex !== -1) {\n          this.toastMessages.splice(toastMessageIndex, 1)\n        }\n      },\n      clearToasts() {\n        this.toastMessages = []\n      },\n    },\n  }\n</script>\n<style lang=\"scss\">\n  .toast-container {\n    z-index: 9999;\n    position: fixed;\n    top: 4px;\n    width: auto;\n    left: 0;\n    right: 0;\n\n    div {\n      position: relative !important;\n    }\n  }\n\n  .fade-enter-active,\n  .fade-leave-active {\n    transition: opacity 0.5s ease-out;\n  }\n\n  .fade-enter,\n  .fade-leave-to {\n    opacity: 0;\n  }\n</style>\n"],"mappings":";;;;;;;AAeA,OAAAA,aAAA;AAEA;EACAC,UAAA;IAAAD,aAAA,EAAAA;EAAA;EACAE,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA;MAEA;MACA;MACAC,cAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,UAAA,CAAAC,EAAA,CAAAC,GAAA,mBAAAC,QAAA;IACA,KAAAH,UAAA,CAAAC,EAAA,CAAAC,GAAA,sBAAAE,WAAA;EACA;EACAC,OAAA;IACAF,QAAA,WAAAA,SAAAG,IAAA;MAAA,IAAAC,OAAA,GAAAD,IAAA,CAAAC,OAAA;QAAAC,IAAA,GAAAF,IAAA,CAAAE,IAAA;MACA;MACA,IAAAA,IAAA,qBAAAX,aAAA,CAAAY,IAAA,WAAAC,YAAA;QAAA,OAAAA,YAAA,CAAAH,OAAA,KAAAA,OAAA;MAAA;QACA;MACA;MAEA,KAAAV,aAAA,CAAAc,IAAA;QAAAC,EAAA,OAAAd,cAAA;QAAAS,OAAA,EAAAA,OAAA;QAAAC,IAAA,EAAAA;MAAA;IACA;IACAK,WAAA,WAAAA,YAAAD,EAAA;MACA,IAAAE,iBAAA,QAAAjB,aAAA,CAAAkB,SAAA,WAAAC,CAAA;QAAA,OAAAA,CAAA,CAAAJ,EAAA,KAAAA,EAAA;MAAA;MACA,IAAAE,iBAAA;QACA,KAAAjB,aAAA,CAAAoB,MAAA,CAAAH,iBAAA;MACA;IACA;IACAV,WAAA,WAAAA,YAAA;MACA,KAAAP,aAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}