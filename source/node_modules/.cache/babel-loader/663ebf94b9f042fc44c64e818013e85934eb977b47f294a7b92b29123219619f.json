{"ast":null,"code":"export default {\n  inject: ['$intf'],\n  data: function data() {\n    return {\n      reveal: false\n    };\n  },\n  computed: {\n    ipsec: function ipsec(_ref) {\n      var $intf = _ref.$intf;\n      return $intf().ipsec;\n    }\n  }\n};","map":{"version":3,"names":["inject","data","reveal","computed","ipsec","_ref","$intf"],"sources":["node_modules/vuntangle/src/shared/SettingsInterface/components/ipsec/IpsecAuth.vue"],"sourcesContent":["<!--\n  component used for authentication methods for IPsec service and tunnel definitions\n  currently only showing Pre-shared key (shared secret) auth type\n-->\n<template>\n  <div>\n    <!-- <p class=\"font-weight-bold mb-2\">{{ $t('select_authentication_method') }}</p> -->\n\n    <!-- select using radios -->\n    <!-- <v-radio-group v-model=\"ipsec.authentication.type\" row>\n      <v-radio :label=\"$t('ipsec_psk')\" value=\"shared_secret\"></v-radio>\n      <v-radio :label=\"$t('ipsec_pubkey')\" value=\"pubkey\"></v-radio>\n    </v-radio-group> -->\n\n    <!-- shared secret option: `shared_secret` -->\n    <p class=\"font-weight-bold mb-2\">{{ $t('ipsec_psk') }}</p>\n    <div v-if=\"ipsec.authentication.type === 'shared_secret'\">\n      <ValidationProvider\n        v-slot=\"{ errors }\"\n        :rules=\"\n          ipsec.authentication.type === 'shared_secret'\n            ? { required: true, password: { minChars: 6, letter: false, digit: false, special: false } }\n            : ''\n        \"\n      >\n        <u-text-field\n          v-model=\"ipsec.authentication.shared_secret\"\n          :label=\"$t('shared_secret')\"\n          :append-icon=\"reveal ? 'mdi-eye' : 'mdi-eye-off'\"\n          :type=\"reveal ? 'text' : 'password'\"\n          :error-messages=\"errors\"\n          @click:append=\"reveal = !reveal\"\n        >\n          <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n        </u-text-field>\n      </ValidationProvider>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    inject: ['$intf'],\n    data() {\n      return {\n        reveal: false,\n      }\n    },\n    computed: {\n      ipsec: ({ $intf }) => $intf().ipsec,\n    },\n  }\n</script>\n"],"mappings":"AAyCA;EACAA,MAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,KAAA,WAAAA,MAAAC,IAAA;MAAA,IAAAC,KAAA,GAAAD,IAAA,CAAAC,KAAA;MAAA,OAAAA,KAAA,GAAAF,KAAA;IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}