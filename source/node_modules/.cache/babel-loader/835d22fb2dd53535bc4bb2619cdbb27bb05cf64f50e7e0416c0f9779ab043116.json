{"ast":null,"code":"import _typeof from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\n/**\n * This plugin is a collection of methods relevant to date conversion and formatting.\n */\nimport { captureException } from '@sentry/vue';\nimport i18n from './vue-i18n';\nvar dates = {\n  /**\n   * Formats the given date from the server API as a readable date.\n   *\n   * if bool return empty string\n   * if number use\n   * if string of number it will work\n   * if there are milliseconds on the time, remove them using split\n   *\n   * @param {any}  apiDate      date returned from a web service call.  May be timestamp, C# serialized date, etc.\n   * @param {bool} displayTime\n   *\n   * @returns {string}  string returned of converted date/time, includes seconds if flag is passed\n   */\n  formatDateFromApi: function formatDateFromApi(apiDate) {\n    var displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    // check if the api date came in as 'N/A'\n    if (typeof apiDate === 'string' && apiDate.toLowerCase() === 'n/a') {\n      return i18n.t('global.not_applicable');\n    }\n\n    // check if an api date can be converted to a timestamp\n    var dateValue = this.getTimestampFromApi(apiDate);\n\n    // if the api date could not be convert into a timestamp, try to format a date value\n    if (dateValue === null) {\n      dateValue = this.formatDateValueFromApi(apiDate);\n    }\n\n    // try to convert date value to a date object\n    var dateObject = this.getDateObject(dateValue);\n    if (!dateObject) {\n      return '';\n    }\n\n    // return the date object as a local format\n    return this.formatLocaleDate(dateObject, displayTime);\n  },\n  /**\n   * Compare two dates by converting to a timestamp.  Used in ag-grid column comparator.\n   *\n   * @param {any} the first date to compare\n   * @param {any} the second date to compare\n   *\n   * @returns {number}\n   */\n  compareDates: function compareDates(a, b) {\n    return this.getComparatorTimestampFromApi(a) - this.getComparatorTimestampFromApi(b);\n  },\n  /**\n   * Get a timestamp from an api date for comparing dates when sorting.\n   *\n   * @param {any} apiDate The api date may be relative or absolute like 'now', 'never', 'n/a'\n   *\n   * @returns {number}\n   */\n  getComparatorTimestampFromApi: function getComparatorTimestampFromApi(apiDate) {\n    // check for valid date\n    if (!apiDate) {\n      return 0;\n    }\n\n    // check for relative string dates\n    if (typeof apiDate === 'string') {\n      // check for relative time of 'now'\n      var lowercaseApiDate = apiDate.toLowerCase();\n      if (lowercaseApiDate === 'now') {\n        return new Date().getTime();\n      }\n\n      // check for relative time of 'never'\n      if (lowercaseApiDate === 'never' || lowercaseApiDate === 'n/a') {\n        return 0;\n      }\n    }\n\n    // check if the api date is already in a timestamp format\n    var apiDateTimestamp = this.getTimestampFromApi(apiDate);\n    if (apiDateTimestamp !== null) {\n      return apiDateTimestamp;\n    }\n\n    // if the apiDate was not a timestamp, try to format a date value and convert to date object\n    var dateValue = this.formatDateValueFromApi(apiDate);\n    var dateObject = this.getDateObject(dateValue);\n    if (!dateObject) {\n      return 0;\n    }\n\n    // return date timestamp\n    return dateObject.getTime();\n  },\n  /**\n   * Get a formatted date value from an api date.  This can then be used as the constructor of a javascript date\n   * object.\n   *\n   * @param {any} apiDate\n   *\n   * @returns {any}\n   */\n  formatDateValueFromApi: function formatDateValueFromApi(apiDate) {\n    // make sure a string was passed for formatting\n    if (typeof apiDate !== 'string') {\n      return apiDate;\n    }\n\n    // e.g. 2019-09-20T12:18:24 remove the T (check for numbers after to not remove T from 'Tue' or 'Thu')\n    if (apiDate.match(/T\\d/)) {\n      return apiDate.replace('T', ' ').split('.')[0];\n    }\n\n    // looks like it is already formatted, return with stripping timezone\n    if (apiDate.includes('-')) {\n      return apiDate.split('.')[0];\n    }\n\n    // e.g. 11/30/2018 7:00:00 AM\n    if (apiDate.includes('/')) {\n      return this.convertSlashDateToLocaleReady(apiDate);\n    }\n    return apiDate;\n  },\n  /**\n   * Get a timestamp from an api date.  There are multiple ways an api date may be formatted for a timestamp.\n   *\n   * @param {any} apiDate\n   *\n   * @returns {number|null}\n   */\n  getTimestampFromApi: function getTimestampFromApi(apiDate) {\n    // make sure a value was passed\n    if (!apiDate) {\n      return null;\n    }\n    var dateValue;\n    switch (true) {\n      // if already number, use it\n      case typeof apiDate === 'number':\n        dateValue = apiDate;\n        break;\n      // if string as timestamp number, parse\n      case typeof apiDate === 'string' && !isNaN(apiDate):\n        dateValue = parseInt(apiDate);\n        break;\n      // if object as timestamp number, parse date inside object\n      case _typeof(apiDate) === 'object':\n        dateValue = parseInt(apiDate.$date);\n        break;\n      // if C# serializer DateTime \"/Date(1494957608139)/\" as number, parse it\n      case apiDate.startsWith('/Date'):\n        dateValue = parseInt(apiDate.replace('/Date(', '').replace(')/', ''));\n        break;\n      // if none of the cases above, return early\n      default:\n        return null;\n    }\n    var dateAsString = String(dateValue);\n    // if the timestamp is 13 digits or longer, assume already milliseconds.\n    // if not, assume seconds and convert to ms\n    return dateAsString.length >= 13 ? dateValue : dateValue * 1000;\n  },\n  /**\n   * Returns a date object or null if a valid date object could not be created correctly.\n   *\n   * @param {any} dateValue possible date value to be passed into a date constructor\n   *\n   * @returns {Date|null}\n   */\n  getDateObject: function getDateObject(dateValue) {\n    // make sure a value was passed\n    if (!dateValue) {\n      return null;\n    }\n\n    // return null if the date could not be made into a valid object\n    var date = new Date(dateValue);\n    if (isNaN(date.getTime())) {\n      return null;\n    }\n    return date;\n  },\n  /**\n   * Returns a locale formatted date from a UTC timestamp\n   * Locale formats are defined in /plugins/vue-i18n.js\n   * @param date - UTC timestamp milliseconds\n   * @param displayTime - boolean to show or not the time part of date\n   */\n  formatLocaleDate: function formatLocaleDate(dateObject) {\n    var displayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    try {\n      return i18n.d(dateObject, displayTime ? 'long' : 'short');\n    } catch (e) {\n      captureException(e);\n      return '';\n    }\n  },\n  /**\n   * Returns a date and time string(yyyy-mm-dd hh:mm:ss) for the specified date\n   * @param baseDate - date to format as a string\n   * @param dayCount - number of days either before or after baseDate to return formatted date string for\n   * @returns {string} - date string formatted as yyyy-mm-dd hh:mm:ss\n   */\n  getDateTimeString: function getDateTimeString(baseDate, dayCount) {\n    var date = new Date(new Date().setDate(baseDate.getDate() + dayCount));\n    var dateTimeString = date.getUTCFullYear() + '-' + ('0' + (date.getUTCMonth() + 1)).slice(-2) + '-' + ('0' + date.getUTCDate()).slice(-2) + ' ' + ('0' + date.getUTCHours()).slice(-2) + ':' + ('0' + date.getUTCMinutes()).slice(-2) + ':' + ('0' + date.getUTCSeconds()).slice(-2);\n    return dateTimeString;\n  },\n  /**\n   * Returns a date string (yyyy-mm-dd) for a date.\n   * @param baseDate - date to format as a string\n   * @param dayCount - number of days either before or after baseDate to return formatted date string for\n   * @returns {string} - date string formatted as yyyy-mm-dd\n   */\n  getDateString: function getDateString(baseDate, dayCount) {\n    var date = new Date(new Date().setDate(baseDate.getDate() + dayCount));\n    var dateString = date.getUTCFullYear() + '-' + ('0' + (date.getUTCMonth() + 1)).slice(-2) + '-' + ('0' + date.getUTCDate()).slice(-2);\n    return dateString;\n  },\n  /**\n   * Converts a date format of MM/DD/YYYY HH:MM:SS AM/PM to YYYY-MM-DD HH:MM:SS\n   * so formatLocaleDate can process properly\n   * @param {*} slashdate - date that needs to be converted to proper format\n   */\n  convertSlashDateToLocaleReady: function convertSlashDateToLocaleReady(slashdate) {\n    if (!slashdate) {\n      return false;\n    }\n    var slashdateSplit = slashdate.split(' ');\n    var slashDate = slashdateSplit[0];\n    var slashTime = slashdateSplit[1];\n    var slashIsAM = slashdateSplit[2] === 'AM';\n\n    // convert date to YYYY-mm-dd\n    var dateItems = slashDate.split('/');\n    var date = dateItems[2] + '-' + this.addZeroToDate(dateItems[0]) + '-' + this.addZeroToDate(dateItems[1]) + ' ';\n\n    // convert time to military time\n    var time = slashTime;\n    if (!slashIsAM) {\n      var timeItems = slashTime.split(':');\n      var hour = parseInt(timeItems[0]) + 12;\n      time = hour + ':' + timeItems[1] + ':' + timeItems[2];\n    }\n    return date + time;\n  },\n  /**\n   * Used by convertSlashDateToLocaleReady. A month or day needs at least two digits to be formatted properly\n   * this ensures that the month/day has that\n   * @param {*} dateItem - month or day that needs to be checked for validity\n   */\n  addZeroToDate: function addZeroToDate(dateItem) {\n    if (dateItem.length === 1) {\n      return '0' + dateItem;\n    }\n    return dateItem;\n  },\n  timeZones: [{\n    text: '(~UTC-12:00) Etc/GMT+12',\n    value: 'Etc/GMT+12'\n  }, {\n    text: '(~UTC-11:00) Etc/GMT+11',\n    value: 'Etc/GMT+11'\n  }, {\n    text: '(~UTC-11:00) Pacific/Midway',\n    value: 'Pacific/Midway',\n    openwrt: 'SST11'\n  }, {\n    text: '(~UTC-11:00) Pacific/Niue',\n    value: 'Pacific/Niue',\n    openwrt: 'NUT11'\n  }, {\n    text: '(~UTC-11:00) Pacific/Pago_Pago',\n    value: 'Pacific/Pago_Pago',\n    openwrt: 'SST11'\n  }, {\n    text: '(~UTC-11:00) Pacific/Samoa',\n    value: 'Pacific/Samoa'\n  }, {\n    text: '(~UTC-11:00) US/Samoa',\n    value: 'US/Samoa'\n  }, {\n    text: '(~UTC-10:00) Etc/GMT+10',\n    value: 'Etc/GMT+10'\n  }, {\n    text: '(~UTC-10:00) Pacific/Honolulu',\n    value: 'Pacific/Honolulu',\n    openwrt: 'HST10'\n  }, {\n    text: '(~UTC-10:00) Pacific/Johnston',\n    value: 'Pacific/Johnston',\n    openwrt: 'HST10'\n  }, {\n    text: '(~UTC-10:00) Pacific/Rarotonga',\n    value: 'Pacific/Rarotonga',\n    openwrt: 'CKT10'\n  }, {\n    text: '(~UTC-10:00) Pacific/Tahiti',\n    value: 'Pacific/Tahiti',\n    openwrt: 'TAHT10'\n  }, {\n    text: '(~UTC-10:00) SystemV/HST10',\n    value: 'SystemV/HST10'\n  }, {\n    text: '(~UTC-10:00) US/Hawaii',\n    value: 'US/Hawaii'\n  }, {\n    text: '(~UTC-10:00) HST',\n    value: 'HST'\n  }, {\n    text: '(~UTC-09:30) Pacific/Marquesas',\n    value: 'Pacific/Marquesas',\n    openwrt: 'MART9:30'\n  }, {\n    text: '(~UTC-09:00) America/Adak',\n    value: 'America/Adak',\n    openwrt: 'HAST10HADT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-09:00) America/Atka',\n    value: 'America/Atka'\n  }, {\n    text: '(~UTC-09:00) Etc/GMT+9',\n    value: 'Etc/GMT+9'\n  }, {\n    text: '(~UTC-09:00) Pacific/Gambier',\n    value: 'Pacific/Gambier',\n    openwrt: 'GAMT9'\n  }, {\n    text: '(~UTC-09:00) SystemV/YST9',\n    value: 'SystemV/YST9'\n  }, {\n    text: '(~UTC-09:00) SystemV/YST9YDT',\n    value: 'SystemV/YST9YDT'\n  }, {\n    text: '(~UTC-09:00) US/Aleutian',\n    value: 'US/Aleutian'\n  }, {\n    text: '(~UTC-08:00) America/Anchorage',\n    value: 'America/Anchorage',\n    openwrt: 'AKST9AKDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-08:00) America/Juneau',\n    value: 'America/Juneau',\n    openwrt: 'AKST9AKDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-08:00) America/Metlakatla',\n    value: 'America/Metlakatla'\n  }, {\n    text: '(~UTC-08:00) America/Nome',\n    value: 'America/Nome',\n    openwrt: 'AKST9AKDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-08:00) America/Sitka',\n    value: 'America/Sitka'\n  }, {\n    text: '(~UTC-08:00) America/Yakutat',\n    value: 'America/Yakutat',\n    openwrt: 'AKST9AKDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-08:00) Etc/GMT+8',\n    value: 'Etc/GMT+8'\n  }, {\n    text: '(~UTC-08:00) Pacific/Pitcairn',\n    value: 'Pacific/Pitcairn',\n    openwrt: 'PST8'\n  }, {\n    text: '(~UTC-08:00) SystemV/PST8',\n    value: 'SystemV/PST8'\n  }, {\n    text: '(~UTC-08:00) SystemV/PST8PDT',\n    value: 'SystemV/PST8PDT'\n  }, {\n    text: '(~UTC-08:00) US/Alaska',\n    value: 'US/Alaska'\n  }, {\n    text: '(~UTC-08:00) AST',\n    value: 'AST'\n  }, {\n    text: '(~UTC-07:00) America/Chihuahua',\n    value: 'America/Chihuahua',\n    openwrt: 'MST7MDT,M4.1.0,M10.5.0'\n  }, {\n    text: '(~UTC-07:00) America/Creston',\n    value: 'America/Creston'\n  }, {\n    text: '(~UTC-07:00) America/Dawson',\n    value: 'America/Dawson',\n    openwrt: 'PST8PDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-07:00) America/Dawson_Creek',\n    value: 'America/Dawson_Creek',\n    openwrt: 'MST7'\n  }, {\n    text: '(~UTC-07:00) America/Ensenada',\n    value: 'America/Ensenada'\n  }, {\n    text: '(~UTC-07:00) America/Fort_Nelson',\n    value: 'America/Fort_Nelson'\n  }, {\n    text: '(~UTC-07:00) America/Hermosillo',\n    value: 'America/Hermosillo',\n    openwrt: 'MST7'\n  }, {\n    text: '(~UTC-07:00) America/Los_Angeles',\n    value: 'America/Los_Angeles',\n    openwrt: 'PST8PDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-07:00) America/Mazatlan',\n    value: 'America/Mazatlan',\n    openwrt: 'MST7MDT,M4.1.0,M10.5.0'\n  }, {\n    text: '(~UTC-07:00) America/Phoenix',\n    value: 'America/Phoenix',\n    openwrt: 'MST7'\n  }, {\n    text: '(~UTC-07:00) America/Santa_Isabel',\n    value: 'America/Santa_Isabel',\n    openwrt: 'PST8PDT,M4.1.0,M10.5.0'\n  }, {\n    text: '(~UTC-07:00) America/Tijuana',\n    value: 'America/Tijuana',\n    openwrt: 'PST8PDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-07:00) America/Vancouver',\n    value: 'America/Vancouver',\n    openwrt: 'PST8PDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-07:00) America/Whitehorse',\n    value: 'America/Whitehorse',\n    openwrt: 'PST8PDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-07:00) Canada/Pacific',\n    value: 'Canada/Pacific'\n  }, {\n    text: '(~UTC-07:00) Canada/Yukon',\n    value: 'Canada/Yukon'\n  }, {\n    text: '(~UTC-07:00) Etc/GMT+7',\n    value: 'Etc/GMT+7'\n  }, {\n    text: '(~UTC-07:00) Mexico/BajaNorte',\n    value: 'Mexico/BajaNorte'\n  }, {\n    text: '(~UTC-07:00) Mexico/BajaSur',\n    value: 'Mexico/BajaSur'\n  }, {\n    text: '(~UTC-07:00) PST8PDT',\n    value: 'PST8PDT'\n  }, {\n    text: '(~UTC-07:00) SystemV/MST7',\n    value: 'SystemV/MST7'\n  }, {\n    text: '(~UTC-07:00) SystemV/MST7MDT',\n    value: 'SystemV/MST7MDT'\n  }, {\n    text: '(~UTC-07:00) US/Arizona',\n    value: 'US/Arizona'\n  }, {\n    text: '(~UTC-07:00) US/Pacific',\n    value: 'US/Pacific'\n  }, {\n    text: '(~UTC-07:00) US/Pacific-New',\n    value: 'US/Pacific-New'\n  }, {\n    text: '(~UTC-07:00) MST',\n    value: 'MST'\n  }, {\n    text: '(~UTC-07:00) PNT',\n    value: 'PNT'\n  }, {\n    text: '(~UTC-07:00) PST',\n    value: 'PST'\n  }, {\n    text: '(~UTC-06:00) America/Bahia_Banderas',\n    value: 'America/Bahia_Banderas'\n  }, {\n    text: '(~UTC-06:00) America/Belize',\n    value: 'America/Belize',\n    openwrt: 'CST6'\n  }, {\n    text: '(~UTC-06:00) America/Boise',\n    value: 'America/Boise',\n    openwrt: 'MST7MDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-06:00) America/Cambridge_Bay',\n    value: 'America/Cambridge_Bay',\n    openwrt: 'MST7MDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-06:00) America/Costa_Rica',\n    value: 'America/Costa_Rica',\n    openwrt: 'CST6'\n  }, {\n    text: '(~UTC-06:00) America/Denver',\n    value: 'America/Denver',\n    openwrt: 'MST7MDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-06:00) America/Edmonton',\n    value: 'America/Edmonton',\n    openwrt: 'MST7MDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-06:00) America/El_Salvador',\n    value: 'America/El_Salvador',\n    openwrt: 'CST6'\n  }, {\n    text: '(~UTC-06:00) America/Guatemala',\n    value: 'America/Guatemala',\n    openwrt: 'CST6'\n  }, {\n    text: '(~UTC-06:00) America/Inuvik',\n    value: 'America/Inuvik',\n    openwrt: 'MST7MDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-06:00) America/Managua',\n    value: 'America/Managua',\n    openwrt: 'CST6'\n  }, {\n    text: '(~UTC-06:00) America/Merida',\n    value: 'America/Merida',\n    openwrt: 'CST6CDT,M4.1.0,M10.5.0'\n  }, {\n    text: '(~UTC-06:00) America/Mexico_City',\n    value: 'America/Mexico_City',\n    openwrt: 'CST6CDT,M4.1.0,M10.5.0'\n  }, {\n    text: '(~UTC-06:00) America/Monterrey',\n    value: 'America/Monterrey',\n    openwrt: 'CST6CDT,M4.1.0,M10.5.0'\n  }, {\n    text: '(~UTC-06:00) America/Ojinaga',\n    value: 'America/Ojinaga',\n    openwrt: 'MST7MDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-06:00) America/Regina',\n    value: 'America/Regina',\n    openwrt: 'CST6'\n  }, {\n    text: '(~UTC-06:00) America/Shiprock',\n    value: 'America/Shiprock',\n    openwrt: 'MST7MDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-06:00) America/Swift_Current',\n    value: 'America/Swift_Current',\n    openwrt: 'CST6'\n  }, {\n    text: '(~UTC-06:00) America/Tegucigalpa',\n    value: 'America/Tegucigalpa',\n    openwrt: 'CST6'\n  }, {\n    text: '(~UTC-06:00) America/Yellowknife',\n    value: 'America/Yellowknife',\n    openwrt: 'MST7MDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-06:00) Canada/Mountain',\n    value: 'Canada/Mountain'\n  }, {\n    text: '(~UTC-06:00) Canada/Saskatchewan',\n    value: 'Canada/Saskatchewan'\n  }, {\n    text: '(~UTC-06:00) Etc/GMT+6',\n    value: 'Etc/GMT+6'\n  }, {\n    text: '(~UTC-06:00) MST7MDT',\n    value: 'MST7MDT'\n  }, {\n    text: '(~UTC-06:00) Mexico/General',\n    value: 'Mexico/General'\n  }, {\n    text: '(~UTC-06:00) Navajo',\n    value: 'Navajo'\n  }, {\n    text: '(~UTC-06:00) Pacific/Galapagos',\n    value: 'Pacific/Galapagos',\n    openwrt: 'GALT6'\n  }, {\n    text: '(~UTC-06:00) SystemV/CST6',\n    value: 'SystemV/CST6'\n  }, {\n    text: '(~UTC-06:00) SystemV/CST6CDT',\n    value: 'SystemV/CST6CDT'\n  }, {\n    text: '(~UTC-06:00) US/Mountain',\n    value: 'US/Mountain'\n  }, {\n    text: '(~UTC-05:00) America/Atikokan',\n    value: 'America/Atikokan',\n    openwrt: 'EST5'\n  }, {\n    text: '(~UTC-05:00) America/Bogota',\n    value: 'America/Bogota',\n    openwrt: 'COT5'\n  }, {\n    text: '(~UTC-05:00) America/Cancun',\n    value: 'America/Cancun',\n    openwrt: 'CST6CDT,M4.1.0,M10.5.0'\n  }, {\n    text: '(~UTC-05:00) America/Cayman',\n    value: 'America/Cayman',\n    openwrt: 'EST5'\n  }, {\n    text: '(~UTC-05:00) America/Chicago',\n    value: 'America/Chicago',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/Coral_Harbour',\n    value: 'America/Coral_Harbour'\n  }, {\n    text: '(~UTC-05:00) America/Eirunepe',\n    value: 'America/Eirunepe',\n    openwrt: 'AMT4'\n  }, {\n    text: '(~UTC-05:00) America/Guayaquil',\n    value: 'America/Guayaquil',\n    openwrt: 'ECT5'\n  }, {\n    text: '(~UTC-05:00) America/Indiana/Knox',\n    value: 'America/Indiana/Knox',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/Indiana/Tell_City',\n    value: 'America/Indiana/Tell_City',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/Jamaica',\n    value: 'America/Jamaica',\n    openwrt: 'EST5'\n  }, {\n    text: '(~UTC-05:00) America/Knox_IN',\n    value: 'America/Knox_IN'\n  }, {\n    text: '(~UTC-05:00) America/Lima',\n    value: 'America/Lima',\n    openwrt: 'PET5'\n  }, {\n    text: '(~UTC-05:00) America/Matamoros',\n    value: 'America/Matamoros',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/Menominee',\n    value: 'America/Menominee',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/North_Dakota/Beulah',\n    value: 'America/North_Dakota/Beulah'\n  }, {\n    text: '(~UTC-05:00) America/North_Dakota/Center',\n    value: 'America/North_Dakota/Center',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/North_Dakota/New_Salem',\n    value: 'America/North_Dakota/New_Salem',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/Panama',\n    value: 'America/Panama',\n    openwrt: 'EST5'\n  }, {\n    text: '(~UTC-05:00) America/Porto_Acre',\n    value: 'America/Porto_Acre'\n  }, {\n    text: '(~UTC-05:00) America/Rainy_River',\n    value: 'America/Rainy_River',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/Rankin_Inlet',\n    value: 'America/Rankin_Inlet',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) America/Resolute',\n    value: 'America/Resolute'\n  }, {\n    text: '(~UTC-05:00) America/Rio_Branco',\n    value: 'America/Rio_Branco',\n    openwrt: 'AMT4'\n  }, {\n    text: '(~UTC-05:00) America/Winnipeg',\n    value: 'America/Winnipeg',\n    openwrt: 'CST6CDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-05:00) Brazil/Acre',\n    value: 'Brazil/Acre'\n  }, {\n    text: '(~UTC-05:00) CST6CDT',\n    value: 'CST6CDT'\n  }, {\n    text: '(~UTC-05:00) Canada/Central',\n    value: 'Canada/Central'\n  }, {\n    text: '(~UTC-05:00) Chile/EasterIsland',\n    value: 'Chile/EasterIsland'\n  }, {\n    text: '(~UTC-05:00) Etc/GMT+5',\n    value: 'Etc/GMT+5'\n  }, {\n    text: '(~UTC-05:00) Jamaica',\n    value: 'Jamaica'\n  }, {\n    text: '(~UTC-05:00) Pacific/Easter',\n    value: 'Pacific/Easter'\n  }, {\n    text: '(~UTC-05:00) SystemV/EST5',\n    value: 'SystemV/EST5'\n  }, {\n    text: '(~UTC-05:00) SystemV/EST5EDT',\n    value: 'SystemV/EST5EDT'\n  }, {\n    text: '(~UTC-05:00) US/Central',\n    value: 'US/Central'\n  }, {\n    text: '(~UTC-05:00) US/Indiana-Starke',\n    value: 'US/Indiana-Starke'\n  }, {\n    text: '(~UTC-05:00) EST',\n    value: 'EST'\n  }, {\n    text: '(~UTC-05:00) CST',\n    value: 'CST'\n  }, {\n    text: '(~UTC-04:00) America/Anguilla',\n    value: 'America/Anguilla',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Antigua',\n    value: 'America/Antigua',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Aruba',\n    value: 'America/Aruba',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Asuncion',\n    value: 'America/Asuncion',\n    openwrt: 'PYT4PYST,M10.1.0/0,M4.2.0/0'\n  }, {\n    text: '(~UTC-04:00) America/Barbados',\n    value: 'America/Barbados',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Blanc-Sablon',\n    value: 'America/Blanc-Sablon',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Boa_Vista',\n    value: 'America/Boa_Vista',\n    openwrt: 'AMT4'\n  }, {\n    text: '(~UTC-04:00) America/Campo_Grande',\n    value: 'America/Campo_Grande',\n    openwrt: 'AMT4AMST,M10.3.0/0,M2.3.0/0'\n  }, {\n    text: '(~UTC-04:00) America/Caracas',\n    value: 'America/Caracas',\n    openwrt: 'VET4:30'\n  }, {\n    text: '(~UTC-04:00) America/Cuiaba',\n    value: 'America/Cuiaba',\n    openwrt: 'AMT4AMST,M10.3.0/0,M2.3.0/0'\n  }, {\n    text: '(~UTC-04:00) America/Curacao',\n    value: 'America/Curacao',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Detroit',\n    value: 'America/Detroit',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Dominica',\n    value: 'America/Dominica',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Fort_Wayne',\n    value: 'America/Fort_Wayne'\n  }, {\n    text: '(~UTC-04:00) America/Grand_Turk',\n    value: 'America/Grand_Turk',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Grenada',\n    value: 'America/Grenada',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Guadeloupe',\n    value: 'America/Guadeloupe',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Guyana',\n    value: 'America/Guyana',\n    openwrt: 'GYT4'\n  }, {\n    text: '(~UTC-04:00) America/Havana',\n    value: 'America/Havana',\n    openwrt: 'CST5CDT,M3.2.0/0,M10.5.0/1'\n  }, {\n    text: '(~UTC-04:00) America/Indiana/Indianapolis',\n    value: 'America/Indiana/Indianapolis',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Indiana/Marengo',\n    value: 'America/Indiana/Marengo',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Indiana/Petersburg',\n    value: 'America/Indiana/Petersburg',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Indiana/Vevay',\n    value: 'America/Indiana/Vevay',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Indiana/Vincennes',\n    value: 'America/Indiana/Vincennes',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Indiana/Winamac',\n    value: 'America/Indiana/Winamac',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Indianapolis',\n    value: 'America/Indianapolis'\n  }, {\n    text: '(~UTC-04:00) America/Iqaluit',\n    value: 'America/Iqaluit',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Kentucky/Louisville',\n    value: 'America/Kentucky/Louisville',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Kentucky/Monticello',\n    value: 'America/Kentucky/Monticello',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Kralendijk',\n    value: 'America/Kralendijk'\n  }, {\n    text: '(~UTC-04:00) America/La_Paz',\n    value: 'America/La_Paz',\n    openwrt: 'BOT4'\n  }, {\n    text: '(~UTC-04:00) America/Louisville',\n    value: 'America/Louisville'\n  }, {\n    text: '(~UTC-04:00) America/Lower_Princes',\n    value: 'America/Lower_Princes'\n  }, {\n    text: '(~UTC-04:00) America/Manaus',\n    value: 'America/Manaus',\n    openwrt: 'AMT4'\n  }, {\n    text: '(~UTC-04:00) America/Marigot',\n    value: 'America/Marigot',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Martinique',\n    value: 'America/Martinique',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Montreal',\n    value: 'America/Montreal',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Montserrat',\n    value: 'America/Montserrat',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Nassau',\n    value: 'America/Nassau',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/New_York',\n    value: 'America/New_York',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Nipigon',\n    value: 'America/Nipigon',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Pangnirtung',\n    value: 'America/Pangnirtung',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Port-au-Prince',\n    value: 'America/Port-au-Prince',\n    openwrt: 'EST5'\n  }, {\n    text: '(~UTC-04:00) America/Port_of_Spain',\n    value: 'America/Port_of_Spain',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Porto_Velho',\n    value: 'America/Porto_Velho',\n    openwrt: 'AMT4'\n  }, {\n    text: '(~UTC-04:00) America/Puerto_Rico',\n    value: 'America/Puerto_Rico',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Santo_Domingo',\n    value: 'America/Santo_Domingo',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/St_Barthelemy',\n    value: 'America/St_Barthelemy',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/St_Kitts',\n    value: 'America/St_Kitts',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/St_Lucia',\n    value: 'America/St_Lucia',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/St_Thomas',\n    value: 'America/St_Thomas',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/St_Vincent',\n    value: 'America/St_Vincent',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Thunder_Bay',\n    value: 'America/Thunder_Bay',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Toronto',\n    value: 'America/Toronto',\n    openwrt: 'EST5EDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-04:00) America/Tortola',\n    value: 'America/Tortola',\n    openwrt: 'AST4'\n  }, {\n    text: '(~UTC-04:00) America/Virgin',\n    value: 'America/Virgin'\n  }, {\n    text: '(~UTC-04:00) Brazil/West',\n    value: 'Brazil/West'\n  }, {\n    text: '(~UTC-04:00) Canada/Eastern',\n    value: 'Canada/Eastern'\n  }, {\n    text: '(~UTC-04:00) Cuba',\n    value: 'Cuba'\n  }, {\n    text: '(~UTC-04:00) EST5EDT',\n    value: 'EST5EDT'\n  }, {\n    text: '(~UTC-04:00) Etc/GMT+4',\n    value: 'Etc/GMT+4'\n  }, {\n    text: '(~UTC-04:00) SystemV/AST4',\n    value: 'SystemV/AST4'\n  }, {\n    text: '(~UTC-04:00) SystemV/AST4ADT',\n    value: 'SystemV/AST4ADT'\n  }, {\n    text: '(~UTC-04:00) US/East-Indiana',\n    value: 'US/East-Indiana'\n  }, {\n    text: '(~UTC-04:00) US/Eastern',\n    value: 'US/Eastern'\n  }, {\n    text: '(~UTC-04:00) US/Michigan',\n    value: 'US/Michigan'\n  }, {\n    text: '(~UTC-04:00) IET',\n    value: 'IET'\n  }, {\n    text: '(~UTC-04:00) PRT',\n    value: 'PRT'\n  }, {\n    text: '(~UTC-03:00) America/Araguaina',\n    value: 'America/Araguaina',\n    openwrt: 'BRT3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Buenos_Aires',\n    value: 'America/Argentina/Buenos_Aires',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Catamarca',\n    value: 'America/Argentina/Catamarca',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/ComodRivadavia',\n    value: 'America/Argentina/ComodRivadavia'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Cordoba',\n    value: 'America/Argentina/Cordoba',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Jujuy',\n    value: 'America/Argentina/Jujuy',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/La_Rioja',\n    value: 'America/Argentina/La_Rioja',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Mendoza',\n    value: 'America/Argentina/Mendoza',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Rio_Gallegos',\n    value: 'America/Argentina/Rio_Gallegos',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Salta',\n    value: 'America/Argentina/Salta',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/San_Juan',\n    value: 'America/Argentina/San_Juan',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/San_Luis',\n    value: 'America/Argentina/San_Luis'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Tucuman',\n    value: 'America/Argentina/Tucuman',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Argentina/Ushuaia',\n    value: 'America/Argentina/Ushuaia',\n    openwrt: 'ART3'\n  }, {\n    text: '(~UTC-03:00) America/Bahia',\n    value: 'America/Bahia',\n    openwrt: 'BRT3'\n  }, {\n    text: '(~UTC-03:00) America/Belem',\n    value: 'America/Belem',\n    openwrt: 'BRT3'\n  }, {\n    text: '(~UTC-03:00) America/Buenos_Aires',\n    value: 'America/Buenos_Aires'\n  }, {\n    text: '(~UTC-03:00) America/Catamarca',\n    value: 'America/Catamarca'\n  }, {\n    text: '(~UTC-03:00) America/Cayenne',\n    value: 'America/Cayenne',\n    openwrt: 'GFT3'\n  }, {\n    text: '(~UTC-03:00) America/Cordoba',\n    value: 'America/Cordoba'\n  }, {\n    text: '(~UTC-03:00) America/Fortaleza',\n    value: 'America/Fortaleza',\n    openwrt: 'BRT3'\n  }, {\n    text: '(~UTC-03:00) America/Glace_Bay',\n    value: 'America/Glace_Bay',\n    openwrt: 'AST4ADT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-03:00) America/Goose_Bay',\n    value: 'America/Goose_Bay',\n    openwrt: 'AST4ADT,M3.2.0/0:01,M11.1.0/0:01'\n  }, {\n    text: '(~UTC-03:00) America/Halifax',\n    value: 'America/Halifax',\n    openwrt: 'AST4ADT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-03:00) America/Jujuy',\n    value: 'America/Jujuy'\n  }, {\n    text: '(~UTC-03:00) America/Maceio',\n    value: 'America/Maceio',\n    openwrt: 'BRT3'\n  }, {\n    text: '(~UTC-03:00) America/Mendoza',\n    value: 'America/Mendoza'\n  }, {\n    text: '(~UTC-03:00) America/Moncton',\n    value: 'America/Moncton',\n    openwrt: 'AST4ADT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-03:00) America/Montevideo',\n    value: 'America/Montevideo',\n    openwrt: 'UYT3UYST,M10.1.0,M3.2.0'\n  }, {\n    text: '(~UTC-03:00) America/Paramaribo',\n    value: 'America/Paramaribo',\n    openwrt: 'SRT3'\n  }, {\n    text: '(~UTC-03:00) America/Punta_Arenas',\n    value: 'America/Punta_Arenas'\n  }, {\n    text: '(~UTC-03:00) America/Recife',\n    value: 'America/Recife',\n    openwrt: 'BRT3'\n  }, {\n    text: '(~UTC-03:00) America/Rosario',\n    value: 'America/Rosario'\n  }, {\n    text: '(~UTC-03:00) America/Santarem',\n    value: 'America/Santarem',\n    openwrt: 'BRT3'\n  }, {\n    text: '(~UTC-03:00) America/Santiago',\n    value: 'America/Santiago'\n  }, {\n    text: '(~UTC-03:00) America/Sao_Paulo',\n    value: 'America/Sao_Paulo',\n    openwrt: 'BRT3BRST,M10.3.0/0,M2.3.0/0'\n  }, {\n    text: '(~UTC-03:00) America/Thule',\n    value: 'America/Thule',\n    openwrt: 'AST4ADT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-03:00) Antarctica/Palmer',\n    value: 'Antarctica/Palmer'\n  }, {\n    text: '(~UTC-03:00) Antarctica/Rothera',\n    value: 'Antarctica/Rothera',\n    openwrt: 'ROTT3'\n  }, {\n    text: '(~UTC-03:00) Atlantic/Bermuda',\n    value: 'Atlantic/Bermuda',\n    openwrt: 'AST4ADT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-03:00) Atlantic/Stanley',\n    value: 'Atlantic/Stanley',\n    openwrt: 'FKT4FKST,M9.1.0,M4.3.0'\n  }, {\n    text: '(~UTC-03:00) Brazil/East',\n    value: 'Brazil/East'\n  }, {\n    text: '(~UTC-03:00) Canada/Atlantic',\n    value: 'Canada/Atlantic'\n  }, {\n    text: '(~UTC-03:00) Chile/Continental',\n    value: 'Chile/Continental'\n  }, {\n    text: '(~UTC-03:00) Etc/GMT+3',\n    value: 'Etc/GMT+3'\n  }, {\n    text: '(~UTC-03:00) AGT',\n    value: 'AGT'\n  }, {\n    text: '(~UTC-03:00) BET',\n    value: 'BET'\n  }, {\n    text: '(~UTC-02:30) America/St_Johns',\n    value: 'America/St_Johns',\n    openwrt: 'NST3:30NDT,M3.2.0/0:01,M11.1.0/0:01'\n  }, {\n    text: '(~UTC-02:30) Canada/Newfoundland',\n    value: 'Canada/Newfoundland'\n  }, {\n    text: '(~UTC-02:30) CNT',\n    value: 'CNT'\n  }, {\n    text: '(~UTC-02:00) America/Godthab',\n    value: 'America/Godthab'\n  }, {\n    text: '(~UTC-02:00) America/Miquelon',\n    value: 'America/Miquelon',\n    openwrt: 'PMST3PMDT,M3.2.0,M11.1.0'\n  }, {\n    text: '(~UTC-02:00) America/Noronha',\n    value: 'America/Noronha',\n    openwrt: 'FNT2'\n  }, {\n    text: '(~UTC-02:00) Atlantic/South_Georgia',\n    value: 'Atlantic/South_Georgia',\n    openwrt: 'GST2'\n  }, {\n    text: '(~UTC-02:00) Brazil/DeNoronha',\n    value: 'Brazil/DeNoronha'\n  }, {\n    text: '(~UTC-02:00) Etc/GMT+2',\n    value: 'Etc/GMT+2'\n  }, {\n    text: '(~UTC-01:00) Atlantic/Cape_Verde',\n    value: 'Atlantic/Cape_Verde',\n    openwrt: 'CVT1'\n  }, {\n    text: '(~UTC-01:00) Etc/GMT+1',\n    value: 'Etc/GMT+1'\n  }, {\n    text: '(~UTC+00:00) Africa/Abidjan',\n    value: 'Africa/Abidjan',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Accra',\n    value: 'Africa/Accra',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Bamako',\n    value: 'Africa/Bamako',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Banjul',\n    value: 'Africa/Banjul',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Bissau',\n    value: 'Africa/Bissau',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Conakry',\n    value: 'Africa/Conakry',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Dakar',\n    value: 'Africa/Dakar',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Freetown',\n    value: 'Africa/Freetown',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Lome',\n    value: 'Africa/Lome',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Monrovia',\n    value: 'Africa/Monrovia',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Nouakchott',\n    value: 'Africa/Nouakchott',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Ouagadougou',\n    value: 'Africa/Ouagadougou',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Africa/Timbuktu',\n    value: 'Africa/Timbuktu'\n  }, {\n    text: '(~UTC+00:00) America/Danmarkshavn',\n    value: 'America/Danmarkshavn',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) America/Scoresbysund',\n    value: 'America/Scoresbysund',\n    openwrt: 'EGT1EGST,M3.5.0/0,M10.5.0/1'\n  }, {\n    text: '(~UTC+00:00) Atlantic/Azores',\n    value: 'Atlantic/Azores',\n    openwrt: 'AZOT1AZOST,M3.5.0/0,M10.5.0/1'\n  }, {\n    text: '(~UTC+00:00) Atlantic/Reykjavik',\n    value: 'Atlantic/Reykjavik',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Atlantic/St_Helena',\n    value: 'Atlantic/St_Helena',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Etc/GMT',\n    value: 'Etc/GMT'\n  }, {\n    text: '(~UTC+00:00) Etc/GMT+0',\n    value: 'Etc/GMT+0'\n  }, {\n    text: '(~UTC+00:00) Etc/GMT-0',\n    value: 'Etc/GMT-0'\n  }, {\n    text: '(~UTC+00:00) Etc/GMT0',\n    value: 'Etc/GMT0'\n  }, {\n    text: '(~UTC+00:00) Etc/Greenwich',\n    value: 'Etc/Greenwich'\n  }, {\n    text: '(~UTC+00:00) Etc/UCT',\n    value: 'Etc/UCT'\n  }, {\n    text: '(~UTC+00:00) Etc/UTC',\n    value: 'Etc/UTC'\n  }, {\n    text: '(~UTC+00:00) Etc/Universal',\n    value: 'Etc/Universal'\n  }, {\n    text: '(~UTC+00:00) Etc/Zulu',\n    value: 'Etc/Zulu'\n  }, {\n    text: '(~UTC+00:00) GMT',\n    value: 'GMT'\n  }, {\n    text: '(~UTC+00:00) GMT0',\n    value: 'GMT0'\n  }, {\n    text: '(~UTC+00:00) Greenwich',\n    value: 'Greenwich'\n  }, {\n    text: '(~UTC+00:00) Iceland',\n    value: 'Iceland'\n  }, {\n    text: '(~UTC+00:00) UCT',\n    value: 'UCT'\n  }, {\n    text: '(~UTC+00:00) UTC',\n    value: 'UTC',\n    openwrt: 'UTC'\n  }, {\n    text: '(~UTC+00:00) Universal',\n    value: 'Universal'\n  }, {\n    text: '(~UTC+00:00) Zulu',\n    value: 'Zulu'\n  }, {\n    text: '(~UTC+01:00) Africa/Algiers',\n    value: 'Africa/Algiers',\n    openwrt: 'CET-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Bangui',\n    value: 'Africa/Bangui',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Brazzaville',\n    value: 'Africa/Brazzaville',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Casablanca',\n    value: 'Africa/Casablanca',\n    openwrt: 'WET0'\n  }, {\n    text: '(~UTC+01:00) Africa/Douala',\n    value: 'Africa/Douala',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/El_Aaiun',\n    value: 'Africa/El_Aaiun',\n    openwrt: 'WET0'\n  }, {\n    text: '(~UTC+01:00) Africa/Kinshasa',\n    value: 'Africa/Kinshasa',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Lagos',\n    value: 'Africa/Lagos',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Libreville',\n    value: 'Africa/Libreville',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Luanda',\n    value: 'Africa/Luanda',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Malabo',\n    value: 'Africa/Malabo',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Ndjamena',\n    value: 'Africa/Ndjamena',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Niamey',\n    value: 'Africa/Niamey',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Porto-Novo',\n    value: 'Africa/Porto-Novo',\n    openwrt: 'WAT-1'\n  }, {\n    text: '(~UTC+01:00) Africa/Sao_Tome',\n    value: 'Africa/Sao_Tome',\n    openwrt: 'GMT0'\n  }, {\n    text: '(~UTC+01:00) Africa/Tunis',\n    value: 'Africa/Tunis',\n    openwrt: 'CET-1'\n  }, {\n    text: '(~UTC+01:00) Atlantic/Canary',\n    value: 'Atlantic/Canary',\n    openwrt: 'WET0WEST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) Atlantic/Faeroe',\n    value: 'Atlantic/Faeroe'\n  }, {\n    text: '(~UTC+01:00) Atlantic/Faroe',\n    value: 'Atlantic/Faroe',\n    openwrt: 'WET0WEST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) Atlantic/Madeira',\n    value: 'Atlantic/Madeira',\n    openwrt: 'WET0WEST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) Eire',\n    value: 'Eire'\n  }, {\n    text: '(~UTC+01:00) Etc/GMT-1',\n    value: 'Etc/GMT-1'\n  }, {\n    text: '(~UTC+01:00) Europe/Belfast',\n    value: 'Europe/Belfast'\n  }, {\n    text: '(~UTC+01:00) Europe/Dublin',\n    value: 'Europe/Dublin',\n    openwrt: 'GMT0IST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) Europe/Guernsey',\n    value: 'Europe/Guernsey',\n    openwrt: 'GMT0BST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) Europe/Isle_of_Man',\n    value: 'Europe/Isle_of_Man',\n    openwrt: 'GMT0BST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) Europe/Jersey',\n    value: 'Europe/Jersey',\n    openwrt: 'GMT0BST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) Europe/Lisbon',\n    value: 'Europe/Lisbon',\n    openwrt: 'WET0WEST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) Europe/London',\n    value: 'Europe/London',\n    openwrt: 'GMT0BST,M3.5.0/1,M10.5.0'\n  }, {\n    text: '(~UTC+01:00) GB',\n    value: 'GB'\n  }, {\n    text: '(~UTC+01:00) GB-Eire',\n    value: 'GB-Eire'\n  }, {\n    text: '(~UTC+01:00) Portugal',\n    value: 'Portugal'\n  }, {\n    text: '(~UTC+01:00) WET',\n    value: 'WET'\n  }, {\n    text: '(~UTC+02:00) Africa/Blantyre',\n    value: 'Africa/Blantyre',\n    openwrt: 'CAT-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Bujumbura',\n    value: 'Africa/Bujumbura',\n    openwrt: 'CAT-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Cairo',\n    value: 'Africa/Cairo'\n  }, {\n    text: '(~UTC+02:00) Africa/Ceuta',\n    value: 'Africa/Ceuta',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Africa/Gaborone',\n    value: 'Africa/Gaborone',\n    openwrt: 'CAT-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Harare',\n    value: 'Africa/Harare',\n    openwrt: 'CAT-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Johannesburg',\n    value: 'Africa/Johannesburg',\n    openwrt: 'SAST-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Khartoum',\n    value: 'Africa/Khartoum',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+02:00) Africa/Kigali',\n    value: 'Africa/Kigali',\n    openwrt: 'CAT-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Lubumbashi',\n    value: 'Africa/Lubumbashi',\n    openwrt: 'CAT-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Lusaka',\n    value: 'Africa/Lusaka',\n    openwrt: 'CAT-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Maputo',\n    value: 'Africa/Maputo',\n    openwrt: 'CAT-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Maseru',\n    value: 'Africa/Maseru',\n    openwrt: 'SAST-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Mbabane',\n    value: 'Africa/Mbabane',\n    openwrt: 'SAST-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Tripoli',\n    value: 'Africa/Tripoli',\n    openwrt: 'EET-2'\n  }, {\n    text: '(~UTC+02:00) Africa/Windhoek',\n    value: 'Africa/Windhoek',\n    openwrt: 'WAT-1WAST,M9.1.0,M4.1.0'\n  }, {\n    text: '(~UTC+02:00) Antarctica/Troll',\n    value: 'Antarctica/Troll'\n  }, {\n    text: '(~UTC+02:00) Arctic/Longyearbyen',\n    value: 'Arctic/Longyearbyen',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Atlantic/Jan_Mayen',\n    value: 'Atlantic/Jan_Mayen'\n  }, {\n    text: '(~UTC+02:00) CET',\n    value: 'CET'\n  }, {\n    text: '(~UTC+02:00) Egypt',\n    value: 'Egypt'\n  }, {\n    text: '(~UTC+02:00) Etc/GMT-2',\n    value: 'Etc/GMT-2'\n  }, {\n    text: '(~UTC+02:00) Europe/Amsterdam',\n    value: 'Europe/Amsterdam',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Andorra',\n    value: 'Europe/Andorra',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Belgrade',\n    value: 'Europe/Belgrade',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Berlin',\n    value: 'Europe/Berlin',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Bratislava',\n    value: 'Europe/Bratislava',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Brussels',\n    value: 'Europe/Brussels',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Budapest',\n    value: 'Europe/Budapest',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Busingen',\n    value: 'Europe/Busingen'\n  }, {\n    text: '(~UTC+02:00) Europe/Copenhagen',\n    value: 'Europe/Copenhagen',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Gibraltar',\n    value: 'Europe/Gibraltar',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Kaliningrad',\n    value: 'Europe/Kaliningrad',\n    openwrt: 'EET-2EEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Ljubljana',\n    value: 'Europe/Ljubljana',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Luxembourg',\n    value: 'Europe/Luxembourg',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Madrid',\n    value: 'Europe/Madrid',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Malta',\n    value: 'Europe/Malta',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Monaco',\n    value: 'Europe/Monaco',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Oslo',\n    value: 'Europe/Oslo',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Paris',\n    value: 'Europe/Paris',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Podgorica',\n    value: 'Europe/Podgorica',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Prague',\n    value: 'Europe/Prague',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Rome',\n    value: 'Europe/Rome',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/San_Marino',\n    value: 'Europe/San_Marino',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Sarajevo',\n    value: 'Europe/Sarajevo',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Skopje',\n    value: 'Europe/Skopje',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Stockholm',\n    value: 'Europe/Stockholm',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Tirane',\n    value: 'Europe/Tirane',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Vaduz',\n    value: 'Europe/Vaduz',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Vatican',\n    value: 'Europe/Vatican',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Vienna',\n    value: 'Europe/Vienna',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Warsaw',\n    value: 'Europe/Warsaw',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Zagreb',\n    value: 'Europe/Zagreb',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Europe/Zurich',\n    value: 'Europe/Zurich',\n    openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+02:00) Libya',\n    value: 'Libya'\n  }, {\n    text: '(~UTC+02:00) MET',\n    value: 'MET'\n  }, {\n    text: '(~UTC+02:00) Poland',\n    value: 'Poland'\n  }, {\n    text: '(~UTC+02:00) ART',\n    value: 'ART'\n  }, {\n    text: '(~UTC+02:00) CAT',\n    value: 'CAT'\n  }, {\n    text: '(~UTC+02:00) ECT',\n    value: 'ECT'\n  }, {\n    text: '(~UTC+03:00) Africa/Addis_Ababa',\n    value: 'Africa/Addis_Ababa'\n  }, {\n    text: '(~UTC+03:00) Africa/Asmara',\n    value: 'Africa/Asmara',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Africa/Asmera',\n    value: 'Africa/Asmera'\n  }, {\n    text: '(~UTC+03:00) Africa/Dar_es_Salaam',\n    value: 'Africa/Dar_es_Salaam',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Africa/Djibouti',\n    value: 'Africa/Djibouti',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Africa/Juba',\n    value: 'Africa/Juba'\n  }, {\n    text: '(~UTC+03:00) Africa/Kampala',\n    value: 'Africa/Kampala',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Africa/Mogadishu',\n    value: 'Africa/Mogadishu',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Africa/Nairobi',\n    value: 'Africa/Nairobi',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Antarctica/Syowa',\n    value: 'Antarctica/Syowa',\n    openwrt: 'SYOT-3'\n  }, {\n    text: '(~UTC+03:00) Asia/Aden',\n    value: 'Asia/Aden',\n    openwrt: 'AST-3'\n  }, {\n    text: '(~UTC+03:00) Asia/Amman',\n    value: 'Asia/Amman'\n  }, {\n    text: '(~UTC+03:00) Asia/Baghdad',\n    value: 'Asia/Baghdad',\n    openwrt: 'AST-3'\n  }, {\n    text: '(~UTC+03:00) Asia/Bahrain',\n    value: 'Asia/Bahrain',\n    openwrt: 'AST-3'\n  }, {\n    text: '(~UTC+03:00) Asia/Beirut',\n    value: 'Asia/Beirut',\n    openwrt: 'EET-2EEST,M3.5.0/0,M10.5.0/0'\n  }, {\n    text: '(~UTC+03:00) Asia/Damascus',\n    value: 'Asia/Damascus',\n    openwrt: 'EET-2EEST,M4.1.5/0,M10.5.5/0'\n  }, {\n    text: '(~UTC+03:00) Asia/Famagusta',\n    value: 'Asia/Famagusta'\n  }, {\n    text: '(~UTC+03:00) Asia/Gaza',\n    value: 'Asia/Gaza',\n    openwrt: 'EET-2EEST,M3.5.6/0:01,M9.1.5'\n  }, {\n    text: '(~UTC+03:00) Asia/Hebron',\n    value: 'Asia/Hebron'\n  }, {\n    text: '(~UTC+03:00) Asia/Istanbul',\n    value: 'Asia/Istanbul'\n  }, {\n    text: '(~UTC+03:00) Asia/Jerusalem',\n    value: 'Asia/Jerusalem'\n  }, {\n    text: '(~UTC+03:00) Asia/Kuwait',\n    value: 'Asia/Kuwait',\n    openwrt: 'AST-3'\n  }, {\n    text: '(~UTC+03:00) Asia/Nicosia',\n    value: 'Asia/Nicosia',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Asia/Qatar',\n    value: 'Asia/Qatar',\n    openwrt: 'AST-3'\n  }, {\n    text: '(~UTC+03:00) Asia/Riyadh',\n    value: 'Asia/Riyadh',\n    openwrt: 'AST-3'\n  }, {\n    text: '(~UTC+03:00) Asia/Tel_Aviv',\n    value: 'Asia/Tel_Aviv'\n  }, {\n    text: '(~UTC+03:00) EET',\n    value: 'EET'\n  }, {\n    text: '(~UTC+03:00) Etc/GMT-3',\n    value: 'Etc/GMT-3'\n  }, {\n    text: '(~UTC+03:00) Europe/Athens',\n    value: 'Europe/Athens',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Bucharest',\n    value: 'Europe/Bucharest',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Chisinau',\n    value: 'Europe/Chisinau',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Helsinki',\n    value: 'Europe/Helsinki',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Istanbul',\n    value: 'Europe/Istanbul',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Kiev',\n    value: 'Europe/Kiev',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Kirov',\n    value: 'Europe/Kirov'\n  }, {\n    text: '(~UTC+03:00) Europe/Mariehamn',\n    value: 'Europe/Mariehamn',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Minsk',\n    value: 'Europe/Minsk',\n    openwrt: 'EET-2EEST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+03:00) Europe/Moscow',\n    value: 'Europe/Moscow',\n    openwrt: 'MSK-4'\n  }, {\n    text: '(~UTC+03:00) Europe/Nicosia',\n    value: 'Europe/Nicosia'\n  }, {\n    text: '(~UTC+03:00) Europe/Riga',\n    value: 'Europe/Riga',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Simferopol',\n    value: 'Europe/Simferopol',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Sofia',\n    value: 'Europe/Sofia',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Tallinn',\n    value: 'Europe/Tallinn',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Tiraspol',\n    value: 'Europe/Tiraspol'\n  }, {\n    text: '(~UTC+03:00) Europe/Uzhgorod',\n    value: 'Europe/Uzhgorod',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Vilnius',\n    value: 'Europe/Vilnius',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Europe/Zaporozhye',\n    value: 'Europe/Zaporozhye',\n    openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4'\n  }, {\n    text: '(~UTC+03:00) Indian/Antananarivo',\n    value: 'Indian/Antananarivo',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Indian/Comoro',\n    value: 'Indian/Comoro',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Indian/Mayotte',\n    value: 'Indian/Mayotte',\n    openwrt: 'EAT-3'\n  }, {\n    text: '(~UTC+03:00) Israel',\n    value: 'Israel'\n  }, {\n    text: '(~UTC+03:00) Turkey',\n    value: 'Turkey'\n  }, {\n    text: '(~UTC+03:00) W-SU',\n    value: 'W-SU'\n  }, {\n    text: '(~UTC+03:00) EAT',\n    value: 'EAT'\n  }, {\n    text: '(~UTC+04:00) Asia/Baku',\n    value: 'Asia/Baku',\n    openwrt: 'AZT-4AZST,M3.5.0/4,M10.5.0/5'\n  }, {\n    text: '(~UTC+04:00) Asia/Dubai',\n    value: 'Asia/Dubai',\n    openwrt: 'GST-4'\n  }, {\n    text: '(~UTC+04:00) Asia/Muscat',\n    value: 'Asia/Muscat',\n    openwrt: 'GST-4'\n  }, {\n    text: '(~UTC+04:00) Asia/Tbilisi',\n    value: 'Asia/Tbilisi',\n    openwrt: 'GET-4'\n  }, {\n    text: '(~UTC+04:00) Asia/Yerevan',\n    value: 'Asia/Yerevan',\n    openwrt: 'AMT-4AMST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+04:00) Etc/GMT-4',\n    value: 'Etc/GMT-4'\n  }, {\n    text: '(~UTC+04:00) Europe/Astrakhan',\n    value: 'Europe/Astrakhan'\n  }, {\n    text: '(~UTC+04:00) Europe/Samara',\n    value: 'Europe/Samara',\n    openwrt: 'SAMT-3SAMST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+04:00) Europe/Saratov',\n    value: 'Europe/Saratov'\n  }, {\n    text: '(~UTC+04:00) Europe/Ulyanovsk',\n    value: 'Europe/Ulyanovsk'\n  }, {\n    text: '(~UTC+04:00) Europe/Volgograd',\n    value: 'Europe/Volgograd',\n    openwrt: 'VOLT-3VOLST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+04:00) Indian/Mahe',\n    value: 'Indian/Mahe',\n    openwrt: 'SCT-4'\n  }, {\n    text: '(~UTC+04:00) Indian/Mauritius',\n    value: 'Indian/Mauritius',\n    openwrt: 'MUT-4'\n  }, {\n    text: '(~UTC+04:00) Indian/Reunion',\n    value: 'Indian/Reunion',\n    openwrt: 'RET-4'\n  }, {\n    text: '(~UTC+04:00) NET',\n    value: 'NET'\n  }, {\n    text: '(~UTC+04:30) Asia/Kabul',\n    value: 'Asia/Kabul',\n    openwrt: 'AFT-4:30'\n  }, {\n    text: '(~UTC+04:30) Asia/Tehran',\n    value: 'Asia/Tehran',\n    openwrt: 'IRST-3:30IRDT,80/0,264/0'\n  }, {\n    text: '(~UTC+04:30) Iran',\n    value: 'Iran'\n  }, {\n    text: '(~UTC+05:00) Antarctica/Mawson',\n    value: 'Antarctica/Mawson',\n    openwrt: 'MAWT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Aqtau',\n    value: 'Asia/Aqtau',\n    openwrt: 'AQTT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Aqtobe',\n    value: 'Asia/Aqtobe',\n    openwrt: 'AQTT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Ashgabat',\n    value: 'Asia/Ashgabat',\n    openwrt: 'TMT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Ashkhabad',\n    value: 'Asia/Ashkhabad'\n  }, {\n    text: '(~UTC+05:00) Asia/Atyrau',\n    value: 'Asia/Atyrau'\n  }, {\n    text: '(~UTC+05:00) Asia/Dushanbe',\n    value: 'Asia/Dushanbe',\n    openwrt: 'TJT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Karachi',\n    value: 'Asia/Karachi',\n    openwrt: 'PKT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Oral',\n    value: 'Asia/Oral',\n    openwrt: 'ORAT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Samarkand',\n    value: 'Asia/Samarkand',\n    openwrt: 'UZT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Tashkent',\n    value: 'Asia/Tashkent',\n    openwrt: 'UZT-5'\n  }, {\n    text: '(~UTC+05:00) Asia/Yekaterinburg',\n    value: 'Asia/Yekaterinburg',\n    openwrt: 'YEKT-5YEKST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+05:00) Etc/GMT-5',\n    value: 'Etc/GMT-5'\n  }, {\n    text: '(~UTC+05:00) Indian/Kerguelen',\n    value: 'Indian/Kerguelen',\n    openwrt: 'TFT-5'\n  }, {\n    text: '(~UTC+05:00) Indian/Maldives',\n    value: 'Indian/Maldives',\n    openwrt: 'MVT-5'\n  }, {\n    text: '(~UTC+05:00) PLT',\n    value: 'PLT'\n  }, {\n    text: '(~UTC+05:30) Asia/Calcutta',\n    value: 'Asia/Calcutta'\n  }, {\n    text: '(~UTC+05:30) Asia/Colombo',\n    value: 'Asia/Colombo',\n    openwrt: 'IST-5:30'\n  }, {\n    text: '(~UTC+05:30) Asia/Kolkata',\n    value: 'Asia/Kolkata',\n    openwrt: 'IST-5:30'\n  }, {\n    text: '(~UTC+05:30) IST',\n    value: 'IST'\n  }, {\n    text: '(~UTC+05:45) Asia/Kathmandu',\n    value: 'Asia/Kathmandu',\n    openwrt: 'NPT-5:45'\n  }, {\n    text: '(~UTC+05:45) Asia/Katmandu',\n    value: 'Asia/Katmandu'\n  }, {\n    text: '(~UTC+06:00) Antarctica/Vostok',\n    value: 'Antarctica/Vostok',\n    openwrt: 'VOST-6'\n  }, {\n    text: '(~UTC+06:00) Asia/Almaty',\n    value: 'Asia/Almaty',\n    openwrt: 'ALMT-6'\n  }, {\n    text: '(~UTC+06:00) Asia/Bishkek',\n    value: 'Asia/Bishkek',\n    openwrt: 'KGT-6'\n  }, {\n    text: '(~UTC+06:00) Asia/Dacca',\n    value: 'Asia/Dacca'\n  }, {\n    text: '(~UTC+06:00) Asia/Dhaka',\n    value: 'Asia/Dhaka',\n    openwrt: 'BDT-6'\n  }, {\n    text: '(~UTC+06:00) Asia/Kashgar',\n    value: 'Asia/Kashgar',\n    openwrt: 'CST-8'\n  }, {\n    text: '(~UTC+06:00) Asia/Omsk',\n    value: 'Asia/Omsk',\n    openwrt: 'OMST-7'\n  }, {\n    text: '(~UTC+06:00) Asia/Qyzylorda',\n    value: 'Asia/Qyzylorda',\n    openwrt: 'QYZT-6'\n  }, {\n    text: '(~UTC+06:00) Asia/Thimbu',\n    value: 'Asia/Thimbu'\n  }, {\n    text: '(~UTC+06:00) Asia/Thimphu',\n    value: 'Asia/Thimphu',\n    openwrt: 'BTT-6'\n  }, {\n    text: '(~UTC+06:00) Asia/Urumqi',\n    value: 'Asia/Urumqi',\n    openwrt: 'CST-8'\n  }, {\n    text: '(~UTC+06:00) Etc/GMT-6',\n    value: 'Etc/GMT-6'\n  }, {\n    text: '(~UTC+06:00) Indian/Chagos',\n    value: 'Indian/Chagos',\n    openwrt: 'IOT-6'\n  }, {\n    text: '(~UTC+06:00) BST',\n    value: 'BST'\n  }, {\n    text: '(~UTC+06:30) Asia/Rangoon',\n    value: 'Asia/Rangoon',\n    openwrt: 'MMT-6:30'\n  }, {\n    text: '(~UTC+06:30) Asia/Yangon',\n    value: 'Asia/Yangon'\n  }, {\n    text: '(~UTC+06:30) Indian/Cocos',\n    value: 'Indian/Cocos',\n    openwrt: 'CCT-6:30'\n  }, {\n    text: '(~UTC+07:00) Antarctica/Davis',\n    value: 'Antarctica/Davis',\n    openwrt: 'DAVT-7'\n  }, {\n    text: '(~UTC+07:00) Asia/Bangkok',\n    value: 'Asia/Bangkok',\n    openwrt: 'ICT-7'\n  }, {\n    text: '(~UTC+07:00) Asia/Barnaul',\n    value: 'Asia/Barnaul'\n  }, {\n    text: '(~UTC+07:00) Asia/Ho_Chi_Minh',\n    value: 'Asia/Ho_Chi_Minh',\n    openwrt: 'ICT-7'\n  }, {\n    text: '(~UTC+07:00) Asia/Hovd',\n    value: 'Asia/Hovd',\n    openwrt: 'HOVT-7'\n  }, {\n    text: '(~UTC+07:00) Asia/Jakarta',\n    value: 'Asia/Jakarta',\n    openwrt: 'WIT-7'\n  }, {\n    text: '(~UTC+07:00) Asia/Krasnoyarsk',\n    value: 'Asia/Krasnoyarsk',\n    openwrt: 'KRAT-7KRAST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+07:00) Asia/Novokuznetsk',\n    value: 'Asia/Novokuznetsk',\n    openwrt: 'NOVT-6NOVST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+07:00) Asia/Novosibirsk',\n    value: 'Asia/Novosibirsk',\n    openwrt: 'NOVT-6NOVST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+07:00) Asia/Phnom_Penh',\n    value: 'Asia/Phnom_Penh',\n    openwrt: 'ICT-7'\n  }, {\n    text: '(~UTC+07:00) Asia/Pontianak',\n    value: 'Asia/Pontianak',\n    openwrt: 'WIT-7'\n  }, {\n    text: '(~UTC+07:00) Asia/Saigon',\n    value: 'Asia/Saigon'\n  }, {\n    text: '(~UTC+07:00) Asia/Tomsk',\n    value: 'Asia/Tomsk'\n  }, {\n    text: '(~UTC+07:00) Asia/Vientiane',\n    value: 'Asia/Vientiane',\n    openwrt: 'ICT-7'\n  }, {\n    text: '(~UTC+07:00) Etc/GMT-7',\n    value: 'Etc/GMT-7'\n  }, {\n    text: '(~UTC+07:00) Indian/Christmas',\n    value: 'Indian/Christmas',\n    openwrt: 'CXT-7'\n  }, {\n    text: '(~UTC+07:00) VST',\n    value: 'VST'\n  }, {\n    text: '(~UTC+08:00) Antarctica/Casey',\n    value: 'Antarctica/Casey',\n    openwrt: 'WST-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Brunei',\n    value: 'Asia/Brunei',\n    openwrt: 'BNT-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Choibalsan',\n    value: 'Asia/Choibalsan',\n    openwrt: 'CHOT-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Chongqing',\n    value: 'Asia/Chongqing',\n    openwrt: 'CST-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Chungking',\n    value: 'Asia/Chungking'\n  }, {\n    text: '(~UTC+08:00) Asia/Harbin',\n    value: 'Asia/Harbin',\n    openwrt: 'CST-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Hong_Kong',\n    value: 'Asia/Hong_Kong'\n  }, {\n    text: '(~UTC+08:00) Asia/Irkutsk',\n    value: 'Asia/Irkutsk',\n    openwrt: 'IRKT-8IRKST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+08:00) Asia/Kuala_Lumpur',\n    value: 'Asia/Kuala_Lumpur',\n    openwrt: 'MYT-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Kuching',\n    value: 'Asia/Kuching',\n    openwrt: 'MYT-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Macao',\n    value: 'Asia/Macao'\n  }, {\n    text: '(~UTC+08:00) Asia/Macau',\n    value: 'Asia/Macau',\n    openwrt: 'CST-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Makassar',\n    value: 'Asia/Makassar',\n    openwrt: 'CIT-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Manila',\n    value: 'Asia/Manila',\n    openwrt: 'PHT-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Shanghai',\n    value: 'Asia/Shanghai',\n    openwrt: 'CST-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Singapore',\n    value: 'Asia/Singapore',\n    openwrt: 'SGT-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Taipei',\n    value: 'Asia/Taipei',\n    openwrt: 'CST-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Ujung_Pandang',\n    value: 'Asia/Ujung_Pandang'\n  }, {\n    text: '(~UTC+08:00) Asia/Ulaanbaatar',\n    value: 'Asia/Ulaanbaatar',\n    openwrt: 'ULAT-8'\n  }, {\n    text: '(~UTC+08:00) Asia/Ulan_Bator',\n    value: 'Asia/Ulan_Bator'\n  }, {\n    text: '(~UTC+08:00) Australia/Perth',\n    value: 'Australia/Perth',\n    openwrt: 'WST-8'\n  }, {\n    text: '(~UTC+08:00) Australia/West',\n    value: 'Australia/West'\n  }, {\n    text: '(~UTC+08:00) Etc/GMT-8',\n    value: 'Etc/GMT-8'\n  }, {\n    text: '(~UTC+08:00) Hongkong',\n    value: 'Hongkong'\n  }, {\n    text: '(~UTC+08:00) PRC',\n    value: 'PRC'\n  }, {\n    text: '(~UTC+08:00) Singapore',\n    value: 'Singapore'\n  }, {\n    text: '(~UTC+08:00) CTT',\n    value: 'CTT'\n  }, {\n    text: '(~UTC+08:45) Australia/Eucla',\n    value: 'Australia/Eucla',\n    openwrt: 'CWST-8:45'\n  }, {\n    text: '(~UTC+09:00) Asia/Chita',\n    value: 'Asia/Chita'\n  }, {\n    text: '(~UTC+09:00) Asia/Dili',\n    value: 'Asia/Dili',\n    openwrt: 'TLT-9'\n  }, {\n    text: '(~UTC+09:00) Asia/Jayapura',\n    value: 'Asia/Jayapura',\n    openwrt: 'EIT-9'\n  }, {\n    text: '(~UTC+09:00) Asia/Khandyga',\n    value: 'Asia/Khandyga'\n  }, {\n    text: '(~UTC+09:00) Asia/Pyongyang',\n    value: 'Asia/Pyongyang',\n    openwrt: 'KST-9'\n  }, {\n    text: '(~UTC+09:00) Asia/Seoul',\n    value: 'Asia/Seoul',\n    openwrt: 'KST-9'\n  }, {\n    text: '(~UTC+09:00) Asia/Tokyo',\n    value: 'Asia/Tokyo',\n    openwrt: 'JST-9'\n  }, {\n    text: '(~UTC+09:00) Asia/Yakutsk',\n    value: 'Asia/Yakutsk',\n    openwrt: 'YAKT-9YAKST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+09:00) Etc/GMT-9',\n    value: 'Etc/GMT-9'\n  }, {\n    text: '(~UTC+09:00) Japan',\n    value: 'Japan'\n  }, {\n    text: '(~UTC+09:00) Pacific/Palau',\n    value: 'Pacific/Palau',\n    openwrt: 'PWT-9'\n  }, {\n    text: '(~UTC+09:00) ROK',\n    value: 'ROK'\n  }, {\n    text: '(~UTC+09:00) JST',\n    value: 'JST'\n  }, {\n    text: '(~UTC+09:30) Australia/Darwin',\n    value: 'Australia/Darwin',\n    openwrt: 'CST-9:30'\n  }, {\n    text: '(~UTC+09:30) Australia/North',\n    value: 'Australia/North'\n  }, {\n    text: '(~UTC+09:30) ACT',\n    value: 'ACT'\n  }, {\n    text: '(~UTC+10:00) Antarctica/DumontDUrville',\n    value: 'Antarctica/DumontDUrville',\n    openwrt: 'DDUT-10'\n  }, {\n    text: '(~UTC+10:00) Asia/Ust-Nera',\n    value: 'Asia/Ust-Nera'\n  }, {\n    text: '(~UTC+10:00) Asia/Vladivostok',\n    value: 'Asia/Vladivostok',\n    openwrt: 'VLAT-10VLAST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+10:00) Australia/Brisbane',\n    value: 'Australia/Brisbane',\n    openwrt: 'EST-10'\n  }, {\n    text: '(~UTC+10:00) Australia/Lindeman',\n    value: 'Australia/Lindeman',\n    openwrt: 'EST-10'\n  }, {\n    text: '(~UTC+10:00) Australia/Queensland',\n    value: 'Australia/Queensland'\n  }, {\n    text: '(~UTC+10:00) Etc/GMT-10',\n    value: 'Etc/GMT-10'\n  }, {\n    text: '(~UTC+10:00) Pacific/Chuuk',\n    value: 'Pacific/Chuuk'\n  }, {\n    text: '(~UTC+10:00) Pacific/Guam',\n    value: 'Pacific/Guam',\n    openwrt: 'ChST-10'\n  }, {\n    text: '(~UTC+10:00) Pacific/Port_Moresby',\n    value: 'Pacific/Port_Moresby',\n    openwrt: 'PGT-10'\n  }, {\n    text: '(~UTC+10:00) Pacific/Saipan',\n    value: 'Pacific/Saipan',\n    openwrt: 'ChST-10'\n  }, {\n    text: '(~UTC+10:00) Pacific/Truk',\n    value: 'Pacific/Truk',\n    openwrt: 'TRUT-10'\n  }, {\n    text: '(~UTC+10:00) Pacific/Yap',\n    value: 'Pacific/Yap'\n  }, {\n    text: '(~UTC+10:30) Australia/Adelaide',\n    value: 'Australia/Adelaide',\n    openwrt: 'CST-9:30CST,M10.1.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+10:30) Australia/Broken_Hill',\n    value: 'Australia/Broken_Hill',\n    openwrt: 'CST-9:30CST,M10.1.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+10:30) Australia/South',\n    value: 'Australia/South'\n  }, {\n    text: '(~UTC+10:30) Australia/Yancowinna',\n    value: 'Australia/Yancowinna'\n  }, {\n    text: '(~UTC+11:00) Antarctica/Macquarie',\n    value: 'Antarctica/Macquarie',\n    openwrt: 'MIST-11'\n  }, {\n    text: '(~UTC+11:00) Asia/Magadan',\n    value: 'Asia/Magadan',\n    openwrt: 'MAGT-11MAGST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+11:00) Asia/Sakhalin',\n    value: 'Asia/Sakhalin',\n    openwrt: 'SAKT-10SAKST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+11:00) Asia/Srednekolymsk',\n    value: 'Asia/Srednekolymsk'\n  }, {\n    text: '(~UTC+11:00) Australia/ACT',\n    value: 'Australia/ACT'\n  }, {\n    text: '(~UTC+11:00) Australia/Canberra',\n    value: 'Australia/Canberra'\n  }, {\n    text: '(~UTC+11:00) Australia/Currie',\n    value: 'Australia/Currie',\n    openwrt: 'EST-10EST,M10.1.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+11:00) Australia/Hobart',\n    value: 'Australia/Hobart',\n    openwrt: 'EST-10EST,M10.1.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+11:00) Australia/LHI',\n    value: 'Australia/LHI'\n  }, {\n    text: '(~UTC+11:00) Australia/Lord_Howe',\n    value: 'Australia/Lord_Howe',\n    openwrt: 'LHST-10:30LHST-11,M10.1.0,M4.1.0'\n  }, {\n    text: '(~UTC+11:00) Australia/Melbourne',\n    value: 'Australia/Melbourne',\n    openwrt: 'EST-10EST,M10.1.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+11:00) Australia/NSW',\n    value: 'Australia/NSW'\n  }, {\n    text: '(~UTC+11:00) Australia/Sydney',\n    value: 'Australia/Sydney',\n    openwrt: 'EST-10EST,M10.1.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+11:00) Australia/Tasmania',\n    value: 'Australia/Tasmania'\n  }, {\n    text: '(~UTC+11:00) Australia/Victoria',\n    value: 'Australia/Victoria'\n  }, {\n    text: '(~UTC+11:00) Etc/GMT-11',\n    value: 'Etc/GMT-11'\n  }, {\n    text: '(~UTC+11:00) Pacific/Bougainville',\n    value: 'Pacific/Bougainville'\n  }, {\n    text: '(~UTC+11:00) Pacific/Efate',\n    value: 'Pacific/Efate',\n    openwrt: 'VUT-11'\n  }, {\n    text: '(~UTC+11:00) Pacific/Guadalcanal',\n    value: 'Pacific/Guadalcanal',\n    openwrt: 'SBT-11'\n  }, {\n    text: '(~UTC+11:00) Pacific/Kosrae',\n    value: 'Pacific/Kosrae',\n    openwrt: 'KOST-11'\n  }, {\n    text: '(~UTC+11:00) Pacific/Norfolk',\n    value: 'Pacific/Norfolk',\n    openwrt: 'NFT-11:30'\n  }, {\n    text: '(~UTC+11:00) Pacific/Noumea',\n    value: 'Pacific/Noumea',\n    openwrt: 'NCT-11'\n  }, {\n    text: '(~UTC+11:00) Pacific/Pohnpei',\n    value: 'Pacific/Pohnpei'\n  }, {\n    text: '(~UTC+11:00) Pacific/Ponape',\n    value: 'Pacific/Ponape',\n    openwrt: 'PONT-11'\n  }, {\n    text: '(~UTC+11:00) AET',\n    value: 'AET'\n  }, {\n    text: '(~UTC+11:00) SST',\n    value: 'SST'\n  }, {\n    text: '(~UTC+12:00) Asia/Anadyr',\n    value: 'Asia/Anadyr',\n    openwrt: 'ANAT-11ANAST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+12:00) Asia/Kamchatka',\n    value: 'Asia/Kamchatka',\n    openwrt: 'PETT-11PETST,M3.5.0,M10.5.0/3'\n  }, {\n    text: '(~UTC+12:00) Etc/GMT-12',\n    value: 'Etc/GMT-12'\n  }, {\n    text: '(~UTC+12:00) Kwajalein',\n    value: 'Kwajalein'\n  }, {\n    text: '(~UTC+12:00) Pacific/Fiji',\n    value: 'Pacific/Fiji',\n    openwrt: 'FJT-12'\n  }, {\n    text: '(~UTC+12:00) Pacific/Funafuti',\n    value: 'Pacific/Funafuti',\n    openwrt: 'TVT-12'\n  }, {\n    text: '(~UTC+12:00) Pacific/Kwajalein',\n    value: 'Pacific/Kwajalein',\n    openwrt: 'MHT-12'\n  }, {\n    text: '(~UTC+12:00) Pacific/Majuro',\n    value: 'Pacific/Majuro',\n    openwrt: 'MHT-12'\n  }, {\n    text: '(~UTC+12:00) Pacific/Nauru',\n    value: 'Pacific/Nauru',\n    openwrt: 'NRT-12'\n  }, {\n    text: '(~UTC+12:00) Pacific/Tarawa',\n    value: 'Pacific/Tarawa',\n    openwrt: 'GILT-12'\n  }, {\n    text: '(~UTC+12:00) Pacific/Wake',\n    value: 'Pacific/Wake',\n    openwrt: 'WAKT-12'\n  }, {\n    text: '(~UTC+12:00) Pacific/Wallis',\n    value: 'Pacific/Wallis',\n    openwrt: 'WFT-12'\n  }, {\n    text: '(~UTC+13:00) Antarctica/McMurdo',\n    value: 'Antarctica/McMurdo',\n    openwrt: 'NZST-12NZDT,M9.5.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+13:00) Antarctica/South_Pole',\n    value: 'Antarctica/South_Pole',\n    openwrt: 'NZST-12NZDT,M9.5.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+13:00) Etc/GMT-13',\n    value: 'Etc/GMT-13'\n  }, {\n    text: '(~UTC+13:00) NZ',\n    value: 'NZ'\n  }, {\n    text: '(~UTC+13:00) Pacific/Auckland',\n    value: 'Pacific/Auckland',\n    openwrt: 'NZST-12NZDT,M9.5.0,M4.1.0/3'\n  }, {\n    text: '(~UTC+13:00) Pacific/Enderbury',\n    value: 'Pacific/Enderbury',\n    openwrt: 'PHOT-13'\n  }, {\n    text: '(~UTC+13:00) Pacific/Fakaofo',\n    value: 'Pacific/Fakaofo',\n    openwrt: 'TKT10'\n  }, {\n    text: '(~UTC+13:00) Pacific/Tongatapu',\n    value: 'Pacific/Tongatapu',\n    openwrt: 'TOT-13'\n  }, {\n    text: '(~UTC+13:00) NST',\n    value: 'NST'\n  }, {\n    text: '(~UTC+13:45) NZ-CHAT',\n    value: 'NZ-CHAT'\n  }, {\n    text: '(~UTC+13:45) Pacific/Chatham',\n    value: 'Pacific/Chatham',\n    openwrt: 'CHAST-12:45CHADT,M9.5.0/2:45,M4.1.0/3:45'\n  }, {\n    text: '(~UTC+14:00) Etc/GMT-14',\n    value: 'Etc/GMT-14'\n  }, {\n    text: '(~UTC+14:00) Pacific/Apia',\n    value: 'Pacific/Apia',\n    openwrt: 'WST11'\n  }, {\n    text: '(~UTC+14:00) Pacific/Kiritimati',\n    value: 'Pacific/Kiritimati',\n    openwrt: 'LINT-14'\n  }, {\n    text: '(~UTC+14:00) MIT',\n    value: 'MIT'\n  }]\n};\nexport default dates;","map":{"version":3,"names":["captureException","i18n","dates","formatDateFromApi","apiDate","displayTime","arguments","length","undefined","toLowerCase","t","dateValue","getTimestampFromApi","formatDateValueFromApi","dateObject","getDateObject","formatLocaleDate","compareDates","a","b","getComparatorTimestampFromApi","lowercaseApiDate","Date","getTime","apiDateTimestamp","match","replace","split","includes","convertSlashDateToLocaleReady","isNaN","parseInt","_typeof","$date","startsWith","dateAsString","String","date","d","e","getDateTimeString","baseDate","dayCount","setDate","getDate","dateTimeString","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getDateString","dateString","slashdate","slashdateSplit","slashDate","slashTime","slashIsAM","dateItems","addZeroToDate","time","timeItems","hour","dateItem","timeZones","text","value","openwrt"],"sources":["/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/vuntangle/src/plugins/dates.js"],"sourcesContent":["/**\n * This plugin is a collection of methods relevant to date conversion and formatting.\n */\nimport { captureException } from '@sentry/vue'\nimport i18n from './vue-i18n'\n\nconst dates = {\n  /**\n   * Formats the given date from the server API as a readable date.\n   *\n   * if bool return empty string\n   * if number use\n   * if string of number it will work\n   * if there are milliseconds on the time, remove them using split\n   *\n   * @param {any}  apiDate      date returned from a web service call.  May be timestamp, C# serialized date, etc.\n   * @param {bool} displayTime\n   *\n   * @returns {string}  string returned of converted date/time, includes seconds if flag is passed\n   */\n  formatDateFromApi(apiDate, displayTime = true) {\n    // check if the api date came in as 'N/A'\n    if (typeof apiDate === 'string' && apiDate.toLowerCase() === 'n/a') {\n      return i18n.t('global.not_applicable')\n    }\n\n    // check if an api date can be converted to a timestamp\n    let dateValue = this.getTimestampFromApi(apiDate)\n\n    // if the api date could not be convert into a timestamp, try to format a date value\n    if (dateValue === null) {\n      dateValue = this.formatDateValueFromApi(apiDate)\n    }\n\n    // try to convert date value to a date object\n    const dateObject = this.getDateObject(dateValue)\n    if (!dateObject) {\n      return ''\n    }\n\n    // return the date object as a local format\n    return this.formatLocaleDate(dateObject, displayTime)\n  },\n\n  /**\n   * Compare two dates by converting to a timestamp.  Used in ag-grid column comparator.\n   *\n   * @param {any} the first date to compare\n   * @param {any} the second date to compare\n   *\n   * @returns {number}\n   */\n  compareDates(a, b) {\n    return this.getComparatorTimestampFromApi(a) - this.getComparatorTimestampFromApi(b)\n  },\n\n  /**\n   * Get a timestamp from an api date for comparing dates when sorting.\n   *\n   * @param {any} apiDate The api date may be relative or absolute like 'now', 'never', 'n/a'\n   *\n   * @returns {number}\n   */\n  getComparatorTimestampFromApi(apiDate) {\n    // check for valid date\n    if (!apiDate) {\n      return 0\n    }\n\n    // check for relative string dates\n    if (typeof apiDate === 'string') {\n      // check for relative time of 'now'\n      const lowercaseApiDate = apiDate.toLowerCase()\n      if (lowercaseApiDate === 'now') {\n        return new Date().getTime()\n      }\n\n      // check for relative time of 'never'\n      if (lowercaseApiDate === 'never' || lowercaseApiDate === 'n/a') {\n        return 0\n      }\n    }\n\n    // check if the api date is already in a timestamp format\n    const apiDateTimestamp = this.getTimestampFromApi(apiDate)\n    if (apiDateTimestamp !== null) {\n      return apiDateTimestamp\n    }\n\n    // if the apiDate was not a timestamp, try to format a date value and convert to date object\n    const dateValue = this.formatDateValueFromApi(apiDate)\n    const dateObject = this.getDateObject(dateValue)\n    if (!dateObject) {\n      return 0\n    }\n\n    // return date timestamp\n    return dateObject.getTime()\n  },\n\n  /**\n   * Get a formatted date value from an api date.  This can then be used as the constructor of a javascript date\n   * object.\n   *\n   * @param {any} apiDate\n   *\n   * @returns {any}\n   */\n  formatDateValueFromApi(apiDate) {\n    // make sure a string was passed for formatting\n    if (typeof apiDate !== 'string') {\n      return apiDate\n    }\n\n    // e.g. 2019-09-20T12:18:24 remove the T (check for numbers after to not remove T from 'Tue' or 'Thu')\n    if (apiDate.match(/T\\d/)) {\n      return apiDate.replace('T', ' ').split('.')[0]\n    }\n\n    // looks like it is already formatted, return with stripping timezone\n    if (apiDate.includes('-')) {\n      return apiDate.split('.')[0]\n    }\n\n    // e.g. 11/30/2018 7:00:00 AM\n    if (apiDate.includes('/')) {\n      return this.convertSlashDateToLocaleReady(apiDate)\n    }\n\n    return apiDate\n  },\n\n  /**\n   * Get a timestamp from an api date.  There are multiple ways an api date may be formatted for a timestamp.\n   *\n   * @param {any} apiDate\n   *\n   * @returns {number|null}\n   */\n  getTimestampFromApi(apiDate) {\n    // make sure a value was passed\n    if (!apiDate) {\n      return null\n    }\n\n    let dateValue\n\n    switch (true) {\n      // if already number, use it\n      case typeof apiDate === 'number':\n        dateValue = apiDate\n        break\n      // if string as timestamp number, parse\n      case typeof apiDate === 'string' && !isNaN(apiDate):\n        dateValue = parseInt(apiDate)\n        break\n      // if object as timestamp number, parse date inside object\n      case typeof apiDate === 'object':\n        dateValue = parseInt(apiDate.$date)\n        break\n      // if C# serializer DateTime \"/Date(1494957608139)/\" as number, parse it\n      case apiDate.startsWith('/Date'):\n        dateValue = parseInt(apiDate.replace('/Date(', '').replace(')/', ''))\n        break\n      // if none of the cases above, return early\n      default:\n        return null\n    }\n\n    const dateAsString = String(dateValue)\n    // if the timestamp is 13 digits or longer, assume already milliseconds.\n    // if not, assume seconds and convert to ms\n    return dateAsString.length >= 13 ? dateValue : dateValue * 1000\n  },\n\n  /**\n   * Returns a date object or null if a valid date object could not be created correctly.\n   *\n   * @param {any} dateValue possible date value to be passed into a date constructor\n   *\n   * @returns {Date|null}\n   */\n  getDateObject(dateValue) {\n    // make sure a value was passed\n    if (!dateValue) {\n      return null\n    }\n\n    // return null if the date could not be made into a valid object\n    const date = new Date(dateValue)\n    if (isNaN(date.getTime())) {\n      return null\n    }\n\n    return date\n  },\n\n  /**\n   * Returns a locale formatted date from a UTC timestamp\n   * Locale formats are defined in /plugins/vue-i18n.js\n   * @param date - UTC timestamp milliseconds\n   * @param displayTime - boolean to show or not the time part of date\n   */\n  formatLocaleDate(dateObject, displayTime = true) {\n    try {\n      return i18n.d(dateObject, displayTime ? 'long' : 'short')\n    } catch (e) {\n      captureException(e)\n      return ''\n    }\n  },\n\n  /**\n   * Returns a date and time string(yyyy-mm-dd hh:mm:ss) for the specified date\n   * @param baseDate - date to format as a string\n   * @param dayCount - number of days either before or after baseDate to return formatted date string for\n   * @returns {string} - date string formatted as yyyy-mm-dd hh:mm:ss\n   */\n  getDateTimeString(baseDate, dayCount) {\n    const date = new Date(new Date().setDate(baseDate.getDate() + dayCount))\n    const dateTimeString =\n      date.getUTCFullYear() +\n      '-' +\n      ('0' + (date.getUTCMonth() + 1)).slice(-2) +\n      '-' +\n      ('0' + date.getUTCDate()).slice(-2) +\n      ' ' +\n      ('0' + date.getUTCHours()).slice(-2) +\n      ':' +\n      ('0' + date.getUTCMinutes()).slice(-2) +\n      ':' +\n      ('0' + date.getUTCSeconds()).slice(-2)\n    return dateTimeString\n  },\n\n  /**\n   * Returns a date string (yyyy-mm-dd) for a date.\n   * @param baseDate - date to format as a string\n   * @param dayCount - number of days either before or after baseDate to return formatted date string for\n   * @returns {string} - date string formatted as yyyy-mm-dd\n   */\n  getDateString(baseDate, dayCount) {\n    const date = new Date(new Date().setDate(baseDate.getDate() + dayCount))\n    const dateString =\n      date.getUTCFullYear() +\n      '-' +\n      ('0' + (date.getUTCMonth() + 1)).slice(-2) +\n      '-' +\n      ('0' + date.getUTCDate()).slice(-2)\n    return dateString\n  },\n\n  /**\n   * Converts a date format of MM/DD/YYYY HH:MM:SS AM/PM to YYYY-MM-DD HH:MM:SS\n   * so formatLocaleDate can process properly\n   * @param {*} slashdate - date that needs to be converted to proper format\n   */\n  convertSlashDateToLocaleReady(slashdate) {\n    if (!slashdate) {\n      return false\n    }\n    const slashdateSplit = slashdate.split(' ')\n    const slashDate = slashdateSplit[0]\n    const slashTime = slashdateSplit[1]\n    const slashIsAM = slashdateSplit[2] === 'AM'\n\n    // convert date to YYYY-mm-dd\n    const dateItems = slashDate.split('/')\n    const date = dateItems[2] + '-' + this.addZeroToDate(dateItems[0]) + '-' + this.addZeroToDate(dateItems[1]) + ' '\n\n    // convert time to military time\n    let time = slashTime\n    if (!slashIsAM) {\n      const timeItems = slashTime.split(':')\n      const hour = parseInt(timeItems[0]) + 12\n      time = hour + ':' + timeItems[1] + ':' + timeItems[2]\n    }\n\n    return date + time\n  },\n\n  /**\n   * Used by convertSlashDateToLocaleReady. A month or day needs at least two digits to be formatted properly\n   * this ensures that the month/day has that\n   * @param {*} dateItem - month or day that needs to be checked for validity\n   */\n  addZeroToDate(dateItem) {\n    if (dateItem.length === 1) {\n      return '0' + dateItem\n    }\n    return dateItem\n  },\n\n  timeZones: [\n    { text: '(~UTC-12:00) Etc/GMT+12', value: 'Etc/GMT+12' },\n    { text: '(~UTC-11:00) Etc/GMT+11', value: 'Etc/GMT+11' },\n    { text: '(~UTC-11:00) Pacific/Midway', value: 'Pacific/Midway', openwrt: 'SST11' },\n    { text: '(~UTC-11:00) Pacific/Niue', value: 'Pacific/Niue', openwrt: 'NUT11' },\n    { text: '(~UTC-11:00) Pacific/Pago_Pago', value: 'Pacific/Pago_Pago', openwrt: 'SST11' },\n    { text: '(~UTC-11:00) Pacific/Samoa', value: 'Pacific/Samoa' },\n    { text: '(~UTC-11:00) US/Samoa', value: 'US/Samoa' },\n    { text: '(~UTC-10:00) Etc/GMT+10', value: 'Etc/GMT+10' },\n    { text: '(~UTC-10:00) Pacific/Honolulu', value: 'Pacific/Honolulu', openwrt: 'HST10' },\n    { text: '(~UTC-10:00) Pacific/Johnston', value: 'Pacific/Johnston', openwrt: 'HST10' },\n    { text: '(~UTC-10:00) Pacific/Rarotonga', value: 'Pacific/Rarotonga', openwrt: 'CKT10' },\n    { text: '(~UTC-10:00) Pacific/Tahiti', value: 'Pacific/Tahiti', openwrt: 'TAHT10' },\n    { text: '(~UTC-10:00) SystemV/HST10', value: 'SystemV/HST10' },\n    { text: '(~UTC-10:00) US/Hawaii', value: 'US/Hawaii' },\n    { text: '(~UTC-10:00) HST', value: 'HST' },\n    { text: '(~UTC-09:30) Pacific/Marquesas', value: 'Pacific/Marquesas', openwrt: 'MART9:30' },\n    { text: '(~UTC-09:00) America/Adak', value: 'America/Adak', openwrt: 'HAST10HADT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-09:00) America/Atka', value: 'America/Atka' },\n    { text: '(~UTC-09:00) Etc/GMT+9', value: 'Etc/GMT+9' },\n    { text: '(~UTC-09:00) Pacific/Gambier', value: 'Pacific/Gambier', openwrt: 'GAMT9' },\n    { text: '(~UTC-09:00) SystemV/YST9', value: 'SystemV/YST9' },\n    { text: '(~UTC-09:00) SystemV/YST9YDT', value: 'SystemV/YST9YDT' },\n    { text: '(~UTC-09:00) US/Aleutian', value: 'US/Aleutian' },\n    { text: '(~UTC-08:00) America/Anchorage', value: 'America/Anchorage', openwrt: 'AKST9AKDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-08:00) America/Juneau', value: 'America/Juneau', openwrt: 'AKST9AKDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-08:00) America/Metlakatla', value: 'America/Metlakatla' },\n    { text: '(~UTC-08:00) America/Nome', value: 'America/Nome', openwrt: 'AKST9AKDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-08:00) America/Sitka', value: 'America/Sitka' },\n    { text: '(~UTC-08:00) America/Yakutat', value: 'America/Yakutat', openwrt: 'AKST9AKDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-08:00) Etc/GMT+8', value: 'Etc/GMT+8' },\n    { text: '(~UTC-08:00) Pacific/Pitcairn', value: 'Pacific/Pitcairn', openwrt: 'PST8' },\n    { text: '(~UTC-08:00) SystemV/PST8', value: 'SystemV/PST8' },\n    { text: '(~UTC-08:00) SystemV/PST8PDT', value: 'SystemV/PST8PDT' },\n    { text: '(~UTC-08:00) US/Alaska', value: 'US/Alaska' },\n    { text: '(~UTC-08:00) AST', value: 'AST' },\n    { text: '(~UTC-07:00) America/Chihuahua', value: 'America/Chihuahua', openwrt: 'MST7MDT,M4.1.0,M10.5.0' },\n    { text: '(~UTC-07:00) America/Creston', value: 'America/Creston' },\n    { text: '(~UTC-07:00) America/Dawson', value: 'America/Dawson', openwrt: 'PST8PDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-07:00) America/Dawson_Creek', value: 'America/Dawson_Creek', openwrt: 'MST7' },\n    { text: '(~UTC-07:00) America/Ensenada', value: 'America/Ensenada' },\n    { text: '(~UTC-07:00) America/Fort_Nelson', value: 'America/Fort_Nelson' },\n    { text: '(~UTC-07:00) America/Hermosillo', value: 'America/Hermosillo', openwrt: 'MST7' },\n    { text: '(~UTC-07:00) America/Los_Angeles', value: 'America/Los_Angeles', openwrt: 'PST8PDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-07:00) America/Mazatlan', value: 'America/Mazatlan', openwrt: 'MST7MDT,M4.1.0,M10.5.0' },\n    { text: '(~UTC-07:00) America/Phoenix', value: 'America/Phoenix', openwrt: 'MST7' },\n    {\n      text: '(~UTC-07:00) America/Santa_Isabel',\n      value: 'America/Santa_Isabel',\n      openwrt: 'PST8PDT,M4.1.0,M10.5.0',\n    },\n    { text: '(~UTC-07:00) America/Tijuana', value: 'America/Tijuana', openwrt: 'PST8PDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-07:00) America/Vancouver', value: 'America/Vancouver', openwrt: 'PST8PDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-07:00) America/Whitehorse', value: 'America/Whitehorse', openwrt: 'PST8PDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-07:00) Canada/Pacific', value: 'Canada/Pacific' },\n    { text: '(~UTC-07:00) Canada/Yukon', value: 'Canada/Yukon' },\n    { text: '(~UTC-07:00) Etc/GMT+7', value: 'Etc/GMT+7' },\n    { text: '(~UTC-07:00) Mexico/BajaNorte', value: 'Mexico/BajaNorte' },\n    { text: '(~UTC-07:00) Mexico/BajaSur', value: 'Mexico/BajaSur' },\n    { text: '(~UTC-07:00) PST8PDT', value: 'PST8PDT' },\n    { text: '(~UTC-07:00) SystemV/MST7', value: 'SystemV/MST7' },\n    { text: '(~UTC-07:00) SystemV/MST7MDT', value: 'SystemV/MST7MDT' },\n    { text: '(~UTC-07:00) US/Arizona', value: 'US/Arizona' },\n    { text: '(~UTC-07:00) US/Pacific', value: 'US/Pacific' },\n    { text: '(~UTC-07:00) US/Pacific-New', value: 'US/Pacific-New' },\n    { text: '(~UTC-07:00) MST', value: 'MST' },\n    { text: '(~UTC-07:00) PNT', value: 'PNT' },\n    { text: '(~UTC-07:00) PST', value: 'PST' },\n    { text: '(~UTC-06:00) America/Bahia_Banderas', value: 'America/Bahia_Banderas' },\n    { text: '(~UTC-06:00) America/Belize', value: 'America/Belize', openwrt: 'CST6' },\n    { text: '(~UTC-06:00) America/Boise', value: 'America/Boise', openwrt: 'MST7MDT,M3.2.0,M11.1.0' },\n    {\n      text: '(~UTC-06:00) America/Cambridge_Bay',\n      value: 'America/Cambridge_Bay',\n      openwrt: 'MST7MDT,M3.2.0,M11.1.0',\n    },\n    { text: '(~UTC-06:00) America/Costa_Rica', value: 'America/Costa_Rica', openwrt: 'CST6' },\n    { text: '(~UTC-06:00) America/Denver', value: 'America/Denver', openwrt: 'MST7MDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-06:00) America/Edmonton', value: 'America/Edmonton', openwrt: 'MST7MDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-06:00) America/El_Salvador', value: 'America/El_Salvador', openwrt: 'CST6' },\n    { text: '(~UTC-06:00) America/Guatemala', value: 'America/Guatemala', openwrt: 'CST6' },\n    { text: '(~UTC-06:00) America/Inuvik', value: 'America/Inuvik', openwrt: 'MST7MDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-06:00) America/Managua', value: 'America/Managua', openwrt: 'CST6' },\n    { text: '(~UTC-06:00) America/Merida', value: 'America/Merida', openwrt: 'CST6CDT,M4.1.0,M10.5.0' },\n    { text: '(~UTC-06:00) America/Mexico_City', value: 'America/Mexico_City', openwrt: 'CST6CDT,M4.1.0,M10.5.0' },\n    { text: '(~UTC-06:00) America/Monterrey', value: 'America/Monterrey', openwrt: 'CST6CDT,M4.1.0,M10.5.0' },\n    { text: '(~UTC-06:00) America/Ojinaga', value: 'America/Ojinaga', openwrt: 'MST7MDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-06:00) America/Regina', value: 'America/Regina', openwrt: 'CST6' },\n    { text: '(~UTC-06:00) America/Shiprock', value: 'America/Shiprock', openwrt: 'MST7MDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-06:00) America/Swift_Current', value: 'America/Swift_Current', openwrt: 'CST6' },\n    { text: '(~UTC-06:00) America/Tegucigalpa', value: 'America/Tegucigalpa', openwrt: 'CST6' },\n    { text: '(~UTC-06:00) America/Yellowknife', value: 'America/Yellowknife', openwrt: 'MST7MDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-06:00) Canada/Mountain', value: 'Canada/Mountain' },\n    { text: '(~UTC-06:00) Canada/Saskatchewan', value: 'Canada/Saskatchewan' },\n    { text: '(~UTC-06:00) Etc/GMT+6', value: 'Etc/GMT+6' },\n    { text: '(~UTC-06:00) MST7MDT', value: 'MST7MDT' },\n    { text: '(~UTC-06:00) Mexico/General', value: 'Mexico/General' },\n    { text: '(~UTC-06:00) Navajo', value: 'Navajo' },\n    { text: '(~UTC-06:00) Pacific/Galapagos', value: 'Pacific/Galapagos', openwrt: 'GALT6' },\n    { text: '(~UTC-06:00) SystemV/CST6', value: 'SystemV/CST6' },\n    { text: '(~UTC-06:00) SystemV/CST6CDT', value: 'SystemV/CST6CDT' },\n    { text: '(~UTC-06:00) US/Mountain', value: 'US/Mountain' },\n    { text: '(~UTC-05:00) America/Atikokan', value: 'America/Atikokan', openwrt: 'EST5' },\n    { text: '(~UTC-05:00) America/Bogota', value: 'America/Bogota', openwrt: 'COT5' },\n    { text: '(~UTC-05:00) America/Cancun', value: 'America/Cancun', openwrt: 'CST6CDT,M4.1.0,M10.5.0' },\n    { text: '(~UTC-05:00) America/Cayman', value: 'America/Cayman', openwrt: 'EST5' },\n    { text: '(~UTC-05:00) America/Chicago', value: 'America/Chicago', openwrt: 'CST6CDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-05:00) America/Coral_Harbour', value: 'America/Coral_Harbour' },\n    { text: '(~UTC-05:00) America/Eirunepe', value: 'America/Eirunepe', openwrt: 'AMT4' },\n    { text: '(~UTC-05:00) America/Guayaquil', value: 'America/Guayaquil', openwrt: 'ECT5' },\n    {\n      text: '(~UTC-05:00) America/Indiana/Knox',\n      value: 'America/Indiana/Knox',\n      openwrt: 'CST6CDT,M3.2.0,M11.1.0',\n    },\n    {\n      text: '(~UTC-05:00) America/Indiana/Tell_City',\n      value: 'America/Indiana/Tell_City',\n      openwrt: 'CST6CDT,M3.2.0,M11.1.0',\n    },\n    { text: '(~UTC-05:00) America/Jamaica', value: 'America/Jamaica', openwrt: 'EST5' },\n    { text: '(~UTC-05:00) America/Knox_IN', value: 'America/Knox_IN' },\n    { text: '(~UTC-05:00) America/Lima', value: 'America/Lima', openwrt: 'PET5' },\n    { text: '(~UTC-05:00) America/Matamoros', value: 'America/Matamoros', openwrt: 'CST6CDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-05:00) America/Menominee', value: 'America/Menominee', openwrt: 'CST6CDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-05:00) America/North_Dakota/Beulah', value: 'America/North_Dakota/Beulah' },\n    {\n      text: '(~UTC-05:00) America/North_Dakota/Center',\n      value: 'America/North_Dakota/Center',\n      openwrt: 'CST6CDT,M3.2.0,M11.1.0',\n    },\n    {\n      text: '(~UTC-05:00) America/North_Dakota/New_Salem',\n      value: 'America/North_Dakota/New_Salem',\n      openwrt: 'CST6CDT,M3.2.0,M11.1.0',\n    },\n    { text: '(~UTC-05:00) America/Panama', value: 'America/Panama', openwrt: 'EST5' },\n    { text: '(~UTC-05:00) America/Porto_Acre', value: 'America/Porto_Acre' },\n    { text: '(~UTC-05:00) America/Rainy_River', value: 'America/Rainy_River', openwrt: 'CST6CDT,M3.2.0,M11.1.0' },\n    {\n      text: '(~UTC-05:00) America/Rankin_Inlet',\n      value: 'America/Rankin_Inlet',\n      openwrt: 'CST6CDT,M3.2.0,M11.1.0',\n    },\n    { text: '(~UTC-05:00) America/Resolute', value: 'America/Resolute' },\n    { text: '(~UTC-05:00) America/Rio_Branco', value: 'America/Rio_Branco', openwrt: 'AMT4' },\n    { text: '(~UTC-05:00) America/Winnipeg', value: 'America/Winnipeg', openwrt: 'CST6CDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-05:00) Brazil/Acre', value: 'Brazil/Acre' },\n    { text: '(~UTC-05:00) CST6CDT', value: 'CST6CDT' },\n    { text: '(~UTC-05:00) Canada/Central', value: 'Canada/Central' },\n    { text: '(~UTC-05:00) Chile/EasterIsland', value: 'Chile/EasterIsland' },\n    { text: '(~UTC-05:00) Etc/GMT+5', value: 'Etc/GMT+5' },\n    { text: '(~UTC-05:00) Jamaica', value: 'Jamaica' },\n    { text: '(~UTC-05:00) Pacific/Easter', value: 'Pacific/Easter' },\n    { text: '(~UTC-05:00) SystemV/EST5', value: 'SystemV/EST5' },\n    { text: '(~UTC-05:00) SystemV/EST5EDT', value: 'SystemV/EST5EDT' },\n    { text: '(~UTC-05:00) US/Central', value: 'US/Central' },\n    { text: '(~UTC-05:00) US/Indiana-Starke', value: 'US/Indiana-Starke' },\n    { text: '(~UTC-05:00) EST', value: 'EST' },\n    { text: '(~UTC-05:00) CST', value: 'CST' },\n    { text: '(~UTC-04:00) America/Anguilla', value: 'America/Anguilla', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Antigua', value: 'America/Antigua', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Aruba', value: 'America/Aruba', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Asuncion', value: 'America/Asuncion', openwrt: 'PYT4PYST,M10.1.0/0,M4.2.0/0' },\n    { text: '(~UTC-04:00) America/Barbados', value: 'America/Barbados', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Blanc-Sablon', value: 'America/Blanc-Sablon', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Boa_Vista', value: 'America/Boa_Vista', openwrt: 'AMT4' },\n    {\n      text: '(~UTC-04:00) America/Campo_Grande',\n      value: 'America/Campo_Grande',\n      openwrt: 'AMT4AMST,M10.3.0/0,M2.3.0/0',\n    },\n    { text: '(~UTC-04:00) America/Caracas', value: 'America/Caracas', openwrt: 'VET4:30' },\n    { text: '(~UTC-04:00) America/Cuiaba', value: 'America/Cuiaba', openwrt: 'AMT4AMST,M10.3.0/0,M2.3.0/0' },\n    { text: '(~UTC-04:00) America/Curacao', value: 'America/Curacao', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Detroit', value: 'America/Detroit', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/Dominica', value: 'America/Dominica', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Fort_Wayne', value: 'America/Fort_Wayne' },\n    { text: '(~UTC-04:00) America/Grand_Turk', value: 'America/Grand_Turk', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/Grenada', value: 'America/Grenada', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Guadeloupe', value: 'America/Guadeloupe', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Guyana', value: 'America/Guyana', openwrt: 'GYT4' },\n    { text: '(~UTC-04:00) America/Havana', value: 'America/Havana', openwrt: 'CST5CDT,M3.2.0/0,M10.5.0/1' },\n    {\n      text: '(~UTC-04:00) America/Indiana/Indianapolis',\n      value: 'America/Indiana/Indianapolis',\n      openwrt: 'EST5EDT,M3.2.0,M11.1.0',\n    },\n    {\n      text: '(~UTC-04:00) America/Indiana/Marengo',\n      value: 'America/Indiana/Marengo',\n      openwrt: 'EST5EDT,M3.2.0,M11.1.0',\n    },\n    {\n      text: '(~UTC-04:00) America/Indiana/Petersburg',\n      value: 'America/Indiana/Petersburg',\n      openwrt: 'EST5EDT,M3.2.0,M11.1.0',\n    },\n    {\n      text: '(~UTC-04:00) America/Indiana/Vevay',\n      value: 'America/Indiana/Vevay',\n      openwrt: 'EST5EDT,M3.2.0,M11.1.0',\n    },\n    {\n      text: '(~UTC-04:00) America/Indiana/Vincennes',\n      value: 'America/Indiana/Vincennes',\n      openwrt: 'EST5EDT,M3.2.0,M11.1.0',\n    },\n    {\n      text: '(~UTC-04:00) America/Indiana/Winamac',\n      value: 'America/Indiana/Winamac',\n      openwrt: 'EST5EDT,M3.2.0,M11.1.0',\n    },\n    { text: '(~UTC-04:00) America/Indianapolis', value: 'America/Indianapolis' },\n    { text: '(~UTC-04:00) America/Iqaluit', value: 'America/Iqaluit', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    {\n      text: '(~UTC-04:00) America/Kentucky/Louisville',\n      value: 'America/Kentucky/Louisville',\n      openwrt: 'EST5EDT,M3.2.0,M11.1.0',\n    },\n    {\n      text: '(~UTC-04:00) America/Kentucky/Monticello',\n      value: 'America/Kentucky/Monticello',\n      openwrt: 'EST5EDT,M3.2.0,M11.1.0',\n    },\n    { text: '(~UTC-04:00) America/Kralendijk', value: 'America/Kralendijk' },\n    { text: '(~UTC-04:00) America/La_Paz', value: 'America/La_Paz', openwrt: 'BOT4' },\n    { text: '(~UTC-04:00) America/Louisville', value: 'America/Louisville' },\n    { text: '(~UTC-04:00) America/Lower_Princes', value: 'America/Lower_Princes' },\n    { text: '(~UTC-04:00) America/Manaus', value: 'America/Manaus', openwrt: 'AMT4' },\n    { text: '(~UTC-04:00) America/Marigot', value: 'America/Marigot', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Martinique', value: 'America/Martinique', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Montreal', value: 'America/Montreal', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/Montserrat', value: 'America/Montserrat', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Nassau', value: 'America/Nassau', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/New_York', value: 'America/New_York', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/Nipigon', value: 'America/Nipigon', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/Pangnirtung', value: 'America/Pangnirtung', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/Port-au-Prince', value: 'America/Port-au-Prince', openwrt: 'EST5' },\n    { text: '(~UTC-04:00) America/Port_of_Spain', value: 'America/Port_of_Spain', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Porto_Velho', value: 'America/Porto_Velho', openwrt: 'AMT4' },\n    { text: '(~UTC-04:00) America/Puerto_Rico', value: 'America/Puerto_Rico', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Santo_Domingo', value: 'America/Santo_Domingo', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/St_Barthelemy', value: 'America/St_Barthelemy', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/St_Kitts', value: 'America/St_Kitts', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/St_Lucia', value: 'America/St_Lucia', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/St_Thomas', value: 'America/St_Thomas', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/St_Vincent', value: 'America/St_Vincent', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Thunder_Bay', value: 'America/Thunder_Bay', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/Toronto', value: 'America/Toronto', openwrt: 'EST5EDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-04:00) America/Tortola', value: 'America/Tortola', openwrt: 'AST4' },\n    { text: '(~UTC-04:00) America/Virgin', value: 'America/Virgin' },\n    { text: '(~UTC-04:00) Brazil/West', value: 'Brazil/West' },\n    { text: '(~UTC-04:00) Canada/Eastern', value: 'Canada/Eastern' },\n    { text: '(~UTC-04:00) Cuba', value: 'Cuba' },\n    { text: '(~UTC-04:00) EST5EDT', value: 'EST5EDT' },\n    { text: '(~UTC-04:00) Etc/GMT+4', value: 'Etc/GMT+4' },\n    { text: '(~UTC-04:00) SystemV/AST4', value: 'SystemV/AST4' },\n    { text: '(~UTC-04:00) SystemV/AST4ADT', value: 'SystemV/AST4ADT' },\n    { text: '(~UTC-04:00) US/East-Indiana', value: 'US/East-Indiana' },\n    { text: '(~UTC-04:00) US/Eastern', value: 'US/Eastern' },\n    { text: '(~UTC-04:00) US/Michigan', value: 'US/Michigan' },\n    { text: '(~UTC-04:00) IET', value: 'IET' },\n    { text: '(~UTC-04:00) PRT', value: 'PRT' },\n    { text: '(~UTC-03:00) America/Araguaina', value: 'America/Araguaina', openwrt: 'BRT3' },\n    {\n      text: '(~UTC-03:00) America/Argentina/Buenos_Aires',\n      value: 'America/Argentina/Buenos_Aires',\n      openwrt: 'ART3',\n    },\n    { text: '(~UTC-03:00) America/Argentina/Catamarca', value: 'America/Argentina/Catamarca', openwrt: 'ART3' },\n    { text: '(~UTC-03:00) America/Argentina/ComodRivadavia', value: 'America/Argentina/ComodRivadavia' },\n    { text: '(~UTC-03:00) America/Argentina/Cordoba', value: 'America/Argentina/Cordoba', openwrt: 'ART3' },\n    { text: '(~UTC-03:00) America/Argentina/Jujuy', value: 'America/Argentina/Jujuy', openwrt: 'ART3' },\n    { text: '(~UTC-03:00) America/Argentina/La_Rioja', value: 'America/Argentina/La_Rioja', openwrt: 'ART3' },\n    { text: '(~UTC-03:00) America/Argentina/Mendoza', value: 'America/Argentina/Mendoza', openwrt: 'ART3' },\n    {\n      text: '(~UTC-03:00) America/Argentina/Rio_Gallegos',\n      value: 'America/Argentina/Rio_Gallegos',\n      openwrt: 'ART3',\n    },\n    { text: '(~UTC-03:00) America/Argentina/Salta', value: 'America/Argentina/Salta', openwrt: 'ART3' },\n    { text: '(~UTC-03:00) America/Argentina/San_Juan', value: 'America/Argentina/San_Juan', openwrt: 'ART3' },\n    { text: '(~UTC-03:00) America/Argentina/San_Luis', value: 'America/Argentina/San_Luis' },\n    { text: '(~UTC-03:00) America/Argentina/Tucuman', value: 'America/Argentina/Tucuman', openwrt: 'ART3' },\n    { text: '(~UTC-03:00) America/Argentina/Ushuaia', value: 'America/Argentina/Ushuaia', openwrt: 'ART3' },\n    { text: '(~UTC-03:00) America/Bahia', value: 'America/Bahia', openwrt: 'BRT3' },\n    { text: '(~UTC-03:00) America/Belem', value: 'America/Belem', openwrt: 'BRT3' },\n    { text: '(~UTC-03:00) America/Buenos_Aires', value: 'America/Buenos_Aires' },\n    { text: '(~UTC-03:00) America/Catamarca', value: 'America/Catamarca' },\n    { text: '(~UTC-03:00) America/Cayenne', value: 'America/Cayenne', openwrt: 'GFT3' },\n    { text: '(~UTC-03:00) America/Cordoba', value: 'America/Cordoba' },\n    { text: '(~UTC-03:00) America/Fortaleza', value: 'America/Fortaleza', openwrt: 'BRT3' },\n    { text: '(~UTC-03:00) America/Glace_Bay', value: 'America/Glace_Bay', openwrt: 'AST4ADT,M3.2.0,M11.1.0' },\n    {\n      text: '(~UTC-03:00) America/Goose_Bay',\n      value: 'America/Goose_Bay',\n      openwrt: 'AST4ADT,M3.2.0/0:01,M11.1.0/0:01',\n    },\n    { text: '(~UTC-03:00) America/Halifax', value: 'America/Halifax', openwrt: 'AST4ADT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-03:00) America/Jujuy', value: 'America/Jujuy' },\n    { text: '(~UTC-03:00) America/Maceio', value: 'America/Maceio', openwrt: 'BRT3' },\n    { text: '(~UTC-03:00) America/Mendoza', value: 'America/Mendoza' },\n    { text: '(~UTC-03:00) America/Moncton', value: 'America/Moncton', openwrt: 'AST4ADT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-03:00) America/Montevideo', value: 'America/Montevideo', openwrt: 'UYT3UYST,M10.1.0,M3.2.0' },\n    { text: '(~UTC-03:00) America/Paramaribo', value: 'America/Paramaribo', openwrt: 'SRT3' },\n    { text: '(~UTC-03:00) America/Punta_Arenas', value: 'America/Punta_Arenas' },\n    { text: '(~UTC-03:00) America/Recife', value: 'America/Recife', openwrt: 'BRT3' },\n    { text: '(~UTC-03:00) America/Rosario', value: 'America/Rosario' },\n    { text: '(~UTC-03:00) America/Santarem', value: 'America/Santarem', openwrt: 'BRT3' },\n    { text: '(~UTC-03:00) America/Santiago', value: 'America/Santiago' },\n    {\n      text: '(~UTC-03:00) America/Sao_Paulo',\n      value: 'America/Sao_Paulo',\n      openwrt: 'BRT3BRST,M10.3.0/0,M2.3.0/0',\n    },\n    { text: '(~UTC-03:00) America/Thule', value: 'America/Thule', openwrt: 'AST4ADT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-03:00) Antarctica/Palmer', value: 'Antarctica/Palmer' },\n    { text: '(~UTC-03:00) Antarctica/Rothera', value: 'Antarctica/Rothera', openwrt: 'ROTT3' },\n    { text: '(~UTC-03:00) Atlantic/Bermuda', value: 'Atlantic/Bermuda', openwrt: 'AST4ADT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-03:00) Atlantic/Stanley', value: 'Atlantic/Stanley', openwrt: 'FKT4FKST,M9.1.0,M4.3.0' },\n    { text: '(~UTC-03:00) Brazil/East', value: 'Brazil/East' },\n    { text: '(~UTC-03:00) Canada/Atlantic', value: 'Canada/Atlantic' },\n    { text: '(~UTC-03:00) Chile/Continental', value: 'Chile/Continental' },\n    { text: '(~UTC-03:00) Etc/GMT+3', value: 'Etc/GMT+3' },\n    { text: '(~UTC-03:00) AGT', value: 'AGT' },\n    { text: '(~UTC-03:00) BET', value: 'BET' },\n    {\n      text: '(~UTC-02:30) America/St_Johns',\n      value: 'America/St_Johns',\n      openwrt: 'NST3:30NDT,M3.2.0/0:01,M11.1.0/0:01',\n    },\n    { text: '(~UTC-02:30) Canada/Newfoundland', value: 'Canada/Newfoundland' },\n    { text: '(~UTC-02:30) CNT', value: 'CNT' },\n    { text: '(~UTC-02:00) America/Godthab', value: 'America/Godthab' },\n    { text: '(~UTC-02:00) America/Miquelon', value: 'America/Miquelon', openwrt: 'PMST3PMDT,M3.2.0,M11.1.0' },\n    { text: '(~UTC-02:00) America/Noronha', value: 'America/Noronha', openwrt: 'FNT2' },\n    { text: '(~UTC-02:00) Atlantic/South_Georgia', value: 'Atlantic/South_Georgia', openwrt: 'GST2' },\n    { text: '(~UTC-02:00) Brazil/DeNoronha', value: 'Brazil/DeNoronha' },\n    { text: '(~UTC-02:00) Etc/GMT+2', value: 'Etc/GMT+2' },\n    { text: '(~UTC-01:00) Atlantic/Cape_Verde', value: 'Atlantic/Cape_Verde', openwrt: 'CVT1' },\n    { text: '(~UTC-01:00) Etc/GMT+1', value: 'Etc/GMT+1' },\n    { text: '(~UTC+00:00) Africa/Abidjan', value: 'Africa/Abidjan', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Accra', value: 'Africa/Accra', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Bamako', value: 'Africa/Bamako', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Banjul', value: 'Africa/Banjul', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Bissau', value: 'Africa/Bissau', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Conakry', value: 'Africa/Conakry', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Dakar', value: 'Africa/Dakar', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Freetown', value: 'Africa/Freetown', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Lome', value: 'Africa/Lome', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Monrovia', value: 'Africa/Monrovia', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Nouakchott', value: 'Africa/Nouakchott', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Ouagadougou', value: 'Africa/Ouagadougou', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Africa/Timbuktu', value: 'Africa/Timbuktu' },\n    { text: '(~UTC+00:00) America/Danmarkshavn', value: 'America/Danmarkshavn', openwrt: 'GMT0' },\n    {\n      text: '(~UTC+00:00) America/Scoresbysund',\n      value: 'America/Scoresbysund',\n      openwrt: 'EGT1EGST,M3.5.0/0,M10.5.0/1',\n    },\n    { text: '(~UTC+00:00) Atlantic/Azores', value: 'Atlantic/Azores', openwrt: 'AZOT1AZOST,M3.5.0/0,M10.5.0/1' },\n    { text: '(~UTC+00:00) Atlantic/Reykjavik', value: 'Atlantic/Reykjavik', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Atlantic/St_Helena', value: 'Atlantic/St_Helena', openwrt: 'GMT0' },\n    { text: '(~UTC+00:00) Etc/GMT', value: 'Etc/GMT' },\n    { text: '(~UTC+00:00) Etc/GMT+0', value: 'Etc/GMT+0' },\n    { text: '(~UTC+00:00) Etc/GMT-0', value: 'Etc/GMT-0' },\n    { text: '(~UTC+00:00) Etc/GMT0', value: 'Etc/GMT0' },\n    { text: '(~UTC+00:00) Etc/Greenwich', value: 'Etc/Greenwich' },\n    { text: '(~UTC+00:00) Etc/UCT', value: 'Etc/UCT' },\n    { text: '(~UTC+00:00) Etc/UTC', value: 'Etc/UTC' },\n    { text: '(~UTC+00:00) Etc/Universal', value: 'Etc/Universal' },\n    { text: '(~UTC+00:00) Etc/Zulu', value: 'Etc/Zulu' },\n    { text: '(~UTC+00:00) GMT', value: 'GMT' },\n    { text: '(~UTC+00:00) GMT0', value: 'GMT0' },\n    { text: '(~UTC+00:00) Greenwich', value: 'Greenwich' },\n    { text: '(~UTC+00:00) Iceland', value: 'Iceland' },\n    { text: '(~UTC+00:00) UCT', value: 'UCT' },\n    { text: '(~UTC+00:00) UTC', value: 'UTC', openwrt: 'UTC' },\n    { text: '(~UTC+00:00) Universal', value: 'Universal' },\n    { text: '(~UTC+00:00) Zulu', value: 'Zulu' },\n    { text: '(~UTC+01:00) Africa/Algiers', value: 'Africa/Algiers', openwrt: 'CET-1' },\n    { text: '(~UTC+01:00) Africa/Bangui', value: 'Africa/Bangui', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Brazzaville', value: 'Africa/Brazzaville', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Casablanca', value: 'Africa/Casablanca', openwrt: 'WET0' },\n    { text: '(~UTC+01:00) Africa/Douala', value: 'Africa/Douala', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/El_Aaiun', value: 'Africa/El_Aaiun', openwrt: 'WET0' },\n    { text: '(~UTC+01:00) Africa/Kinshasa', value: 'Africa/Kinshasa', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Lagos', value: 'Africa/Lagos', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Libreville', value: 'Africa/Libreville', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Luanda', value: 'Africa/Luanda', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Malabo', value: 'Africa/Malabo', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Ndjamena', value: 'Africa/Ndjamena', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Niamey', value: 'Africa/Niamey', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Porto-Novo', value: 'Africa/Porto-Novo', openwrt: 'WAT-1' },\n    { text: '(~UTC+01:00) Africa/Sao_Tome', value: 'Africa/Sao_Tome', openwrt: 'GMT0' },\n    { text: '(~UTC+01:00) Africa/Tunis', value: 'Africa/Tunis', openwrt: 'CET-1' },\n    { text: '(~UTC+01:00) Atlantic/Canary', value: 'Atlantic/Canary', openwrt: 'WET0WEST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) Atlantic/Faeroe', value: 'Atlantic/Faeroe' },\n    { text: '(~UTC+01:00) Atlantic/Faroe', value: 'Atlantic/Faroe', openwrt: 'WET0WEST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) Atlantic/Madeira', value: 'Atlantic/Madeira', openwrt: 'WET0WEST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) Eire', value: 'Eire' },\n    { text: '(~UTC+01:00) Etc/GMT-1', value: 'Etc/GMT-1' },\n    { text: '(~UTC+01:00) Europe/Belfast', value: 'Europe/Belfast' },\n    { text: '(~UTC+01:00) Europe/Dublin', value: 'Europe/Dublin', openwrt: 'GMT0IST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) Europe/Guernsey', value: 'Europe/Guernsey', openwrt: 'GMT0BST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) Europe/Isle_of_Man', value: 'Europe/Isle_of_Man', openwrt: 'GMT0BST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) Europe/Jersey', value: 'Europe/Jersey', openwrt: 'GMT0BST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) Europe/Lisbon', value: 'Europe/Lisbon', openwrt: 'WET0WEST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) Europe/London', value: 'Europe/London', openwrt: 'GMT0BST,M3.5.0/1,M10.5.0' },\n    { text: '(~UTC+01:00) GB', value: 'GB' },\n    { text: '(~UTC+01:00) GB-Eire', value: 'GB-Eire' },\n    { text: '(~UTC+01:00) Portugal', value: 'Portugal' },\n    { text: '(~UTC+01:00) WET', value: 'WET' },\n    { text: '(~UTC+02:00) Africa/Blantyre', value: 'Africa/Blantyre', openwrt: 'CAT-2' },\n    { text: '(~UTC+02:00) Africa/Bujumbura', value: 'Africa/Bujumbura', openwrt: 'CAT-2' },\n    { text: '(~UTC+02:00) Africa/Cairo', value: 'Africa/Cairo' },\n    { text: '(~UTC+02:00) Africa/Ceuta', value: 'Africa/Ceuta', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Africa/Gaborone', value: 'Africa/Gaborone', openwrt: 'CAT-2' },\n    { text: '(~UTC+02:00) Africa/Harare', value: 'Africa/Harare', openwrt: 'CAT-2' },\n    { text: '(~UTC+02:00) Africa/Johannesburg', value: 'Africa/Johannesburg', openwrt: 'SAST-2' },\n    { text: '(~UTC+02:00) Africa/Khartoum', value: 'Africa/Khartoum', openwrt: 'EAT-3' },\n    { text: '(~UTC+02:00) Africa/Kigali', value: 'Africa/Kigali', openwrt: 'CAT-2' },\n    { text: '(~UTC+02:00) Africa/Lubumbashi', value: 'Africa/Lubumbashi', openwrt: 'CAT-2' },\n    { text: '(~UTC+02:00) Africa/Lusaka', value: 'Africa/Lusaka', openwrt: 'CAT-2' },\n    { text: '(~UTC+02:00) Africa/Maputo', value: 'Africa/Maputo', openwrt: 'CAT-2' },\n    { text: '(~UTC+02:00) Africa/Maseru', value: 'Africa/Maseru', openwrt: 'SAST-2' },\n    { text: '(~UTC+02:00) Africa/Mbabane', value: 'Africa/Mbabane', openwrt: 'SAST-2' },\n    { text: '(~UTC+02:00) Africa/Tripoli', value: 'Africa/Tripoli', openwrt: 'EET-2' },\n    { text: '(~UTC+02:00) Africa/Windhoek', value: 'Africa/Windhoek', openwrt: 'WAT-1WAST,M9.1.0,M4.1.0' },\n    { text: '(~UTC+02:00) Antarctica/Troll', value: 'Antarctica/Troll' },\n    {\n      text: '(~UTC+02:00) Arctic/Longyearbyen',\n      value: 'Arctic/Longyearbyen',\n      openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3',\n    },\n    { text: '(~UTC+02:00) Atlantic/Jan_Mayen', value: 'Atlantic/Jan_Mayen' },\n    { text: '(~UTC+02:00) CET', value: 'CET' },\n    { text: '(~UTC+02:00) Egypt', value: 'Egypt' },\n    { text: '(~UTC+02:00) Etc/GMT-2', value: 'Etc/GMT-2' },\n    { text: '(~UTC+02:00) Europe/Amsterdam', value: 'Europe/Amsterdam', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Andorra', value: 'Europe/Andorra', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Belgrade', value: 'Europe/Belgrade', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Berlin', value: 'Europe/Berlin', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Bratislava', value: 'Europe/Bratislava', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Brussels', value: 'Europe/Brussels', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Budapest', value: 'Europe/Budapest', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Busingen', value: 'Europe/Busingen' },\n    { text: '(~UTC+02:00) Europe/Copenhagen', value: 'Europe/Copenhagen', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Gibraltar', value: 'Europe/Gibraltar', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    {\n      text: '(~UTC+02:00) Europe/Kaliningrad',\n      value: 'Europe/Kaliningrad',\n      openwrt: 'EET-2EEST,M3.5.0,M10.5.0/3',\n    },\n    { text: '(~UTC+02:00) Europe/Ljubljana', value: 'Europe/Ljubljana', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Luxembourg', value: 'Europe/Luxembourg', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Madrid', value: 'Europe/Madrid', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Malta', value: 'Europe/Malta', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Monaco', value: 'Europe/Monaco', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Oslo', value: 'Europe/Oslo', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Paris', value: 'Europe/Paris', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Podgorica', value: 'Europe/Podgorica', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Prague', value: 'Europe/Prague', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Rome', value: 'Europe/Rome', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/San_Marino', value: 'Europe/San_Marino', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Sarajevo', value: 'Europe/Sarajevo', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Skopje', value: 'Europe/Skopje', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Stockholm', value: 'Europe/Stockholm', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Tirane', value: 'Europe/Tirane', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Vaduz', value: 'Europe/Vaduz', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Vatican', value: 'Europe/Vatican', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Vienna', value: 'Europe/Vienna', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Warsaw', value: 'Europe/Warsaw', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Zagreb', value: 'Europe/Zagreb', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Europe/Zurich', value: 'Europe/Zurich', openwrt: 'CET-1CEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+02:00) Libya', value: 'Libya' },\n    { text: '(~UTC+02:00) MET', value: 'MET' },\n    { text: '(~UTC+02:00) Poland', value: 'Poland' },\n    { text: '(~UTC+02:00) ART', value: 'ART' },\n    { text: '(~UTC+02:00) CAT', value: 'CAT' },\n    { text: '(~UTC+02:00) ECT', value: 'ECT' },\n    { text: '(~UTC+03:00) Africa/Addis_Ababa', value: 'Africa/Addis_Ababa' },\n    { text: '(~UTC+03:00) Africa/Asmara', value: 'Africa/Asmara', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Africa/Asmera', value: 'Africa/Asmera' },\n    { text: '(~UTC+03:00) Africa/Dar_es_Salaam', value: 'Africa/Dar_es_Salaam', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Africa/Djibouti', value: 'Africa/Djibouti', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Africa/Juba', value: 'Africa/Juba' },\n    { text: '(~UTC+03:00) Africa/Kampala', value: 'Africa/Kampala', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Africa/Mogadishu', value: 'Africa/Mogadishu', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Africa/Nairobi', value: 'Africa/Nairobi', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Antarctica/Syowa', value: 'Antarctica/Syowa', openwrt: 'SYOT-3' },\n    { text: '(~UTC+03:00) Asia/Aden', value: 'Asia/Aden', openwrt: 'AST-3' },\n    { text: '(~UTC+03:00) Asia/Amman', value: 'Asia/Amman' },\n    { text: '(~UTC+03:00) Asia/Baghdad', value: 'Asia/Baghdad', openwrt: 'AST-3' },\n    { text: '(~UTC+03:00) Asia/Bahrain', value: 'Asia/Bahrain', openwrt: 'AST-3' },\n    { text: '(~UTC+03:00) Asia/Beirut', value: 'Asia/Beirut', openwrt: 'EET-2EEST,M3.5.0/0,M10.5.0/0' },\n    { text: '(~UTC+03:00) Asia/Damascus', value: 'Asia/Damascus', openwrt: 'EET-2EEST,M4.1.5/0,M10.5.5/0' },\n    { text: '(~UTC+03:00) Asia/Famagusta', value: 'Asia/Famagusta' },\n    { text: '(~UTC+03:00) Asia/Gaza', value: 'Asia/Gaza', openwrt: 'EET-2EEST,M3.5.6/0:01,M9.1.5' },\n    { text: '(~UTC+03:00) Asia/Hebron', value: 'Asia/Hebron' },\n    { text: '(~UTC+03:00) Asia/Istanbul', value: 'Asia/Istanbul' },\n    { text: '(~UTC+03:00) Asia/Jerusalem', value: 'Asia/Jerusalem' },\n    { text: '(~UTC+03:00) Asia/Kuwait', value: 'Asia/Kuwait', openwrt: 'AST-3' },\n    { text: '(~UTC+03:00) Asia/Nicosia', value: 'Asia/Nicosia', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Asia/Qatar', value: 'Asia/Qatar', openwrt: 'AST-3' },\n    { text: '(~UTC+03:00) Asia/Riyadh', value: 'Asia/Riyadh', openwrt: 'AST-3' },\n    { text: '(~UTC+03:00) Asia/Tel_Aviv', value: 'Asia/Tel_Aviv' },\n    { text: '(~UTC+03:00) EET', value: 'EET' },\n    { text: '(~UTC+03:00) Etc/GMT-3', value: 'Etc/GMT-3' },\n    { text: '(~UTC+03:00) Europe/Athens', value: 'Europe/Athens', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Bucharest', value: 'Europe/Bucharest', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Chisinau', value: 'Europe/Chisinau', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Helsinki', value: 'Europe/Helsinki', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Istanbul', value: 'Europe/Istanbul', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Kiev', value: 'Europe/Kiev', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Kirov', value: 'Europe/Kirov' },\n    { text: '(~UTC+03:00) Europe/Mariehamn', value: 'Europe/Mariehamn', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Minsk', value: 'Europe/Minsk', openwrt: 'EET-2EEST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+03:00) Europe/Moscow', value: 'Europe/Moscow', openwrt: 'MSK-4' },\n    { text: '(~UTC+03:00) Europe/Nicosia', value: 'Europe/Nicosia' },\n    { text: '(~UTC+03:00) Europe/Riga', value: 'Europe/Riga', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    {\n      text: '(~UTC+03:00) Europe/Simferopol',\n      value: 'Europe/Simferopol',\n      openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4',\n    },\n    { text: '(~UTC+03:00) Europe/Sofia', value: 'Europe/Sofia', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Tallinn', value: 'Europe/Tallinn', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Tiraspol', value: 'Europe/Tiraspol' },\n    { text: '(~UTC+03:00) Europe/Uzhgorod', value: 'Europe/Uzhgorod', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    { text: '(~UTC+03:00) Europe/Vilnius', value: 'Europe/Vilnius', openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4' },\n    {\n      text: '(~UTC+03:00) Europe/Zaporozhye',\n      value: 'Europe/Zaporozhye',\n      openwrt: 'EET-2EEST,M3.5.0/3,M10.5.0/4',\n    },\n    { text: '(~UTC+03:00) Indian/Antananarivo', value: 'Indian/Antananarivo', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Indian/Comoro', value: 'Indian/Comoro', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Indian/Mayotte', value: 'Indian/Mayotte', openwrt: 'EAT-3' },\n    { text: '(~UTC+03:00) Israel', value: 'Israel' },\n    { text: '(~UTC+03:00) Turkey', value: 'Turkey' },\n    { text: '(~UTC+03:00) W-SU', value: 'W-SU' },\n    { text: '(~UTC+03:00) EAT', value: 'EAT' },\n    { text: '(~UTC+04:00) Asia/Baku', value: 'Asia/Baku', openwrt: 'AZT-4AZST,M3.5.0/4,M10.5.0/5' },\n    { text: '(~UTC+04:00) Asia/Dubai', value: 'Asia/Dubai', openwrt: 'GST-4' },\n    { text: '(~UTC+04:00) Asia/Muscat', value: 'Asia/Muscat', openwrt: 'GST-4' },\n    { text: '(~UTC+04:00) Asia/Tbilisi', value: 'Asia/Tbilisi', openwrt: 'GET-4' },\n    { text: '(~UTC+04:00) Asia/Yerevan', value: 'Asia/Yerevan', openwrt: 'AMT-4AMST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+04:00) Etc/GMT-4', value: 'Etc/GMT-4' },\n    { text: '(~UTC+04:00) Europe/Astrakhan', value: 'Europe/Astrakhan' },\n    { text: '(~UTC+04:00) Europe/Samara', value: 'Europe/Samara', openwrt: 'SAMT-3SAMST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+04:00) Europe/Saratov', value: 'Europe/Saratov' },\n    { text: '(~UTC+04:00) Europe/Ulyanovsk', value: 'Europe/Ulyanovsk' },\n    { text: '(~UTC+04:00) Europe/Volgograd', value: 'Europe/Volgograd', openwrt: 'VOLT-3VOLST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+04:00) Indian/Mahe', value: 'Indian/Mahe', openwrt: 'SCT-4' },\n    { text: '(~UTC+04:00) Indian/Mauritius', value: 'Indian/Mauritius', openwrt: 'MUT-4' },\n    { text: '(~UTC+04:00) Indian/Reunion', value: 'Indian/Reunion', openwrt: 'RET-4' },\n    { text: '(~UTC+04:00) NET', value: 'NET' },\n    { text: '(~UTC+04:30) Asia/Kabul', value: 'Asia/Kabul', openwrt: 'AFT-4:30' },\n    { text: '(~UTC+04:30) Asia/Tehran', value: 'Asia/Tehran', openwrt: 'IRST-3:30IRDT,80/0,264/0' },\n    { text: '(~UTC+04:30) Iran', value: 'Iran' },\n    { text: '(~UTC+05:00) Antarctica/Mawson', value: 'Antarctica/Mawson', openwrt: 'MAWT-5' },\n    { text: '(~UTC+05:00) Asia/Aqtau', value: 'Asia/Aqtau', openwrt: 'AQTT-5' },\n    { text: '(~UTC+05:00) Asia/Aqtobe', value: 'Asia/Aqtobe', openwrt: 'AQTT-5' },\n    { text: '(~UTC+05:00) Asia/Ashgabat', value: 'Asia/Ashgabat', openwrt: 'TMT-5' },\n    { text: '(~UTC+05:00) Asia/Ashkhabad', value: 'Asia/Ashkhabad' },\n    { text: '(~UTC+05:00) Asia/Atyrau', value: 'Asia/Atyrau' },\n    { text: '(~UTC+05:00) Asia/Dushanbe', value: 'Asia/Dushanbe', openwrt: 'TJT-5' },\n    { text: '(~UTC+05:00) Asia/Karachi', value: 'Asia/Karachi', openwrt: 'PKT-5' },\n    { text: '(~UTC+05:00) Asia/Oral', value: 'Asia/Oral', openwrt: 'ORAT-5' },\n    { text: '(~UTC+05:00) Asia/Samarkand', value: 'Asia/Samarkand', openwrt: 'UZT-5' },\n    { text: '(~UTC+05:00) Asia/Tashkent', value: 'Asia/Tashkent', openwrt: 'UZT-5' },\n    {\n      text: '(~UTC+05:00) Asia/Yekaterinburg',\n      value: 'Asia/Yekaterinburg',\n      openwrt: 'YEKT-5YEKST,M3.5.0,M10.5.0/3',\n    },\n    { text: '(~UTC+05:00) Etc/GMT-5', value: 'Etc/GMT-5' },\n    { text: '(~UTC+05:00) Indian/Kerguelen', value: 'Indian/Kerguelen', openwrt: 'TFT-5' },\n    { text: '(~UTC+05:00) Indian/Maldives', value: 'Indian/Maldives', openwrt: 'MVT-5' },\n    { text: '(~UTC+05:00) PLT', value: 'PLT' },\n    { text: '(~UTC+05:30) Asia/Calcutta', value: 'Asia/Calcutta' },\n    { text: '(~UTC+05:30) Asia/Colombo', value: 'Asia/Colombo', openwrt: 'IST-5:30' },\n    { text: '(~UTC+05:30) Asia/Kolkata', value: 'Asia/Kolkata', openwrt: 'IST-5:30' },\n    { text: '(~UTC+05:30) IST', value: 'IST' },\n    { text: '(~UTC+05:45) Asia/Kathmandu', value: 'Asia/Kathmandu', openwrt: 'NPT-5:45' },\n    { text: '(~UTC+05:45) Asia/Katmandu', value: 'Asia/Katmandu' },\n    { text: '(~UTC+06:00) Antarctica/Vostok', value: 'Antarctica/Vostok', openwrt: 'VOST-6' },\n    { text: '(~UTC+06:00) Asia/Almaty', value: 'Asia/Almaty', openwrt: 'ALMT-6' },\n    { text: '(~UTC+06:00) Asia/Bishkek', value: 'Asia/Bishkek', openwrt: 'KGT-6' },\n    { text: '(~UTC+06:00) Asia/Dacca', value: 'Asia/Dacca' },\n    { text: '(~UTC+06:00) Asia/Dhaka', value: 'Asia/Dhaka', openwrt: 'BDT-6' },\n    { text: '(~UTC+06:00) Asia/Kashgar', value: 'Asia/Kashgar', openwrt: 'CST-8' },\n    { text: '(~UTC+06:00) Asia/Omsk', value: 'Asia/Omsk', openwrt: 'OMST-7' },\n    { text: '(~UTC+06:00) Asia/Qyzylorda', value: 'Asia/Qyzylorda', openwrt: 'QYZT-6' },\n    { text: '(~UTC+06:00) Asia/Thimbu', value: 'Asia/Thimbu' },\n    { text: '(~UTC+06:00) Asia/Thimphu', value: 'Asia/Thimphu', openwrt: 'BTT-6' },\n    { text: '(~UTC+06:00) Asia/Urumqi', value: 'Asia/Urumqi', openwrt: 'CST-8' },\n    { text: '(~UTC+06:00) Etc/GMT-6', value: 'Etc/GMT-6' },\n    { text: '(~UTC+06:00) Indian/Chagos', value: 'Indian/Chagos', openwrt: 'IOT-6' },\n    { text: '(~UTC+06:00) BST', value: 'BST' },\n    { text: '(~UTC+06:30) Asia/Rangoon', value: 'Asia/Rangoon', openwrt: 'MMT-6:30' },\n    { text: '(~UTC+06:30) Asia/Yangon', value: 'Asia/Yangon' },\n    { text: '(~UTC+06:30) Indian/Cocos', value: 'Indian/Cocos', openwrt: 'CCT-6:30' },\n    { text: '(~UTC+07:00) Antarctica/Davis', value: 'Antarctica/Davis', openwrt: 'DAVT-7' },\n    { text: '(~UTC+07:00) Asia/Bangkok', value: 'Asia/Bangkok', openwrt: 'ICT-7' },\n    { text: '(~UTC+07:00) Asia/Barnaul', value: 'Asia/Barnaul' },\n    { text: '(~UTC+07:00) Asia/Ho_Chi_Minh', value: 'Asia/Ho_Chi_Minh', openwrt: 'ICT-7' },\n    { text: '(~UTC+07:00) Asia/Hovd', value: 'Asia/Hovd', openwrt: 'HOVT-7' },\n    { text: '(~UTC+07:00) Asia/Jakarta', value: 'Asia/Jakarta', openwrt: 'WIT-7' },\n    { text: '(~UTC+07:00) Asia/Krasnoyarsk', value: 'Asia/Krasnoyarsk', openwrt: 'KRAT-7KRAST,M3.5.0,M10.5.0/3' },\n    {\n      text: '(~UTC+07:00) Asia/Novokuznetsk',\n      value: 'Asia/Novokuznetsk',\n      openwrt: 'NOVT-6NOVST,M3.5.0,M10.5.0/3',\n    },\n    { text: '(~UTC+07:00) Asia/Novosibirsk', value: 'Asia/Novosibirsk', openwrt: 'NOVT-6NOVST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+07:00) Asia/Phnom_Penh', value: 'Asia/Phnom_Penh', openwrt: 'ICT-7' },\n    { text: '(~UTC+07:00) Asia/Pontianak', value: 'Asia/Pontianak', openwrt: 'WIT-7' },\n    { text: '(~UTC+07:00) Asia/Saigon', value: 'Asia/Saigon' },\n    { text: '(~UTC+07:00) Asia/Tomsk', value: 'Asia/Tomsk' },\n    { text: '(~UTC+07:00) Asia/Vientiane', value: 'Asia/Vientiane', openwrt: 'ICT-7' },\n    { text: '(~UTC+07:00) Etc/GMT-7', value: 'Etc/GMT-7' },\n    { text: '(~UTC+07:00) Indian/Christmas', value: 'Indian/Christmas', openwrt: 'CXT-7' },\n    { text: '(~UTC+07:00) VST', value: 'VST' },\n    { text: '(~UTC+08:00) Antarctica/Casey', value: 'Antarctica/Casey', openwrt: 'WST-8' },\n    { text: '(~UTC+08:00) Asia/Brunei', value: 'Asia/Brunei', openwrt: 'BNT-8' },\n    { text: '(~UTC+08:00) Asia/Choibalsan', value: 'Asia/Choibalsan', openwrt: 'CHOT-8' },\n    { text: '(~UTC+08:00) Asia/Chongqing', value: 'Asia/Chongqing', openwrt: 'CST-8' },\n    { text: '(~UTC+08:00) Asia/Chungking', value: 'Asia/Chungking' },\n    { text: '(~UTC+08:00) Asia/Harbin', value: 'Asia/Harbin', openwrt: 'CST-8' },\n    { text: '(~UTC+08:00) Asia/Hong_Kong', value: 'Asia/Hong_Kong' },\n    { text: '(~UTC+08:00) Asia/Irkutsk', value: 'Asia/Irkutsk', openwrt: 'IRKT-8IRKST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+08:00) Asia/Kuala_Lumpur', value: 'Asia/Kuala_Lumpur', openwrt: 'MYT-8' },\n    { text: '(~UTC+08:00) Asia/Kuching', value: 'Asia/Kuching', openwrt: 'MYT-8' },\n    { text: '(~UTC+08:00) Asia/Macao', value: 'Asia/Macao' },\n    { text: '(~UTC+08:00) Asia/Macau', value: 'Asia/Macau', openwrt: 'CST-8' },\n    { text: '(~UTC+08:00) Asia/Makassar', value: 'Asia/Makassar', openwrt: 'CIT-8' },\n    { text: '(~UTC+08:00) Asia/Manila', value: 'Asia/Manila', openwrt: 'PHT-8' },\n    { text: '(~UTC+08:00) Asia/Shanghai', value: 'Asia/Shanghai', openwrt: 'CST-8' },\n    { text: '(~UTC+08:00) Asia/Singapore', value: 'Asia/Singapore', openwrt: 'SGT-8' },\n    { text: '(~UTC+08:00) Asia/Taipei', value: 'Asia/Taipei', openwrt: 'CST-8' },\n    { text: '(~UTC+08:00) Asia/Ujung_Pandang', value: 'Asia/Ujung_Pandang' },\n    { text: '(~UTC+08:00) Asia/Ulaanbaatar', value: 'Asia/Ulaanbaatar', openwrt: 'ULAT-8' },\n    { text: '(~UTC+08:00) Asia/Ulan_Bator', value: 'Asia/Ulan_Bator' },\n    { text: '(~UTC+08:00) Australia/Perth', value: 'Australia/Perth', openwrt: 'WST-8' },\n    { text: '(~UTC+08:00) Australia/West', value: 'Australia/West' },\n    { text: '(~UTC+08:00) Etc/GMT-8', value: 'Etc/GMT-8' },\n    { text: '(~UTC+08:00) Hongkong', value: 'Hongkong' },\n    { text: '(~UTC+08:00) PRC', value: 'PRC' },\n    { text: '(~UTC+08:00) Singapore', value: 'Singapore' },\n    { text: '(~UTC+08:00) CTT', value: 'CTT' },\n    { text: '(~UTC+08:45) Australia/Eucla', value: 'Australia/Eucla', openwrt: 'CWST-8:45' },\n    { text: '(~UTC+09:00) Asia/Chita', value: 'Asia/Chita' },\n    { text: '(~UTC+09:00) Asia/Dili', value: 'Asia/Dili', openwrt: 'TLT-9' },\n    { text: '(~UTC+09:00) Asia/Jayapura', value: 'Asia/Jayapura', openwrt: 'EIT-9' },\n    { text: '(~UTC+09:00) Asia/Khandyga', value: 'Asia/Khandyga' },\n    { text: '(~UTC+09:00) Asia/Pyongyang', value: 'Asia/Pyongyang', openwrt: 'KST-9' },\n    { text: '(~UTC+09:00) Asia/Seoul', value: 'Asia/Seoul', openwrt: 'KST-9' },\n    { text: '(~UTC+09:00) Asia/Tokyo', value: 'Asia/Tokyo', openwrt: 'JST-9' },\n    { text: '(~UTC+09:00) Asia/Yakutsk', value: 'Asia/Yakutsk', openwrt: 'YAKT-9YAKST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+09:00) Etc/GMT-9', value: 'Etc/GMT-9' },\n    { text: '(~UTC+09:00) Japan', value: 'Japan' },\n    { text: '(~UTC+09:00) Pacific/Palau', value: 'Pacific/Palau', openwrt: 'PWT-9' },\n    { text: '(~UTC+09:00) ROK', value: 'ROK' },\n    { text: '(~UTC+09:00) JST', value: 'JST' },\n    { text: '(~UTC+09:30) Australia/Darwin', value: 'Australia/Darwin', openwrt: 'CST-9:30' },\n    { text: '(~UTC+09:30) Australia/North', value: 'Australia/North' },\n    { text: '(~UTC+09:30) ACT', value: 'ACT' },\n    { text: '(~UTC+10:00) Antarctica/DumontDUrville', value: 'Antarctica/DumontDUrville', openwrt: 'DDUT-10' },\n    { text: '(~UTC+10:00) Asia/Ust-Nera', value: 'Asia/Ust-Nera' },\n    {\n      text: '(~UTC+10:00) Asia/Vladivostok',\n      value: 'Asia/Vladivostok',\n      openwrt: 'VLAT-10VLAST,M3.5.0,M10.5.0/3',\n    },\n    { text: '(~UTC+10:00) Australia/Brisbane', value: 'Australia/Brisbane', openwrt: 'EST-10' },\n    { text: '(~UTC+10:00) Australia/Lindeman', value: 'Australia/Lindeman', openwrt: 'EST-10' },\n    { text: '(~UTC+10:00) Australia/Queensland', value: 'Australia/Queensland' },\n    { text: '(~UTC+10:00) Etc/GMT-10', value: 'Etc/GMT-10' },\n    { text: '(~UTC+10:00) Pacific/Chuuk', value: 'Pacific/Chuuk' },\n    { text: '(~UTC+10:00) Pacific/Guam', value: 'Pacific/Guam', openwrt: 'ChST-10' },\n    { text: '(~UTC+10:00) Pacific/Port_Moresby', value: 'Pacific/Port_Moresby', openwrt: 'PGT-10' },\n    { text: '(~UTC+10:00) Pacific/Saipan', value: 'Pacific/Saipan', openwrt: 'ChST-10' },\n    { text: '(~UTC+10:00) Pacific/Truk', value: 'Pacific/Truk', openwrt: 'TRUT-10' },\n    { text: '(~UTC+10:00) Pacific/Yap', value: 'Pacific/Yap' },\n    {\n      text: '(~UTC+10:30) Australia/Adelaide',\n      value: 'Australia/Adelaide',\n      openwrt: 'CST-9:30CST,M10.1.0,M4.1.0/3',\n    },\n    {\n      text: '(~UTC+10:30) Australia/Broken_Hill',\n      value: 'Australia/Broken_Hill',\n      openwrt: 'CST-9:30CST,M10.1.0,M4.1.0/3',\n    },\n    { text: '(~UTC+10:30) Australia/South', value: 'Australia/South' },\n    { text: '(~UTC+10:30) Australia/Yancowinna', value: 'Australia/Yancowinna' },\n    { text: '(~UTC+11:00) Antarctica/Macquarie', value: 'Antarctica/Macquarie', openwrt: 'MIST-11' },\n    { text: '(~UTC+11:00) Asia/Magadan', value: 'Asia/Magadan', openwrt: 'MAGT-11MAGST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+11:00) Asia/Sakhalin', value: 'Asia/Sakhalin', openwrt: 'SAKT-10SAKST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+11:00) Asia/Srednekolymsk', value: 'Asia/Srednekolymsk' },\n    { text: '(~UTC+11:00) Australia/ACT', value: 'Australia/ACT' },\n    { text: '(~UTC+11:00) Australia/Canberra', value: 'Australia/Canberra' },\n    { text: '(~UTC+11:00) Australia/Currie', value: 'Australia/Currie', openwrt: 'EST-10EST,M10.1.0,M4.1.0/3' },\n    { text: '(~UTC+11:00) Australia/Hobart', value: 'Australia/Hobart', openwrt: 'EST-10EST,M10.1.0,M4.1.0/3' },\n    { text: '(~UTC+11:00) Australia/LHI', value: 'Australia/LHI' },\n    {\n      text: '(~UTC+11:00) Australia/Lord_Howe',\n      value: 'Australia/Lord_Howe',\n      openwrt: 'LHST-10:30LHST-11,M10.1.0,M4.1.0',\n    },\n    {\n      text: '(~UTC+11:00) Australia/Melbourne',\n      value: 'Australia/Melbourne',\n      openwrt: 'EST-10EST,M10.1.0,M4.1.0/3',\n    },\n    { text: '(~UTC+11:00) Australia/NSW', value: 'Australia/NSW' },\n    { text: '(~UTC+11:00) Australia/Sydney', value: 'Australia/Sydney', openwrt: 'EST-10EST,M10.1.0,M4.1.0/3' },\n    { text: '(~UTC+11:00) Australia/Tasmania', value: 'Australia/Tasmania' },\n    { text: '(~UTC+11:00) Australia/Victoria', value: 'Australia/Victoria' },\n    { text: '(~UTC+11:00) Etc/GMT-11', value: 'Etc/GMT-11' },\n    { text: '(~UTC+11:00) Pacific/Bougainville', value: 'Pacific/Bougainville' },\n    { text: '(~UTC+11:00) Pacific/Efate', value: 'Pacific/Efate', openwrt: 'VUT-11' },\n    { text: '(~UTC+11:00) Pacific/Guadalcanal', value: 'Pacific/Guadalcanal', openwrt: 'SBT-11' },\n    { text: '(~UTC+11:00) Pacific/Kosrae', value: 'Pacific/Kosrae', openwrt: 'KOST-11' },\n    { text: '(~UTC+11:00) Pacific/Norfolk', value: 'Pacific/Norfolk', openwrt: 'NFT-11:30' },\n    { text: '(~UTC+11:00) Pacific/Noumea', value: 'Pacific/Noumea', openwrt: 'NCT-11' },\n    { text: '(~UTC+11:00) Pacific/Pohnpei', value: 'Pacific/Pohnpei' },\n    { text: '(~UTC+11:00) Pacific/Ponape', value: 'Pacific/Ponape', openwrt: 'PONT-11' },\n    { text: '(~UTC+11:00) AET', value: 'AET' },\n    { text: '(~UTC+11:00) SST', value: 'SST' },\n    { text: '(~UTC+12:00) Asia/Anadyr', value: 'Asia/Anadyr', openwrt: 'ANAT-11ANAST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+12:00) Asia/Kamchatka', value: 'Asia/Kamchatka', openwrt: 'PETT-11PETST,M3.5.0,M10.5.0/3' },\n    { text: '(~UTC+12:00) Etc/GMT-12', value: 'Etc/GMT-12' },\n    { text: '(~UTC+12:00) Kwajalein', value: 'Kwajalein' },\n    { text: '(~UTC+12:00) Pacific/Fiji', value: 'Pacific/Fiji', openwrt: 'FJT-12' },\n    { text: '(~UTC+12:00) Pacific/Funafuti', value: 'Pacific/Funafuti', openwrt: 'TVT-12' },\n    { text: '(~UTC+12:00) Pacific/Kwajalein', value: 'Pacific/Kwajalein', openwrt: 'MHT-12' },\n    { text: '(~UTC+12:00) Pacific/Majuro', value: 'Pacific/Majuro', openwrt: 'MHT-12' },\n    { text: '(~UTC+12:00) Pacific/Nauru', value: 'Pacific/Nauru', openwrt: 'NRT-12' },\n    { text: '(~UTC+12:00) Pacific/Tarawa', value: 'Pacific/Tarawa', openwrt: 'GILT-12' },\n    { text: '(~UTC+12:00) Pacific/Wake', value: 'Pacific/Wake', openwrt: 'WAKT-12' },\n    { text: '(~UTC+12:00) Pacific/Wallis', value: 'Pacific/Wallis', openwrt: 'WFT-12' },\n    {\n      text: '(~UTC+13:00) Antarctica/McMurdo',\n      value: 'Antarctica/McMurdo',\n      openwrt: 'NZST-12NZDT,M9.5.0,M4.1.0/3',\n    },\n    {\n      text: '(~UTC+13:00) Antarctica/South_Pole',\n      value: 'Antarctica/South_Pole',\n      openwrt: 'NZST-12NZDT,M9.5.0,M4.1.0/3',\n    },\n    { text: '(~UTC+13:00) Etc/GMT-13', value: 'Etc/GMT-13' },\n    { text: '(~UTC+13:00) NZ', value: 'NZ' },\n    { text: '(~UTC+13:00) Pacific/Auckland', value: 'Pacific/Auckland', openwrt: 'NZST-12NZDT,M9.5.0,M4.1.0/3' },\n    { text: '(~UTC+13:00) Pacific/Enderbury', value: 'Pacific/Enderbury', openwrt: 'PHOT-13' },\n    { text: '(~UTC+13:00) Pacific/Fakaofo', value: 'Pacific/Fakaofo', openwrt: 'TKT10' },\n    { text: '(~UTC+13:00) Pacific/Tongatapu', value: 'Pacific/Tongatapu', openwrt: 'TOT-13' },\n    { text: '(~UTC+13:00) NST', value: 'NST' },\n    { text: '(~UTC+13:45) NZ-CHAT', value: 'NZ-CHAT' },\n    {\n      text: '(~UTC+13:45) Pacific/Chatham',\n      value: 'Pacific/Chatham',\n      openwrt: 'CHAST-12:45CHADT,M9.5.0/2:45,M4.1.0/3:45',\n    },\n    { text: '(~UTC+14:00) Etc/GMT-14', value: 'Etc/GMT-14' },\n    { text: '(~UTC+14:00) Pacific/Apia', value: 'Pacific/Apia', openwrt: 'WST11' },\n    { text: '(~UTC+14:00) Pacific/Kiritimati', value: 'Pacific/Kiritimati', openwrt: 'LINT-14' },\n    { text: '(~UTC+14:00) MIT', value: 'MIT' },\n  ],\n}\n\nexport default dates\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}