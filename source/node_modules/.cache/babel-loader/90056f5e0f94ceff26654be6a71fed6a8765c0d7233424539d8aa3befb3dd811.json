{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { VRow, VCol } from 'vuetify/lib';\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\nimport util from '../../../plugins/util';\nexport default {\n  components: {\n    VRow: VRow,\n    VCol: VCol,\n    ValidationObserver: ValidationObserver,\n    ValidationProvider: ValidationProvider\n  },\n  props: {\n    settings: {\n      type: Object,\n      \"default\": function _default() {}\n    },\n    selectedTab: {\n      type: String,\n      \"default\": undefined\n    }\n  },\n  data: function data() {\n    return {\n      ip: null,\n      // ip to lookup for\n      ipCopy: null,\n      // used for result display\n      lookupResult: null,\n      // actual result country code\n      loading: false,\n      countriesMap: util.country_codes\n    };\n  },\n  watch: {\n    selectedTab: function selectedTab(value) {\n      if (value !== 'geoip_lookup') {\n        this.ip = null;\n        this.ipCopy = null;\n        this.lookupResult = null;\n      }\n    },\n    ipCopy: function ipCopy(value) {\n      if (!value) {\n        this.ip = null;\n        this.lookupResult = null;\n      }\n    }\n  },\n  methods: {\n    onLookup: function onLookup() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.lookupResult = null;\n              _this.loading = true;\n              _context.next = 4;\n              return _this.$emit('lookup', {\n                ip: _this.ip,\n                resolve: function resolve(res) {\n                  _this.ipCopy = _this.ip;\n                  _this.lookupResult = res; // country code\n                  _this.loading = false;\n                }\n              });\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["VRow","VCol","ValidationObserver","ValidationProvider","util","components","props","settings","type","Object","default","selectedTab","String","undefined","data","ip","ipCopy","lookupResult","loading","countriesMap","country_codes","watch","value","methods","onLookup","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$emit","resolve","res","stop"],"sources":["node_modules/vuntangle/src/shared/SettingsGeoipFilter/components/GeoipLookup.vue"],"sourcesContent":["<template>\n  <div>\n    <h3 class=\"d-flex\">\n      <span>{{ $t('geoip_lookup') }}</span>\n    </h3>\n    <p>{{ $t('geoip_lookup_description') }}</p>\n\n    <ValidationObserver v-slot=\"{ passes }\" ref=\"obs\">\n      <v-row no-gutters>\n        <v-col>\n          <ValidationProvider v-slot=\"{ errors }\" rules=\"ip_any\">\n            <u-text-field\n              v-model=\"ip\"\n              :label=\"$t('enter_ip_address')\"\n              :error-messages=\"errors\"\n              :disabled=\"!settings.enabled\"\n              clearable\n              @keyup.enter=\"passes(onLookup)\"\n            >\n              <template v-if=\"errors.length\" #append><u-errors-tooltip :errors=\"errors\" /></template>\n            </u-text-field>\n          </ValidationProvider>\n        </v-col>\n        <v-col class=\"shrink\">\n          <u-btn\n            :disabled=\"!ip || !settings.enabled\"\n            :loading=\"loading\"\n            height=\"40\"\n            class=\"ml-4\"\n            @click=\"passes(onLookup)\"\n          >\n            {{ $t('lookup') }}\n          </u-btn>\n        </v-col>\n      </v-row>\n    </ValidationObserver>\n\n    <div v-if=\"ip && lookupResult\" class=\"mt-4 body-1\">\n      <p>\n        <span v-if=\"lookupResult === 'XL'\" v-html=\"$t('geoip_lookup_result', [ipCopy, $t('local')])\" />\n        <span v-else-if=\"lookupResult === 'XU'\" v-html=\"$t('geoip_lookup_result', [ipCopy, $t('unknown')])\" />\n        <span\n          v-else-if=\"countriesMap[lookupResult]\"\n          v-html=\"$t('geoip_lookup_result', [ipCopy, countriesMap[lookupResult]])\"\n        />\n        <span v-else v-html=\"$t('geoip_lookup_result', [ipCopy, $t('unknown')])\" />\n      </p>\n    </div>\n  </div>\n</template>\n<script>\n  import { VRow, VCol } from 'vuetify/lib'\n  import { ValidationObserver, ValidationProvider } from 'vee-validate'\n  import util from '../../../plugins/util'\n\n  export default {\n    components: { VRow, VCol, ValidationObserver, ValidationProvider },\n    props: {\n      settings: { type: Object, default: () => {} },\n      selectedTab: { type: String, default: undefined },\n    },\n\n    data: () => ({\n      ip: null, // ip to lookup for\n      ipCopy: null, // used for result display\n      lookupResult: null, // actual result country code\n      loading: false,\n      countriesMap: util.country_codes,\n    }),\n\n    watch: {\n      selectedTab(value) {\n        if (value !== 'geoip_lookup') {\n          this.ip = null\n          this.ipCopy = null\n          this.lookupResult = null\n        }\n      },\n      ipCopy(value) {\n        if (!value) {\n          this.ip = null\n          this.lookupResult = null\n        }\n      },\n    },\n\n    methods: {\n      async onLookup() {\n        this.lookupResult = null\n        this.loading = true\n        await this.$emit('lookup', {\n          ip: this.ip,\n          resolve: res => {\n            this.ipCopy = this.ip\n            this.lookupResult = res // country code\n            this.loading = false\n          },\n        })\n      },\n    },\n  }\n</script>\n"],"mappings":";;AAmDA,SAAAA,IAAA,EAAAC,IAAA;AACA,SAAAC,kBAAA,EAAAC,kBAAA;AACA,OAAAC,IAAA;AAEA;EACAC,UAAA;IAAAL,IAAA,EAAAA,IAAA;IAAAC,IAAA,EAAAA,IAAA;IAAAC,kBAAA,EAAAA,kBAAA;IAAAC,kBAAA,EAAAA;EAAA;EACAG,KAAA;IACAC,QAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA,oBAAAC,SAAA;IAAA;IACAC,WAAA;MAAAH,IAAA,EAAAI,MAAA;MAAA,WAAAC;IAAA;EACA;EAEAC,IAAA,WAAAA,KAAA;IAAA;MACAC,EAAA;MAAA;MACAC,MAAA;MAAA;MACAC,YAAA;MAAA;MACAC,OAAA;MACAC,YAAA,EAAAf,IAAA,CAAAgB;IACA;EAAA;EAEAC,KAAA;IACAV,WAAA,WAAAA,YAAAW,KAAA;MACA,IAAAA,KAAA;QACA,KAAAP,EAAA;QACA,KAAAC,MAAA;QACA,KAAAC,YAAA;MACA;IACA;IACAD,MAAA,WAAAA,OAAAM,KAAA;MACA,KAAAA,KAAA;QACA,KAAAP,EAAA;QACA,KAAAE,YAAA;MACA;IACA;EACA;EAEAM,OAAA;IACAC,QAAA,WAAAA,SAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAT,KAAA,CAAAR,YAAA;cACAQ,KAAA,CAAAP,OAAA;cAAAc,QAAA,CAAAE,IAAA;cAAA,OACAT,KAAA,CAAAU,KAAA;gBACApB,EAAA,EAAAU,KAAA,CAAAV,EAAA;gBACAqB,OAAA,WAAAA,QAAAC,GAAA;kBACAZ,KAAA,CAAAT,MAAA,GAAAS,KAAA,CAAAV,EAAA;kBACAU,KAAA,CAAAR,YAAA,GAAAoB,GAAA;kBACAZ,KAAA,CAAAP,OAAA;gBACA;cACA;YAAA;YAAA;cAAA,OAAAc,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}