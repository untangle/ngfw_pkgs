{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.btoa.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport { VContainer, VSpacer, VDivider, VTabs, VTab } from 'vuetify/lib';\nimport USheet from '../../components/USheet/USheet.vue';\nimport UBtn from '../../components/UBtn';\nexport default {\n  components: {\n    USheet: USheet,\n    UBtn: UBtn,\n    VContainer: VContainer,\n    VSpacer: VSpacer,\n    VDivider: VDivider,\n    VTabs: VTabs,\n    VTab: VTab\n  },\n  props: {\n    logProp: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      activeTab: null\n    };\n  },\n  computed: {\n    tabName: function tabName() {\n      // active tab is either 0 (for logread) or 1 (for dmesg) since we're using v-model with tabs instead of \"to\"\n      return this.activeTab === 1 ? 'dmesg' : 'logread';\n    },\n    log: function log() {\n      return this.logProp ? window.atob(this.logProp) : '';\n    }\n  },\n  watch: {\n    activeTab: function activeTab() {\n      this.$emit('tab-switched', this.tabName);\n    }\n  },\n  methods: {\n    reload: function reload() {\n      this.$emit('on-reload', this.tabName);\n    },\n    saveLogs: function saveLogs() {\n      var time = new Date();\n      var type = this.$vuntangle.$t(this.tabName);\n      var log = this.log;\n      // create a link with log content and save to a file\n      var link = document.createElement('a');\n      // using data:text/plan and base64 content will create a log file that's human readable\n      link.setAttribute('href', 'data:text/plain;base64,' + window.btoa(log));\n      link.setAttribute('download', type.toLowerCase() + '_' + time + '.log');\n      link.click();\n    }\n  }\n};","map":{"version":3,"names":["VContainer","VSpacer","VDivider","VTabs","VTab","USheet","UBtn","components","props","logProp","type","String","data","activeTab","computed","tabName","log","window","atob","watch","$emit","methods","reload","saveLogs","time","Date","$vuntangle","$t","link","document","createElement","setAttribute","btoa","toLowerCase","click"],"sources":["node_modules/vuntangle/src/shared/ApplianceLogging/Main.vue"],"sourcesContent":["<template>\n  <v-container>\n    <div class=\"d-flex flex-column fill-height\">\n      <div class=\"flex-shrink-1\">\n        <div class=\"d-flex align-center\">\n          <h2 class=\"font-weight-light\">{{ $vuntangle.$t('logging') }}</h2>\n          <v-spacer />\n          <u-btn class=\"mx-2\" @click=\"reload\">{{ $vuntangle.$t('refresh') }}</u-btn>\n          <u-btn @click=\"saveLogs\">{{ $vuntangle.$t('export') }}</u-btn>\n        </div>\n        <v-divider class=\"my-2\" />\n        <v-tabs v-model=\"activeTab\" class=\"mb-4\">\n          <v-tab>\n            {{ $vuntangle.$t('logread') }}\n          </v-tab>\n          <v-tab>{{ $vuntangle.$t('dmesg') }}</v-tab>\n        </v-tabs>\n      </div>\n      <u-sheet class=\"flex-grow-1\">\n        <pre style=\"font-size: 11px; max-height: 0\">{{ log }}</pre>\n      </u-sheet>\n    </div>\n  </v-container>\n</template>\n<script>\n  import { VContainer, VSpacer, VDivider, VTabs, VTab } from 'vuetify/lib'\n  import USheet from '../../components/USheet/USheet.vue'\n  import UBtn from '../../components/UBtn'\n\n  export default {\n    components: { USheet, UBtn, VContainer, VSpacer, VDivider, VTabs, VTab },\n    props: {\n      logProp: { type: String, default: '' },\n    },\n    data() {\n      return {\n        activeTab: null,\n      }\n    },\n    computed: {\n      tabName() {\n        // active tab is either 0 (for logread) or 1 (for dmesg) since we're using v-model with tabs instead of \"to\"\n        return this.activeTab === 1 ? 'dmesg' : 'logread'\n      },\n      log() {\n        return this.logProp ? window.atob(this.logProp) : ''\n      },\n    },\n    watch: {\n      activeTab() {\n        this.$emit('tab-switched', this.tabName)\n      },\n    },\n    methods: {\n      reload() {\n        this.$emit('on-reload', this.tabName)\n      },\n      saveLogs() {\n        const time = new Date()\n        const type = this.$vuntangle.$t(this.tabName)\n        const log = this.log\n        // create a link with log content and save to a file\n        const link = document.createElement('a')\n        // using data:text/plan and base64 content will create a log file that's human readable\n        link.setAttribute('href', 'data:text/plain;base64,' + window.btoa(log))\n        link.setAttribute('download', type.toLowerCase() + '_' + time + '.log')\n        link.click()\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;;AAyBA,SAAAA,UAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,IAAA;AACA,OAAAC,MAAA;AACA,OAAAC,IAAA;AAEA;EACAC,UAAA;IAAAF,MAAA,EAAAA,MAAA;IAAAC,IAAA,EAAAA,IAAA;IAAAN,UAAA,EAAAA,UAAA;IAAAC,OAAA,EAAAA,OAAA;IAAAC,QAAA,EAAAA,QAAA;IAAAC,KAAA,EAAAA,KAAA;IAAAC,IAAA,EAAAA;EAAA;EACAI,KAAA;IACAC,OAAA;MAAAC,IAAA,EAAAC,MAAA;MAAA;IAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,WAAAA,QAAA;MACA;MACA,YAAAF,SAAA;IACA;IACAG,GAAA,WAAAA,IAAA;MACA,YAAAP,OAAA,GAAAQ,MAAA,CAAAC,IAAA,MAAAT,OAAA;IACA;EACA;EACAU,KAAA;IACAN,SAAA,WAAAA,UAAA;MACA,KAAAO,KAAA,sBAAAL,OAAA;IACA;EACA;EACAM,OAAA;IACAC,MAAA,WAAAA,OAAA;MACA,KAAAF,KAAA,mBAAAL,OAAA;IACA;IACAQ,QAAA,WAAAA,SAAA;MACA,IAAAC,IAAA,OAAAC,IAAA;MACA,IAAAf,IAAA,QAAAgB,UAAA,CAAAC,EAAA,MAAAZ,OAAA;MACA,IAAAC,GAAA,QAAAA,GAAA;MACA;MACA,IAAAY,IAAA,GAAAC,QAAA,CAAAC,aAAA;MACA;MACAF,IAAA,CAAAG,YAAA,qCAAAd,MAAA,CAAAe,IAAA,CAAAhB,GAAA;MACAY,IAAA,CAAAG,YAAA,aAAArB,IAAA,CAAAuB,WAAA,WAAAT,IAAA;MACAI,IAAA,CAAAM,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}