{"ast":null,"code":"import _regeneratorRuntime from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shubham/Desktop/ngfw_pkgs/untangle-vue-ui/source/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { NgfwAbout, NgfwDns, NgfwDhcp, NgfwStaticRoutes, NgfwSettings } from '@/ngfw';\nimport { DynamicBlockLists } from '@/services';\nimport store from '@/store';\nexport default {\n  components: {\n    NgfwAbout: NgfwAbout,\n    NgfwDns: NgfwDns,\n    NgfwDhcp: NgfwDhcp,\n    NgfwStaticRoutes: NgfwStaticRoutes,\n    NgfwSettings: NgfwSettings,\n    DynamicBlockLists: DynamicBlockLists\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return store.dispatch('settings/fetchNetworkSettings');\n          case 2:\n            next();\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  computed: {\n    componentName: function componentName(_ref) {\n      var _$route$params;\n      var $route = _ref.$route;\n      return $route === null || $route === void 0 || (_$route$params = $route.params) === null || _$route$params === void 0 ? void 0 : _$route$params.componentName;\n    }\n  }\n};","map":{"version":3,"names":["NgfwAbout","NgfwDns","NgfwDhcp","NgfwStaticRoutes","NgfwSettings","DynamicBlockLists","store","components","beforeRouteEnter","to","from","next","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","dispatch","stop","computed","componentName","_ref","_$route$params","$route","params"],"sources":["src/views/Component.vue"],"sourcesContent":["<template>\n  <v-container class=\"d-flex pa-2\">\n    <component :is=\"componentName\" v-if=\"componentName\"> </component>\n  </v-container>\n</template>\n<script>\n  import { NgfwAbout, NgfwDns, NgfwDhcp, NgfwStaticRoutes, NgfwSettings } from '@/ngfw'\n  import { DynamicBlockLists } from '@/services'\n  import store from '@/store'\n\n  export default {\n    components: { NgfwAbout, NgfwDns, NgfwDhcp, NgfwStaticRoutes, NgfwSettings, DynamicBlockLists },\n\n    async beforeRouteEnter(to, from, next) {\n      await store.dispatch('settings/fetchNetworkSettings')\n      next()\n    },\n\n    computed: {\n      componentName: ({ $route }) => $route?.params?.componentName,\n    },\n  }\n</script>\n"],"mappings":";;AAMA,SAAAA,SAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,gBAAA,EAAAC,YAAA;AACA,SAAAC,iBAAA;AACA,OAAAC,KAAA;AAEA;EACAC,UAAA;IAAAP,SAAA,EAAAA,SAAA;IAAAC,OAAA,EAAAA,OAAA;IAAAC,QAAA,EAAAA,QAAA;IAAAC,gBAAA,EAAAA,gBAAA;IAAAC,YAAA,EAAAA,YAAA;IAAAC,iBAAA,EAAAA;EAAA;EAEAG,gBAAA,WAAAA,iBAAAC,EAAA,EAAAC,IAAA,EAAAC,IAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAP,IAAA;UAAA;YAAAO,QAAA,CAAAP,IAAA;YAAA,OACAL,KAAA,CAAAc,QAAA;UAAA;YACAT,IAAA;UAAA;UAAA;YAAA,OAAAO,QAAA,CAAAG,IAAA;QAAA;MAAA,GAAAN,OAAA;IAAA;EACA;EAEAO,QAAA;IACAC,aAAA,WAAAA,cAAAC,IAAA;MAAA,IAAAC,cAAA;MAAA,IAAAC,MAAA,GAAAF,IAAA,CAAAE,MAAA;MAAA,OAAAA,MAAA,aAAAA,MAAA,gBAAAD,cAAA,GAAAC,MAAA,CAAAC,MAAA,cAAAF,cAAA,uBAAAA,cAAA,CAAAF,aAAA;IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}