{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { VFileInput } from 'vuetify/lib';\nimport { UAlert, UCheckbox } from '../../components';\nexport default {\n  components: {\n    UAlert: UAlert,\n    UCheckbox: UCheckbox,\n    VFileInput: VFileInput\n  },\n  data: function data() {\n    return {\n      settings: null,\n      // keeps settings loaded from a backup file\n      importError: null,\n      // the error on importing/reading a backup file\n\n      // exclude by default `accounts` and `network` from restore\n      exceptionKeys: {\n        accounts: true,\n        network: true\n      }\n    };\n  },\n  computed: {\n    /**\n     * Returns the settings keys that should be excepted from restore\n     * The only available keys are: `accounts` and `network`\n     * @param {Object} vm - vue instance\n     * @param {Object} vm.exceptionKeys - flag true/false for each key\n     * @returns {Array<String>} - the key(s) set as `true`\n     */\n    exceptions: function exceptions(_ref) {\n      var exceptionKeys = _ref.exceptionKeys;\n      return Object.keys(exceptionKeys).filter(function (key) {\n        return exceptionKeys[key];\n      });\n    }\n  },\n  methods: {\n    /**\n     * Framework dialog `action` implementation upon pushing the restored file\n     */\n    action: function action() {\n      var _this = this;\n      if (!this.settings) return;\n\n      // show dialog progress\n      this.$emit('progress-show');\n\n      // pass restore data and callback helper by emitting `restore` event\n      this.$emit('restore', {\n        restoreData: {\n          file: this.settings,\n          exceptions: this.exceptions\n        },\n        cb: function cb(success) {\n          if (success) {\n            _this.$vuntangle.toast.add(_this.$vuntangle.$t('backup_restore_success'));\n          } else {\n            _this.$vuntangle.toast.add(_this.$vuntangle.$t('backup_restore_error'), 'error');\n          }\n          // hide and close dialog\n          _this.$emit('progress-hide');\n          _this.$emit('close');\n        }\n      });\n    },\n    /**\n     * Reads the file contents from file input field\n     * @param {Object} file - the File object\n     */\n    fileHandler: function fileHandler(file) {\n      this.importError = null;\n      this.settings = null;\n      if (!file) return;\n\n      // use FileReader to read the content and bind `this` context\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        this.settings = e.target.result;\n      }.bind(this);\n      reader.readAsDataURL(file);\n    }\n  }\n};","map":{"version":3,"names":["VFileInput","UAlert","UCheckbox","components","data","settings","importError","exceptionKeys","accounts","network","computed","exceptions","_ref","Object","keys","filter","key","methods","action","_this","$emit","restoreData","file","cb","success","$vuntangle","toast","add","$t","fileHandler","reader","FileReader","onload","e","target","result","bind","readAsDataURL"],"sources":["node_modules/vuntangle/src/shared/ApplianceSystem/RestoreBackupDialog.vue"],"sourcesContent":["<template>\n  <div>\n    <p class=\"body-2\">{{ $vuntangle.$t('restore_info') }}</p>\n\n    <!-- backup input file -->\n    <v-file-input\n      outlined\n      dense\n      :label=\"$vuntangle.$t('choose_backup_file')\"\n      :hint=\"settings ? $vuntangle.$t('found_mfw_version', [settings.version]) : null\"\n      persistent-hint\n      @change=\"fileHandler\"\n    />\n\n    <!-- error alert when importing file -->\n    <u-alert v-if=\"importError\" error class=\"mt-4 mb-0\">\n      {{ $vuntangle.$t(importError) }}\n    </u-alert>\n\n    <!-- restore options when backup file is valid -->\n    <div v-if=\"settings\">\n      <p class=\"font-weight-bold mb-1\">{{ $vuntangle.$t('restore_all_settings_except') }}:</p>\n      <div class=\"d-flex\">\n        <u-checkbox\n          v-model=\"exceptionKeys.accounts\"\n          hide-details\n          class=\"my-0 mr-4\"\n          :label=\"$vuntangle.$t('accounts')\"\n          :ripple=\"false\"\n        />\n        <u-checkbox\n          v-model=\"exceptionKeys.network\"\n          hide-details\n          class=\"ma-0\"\n          :label=\"$vuntangle.$t('interfaces')\"\n          :ripple=\"false\"\n        />\n      </div>\n\n      <u-alert info class=\"mt-4 mb-0\">\n        <span v-html=\"$vuntangle.$t('restore_warning')\"></span>\n      </u-alert>\n    </div>\n  </div>\n</template>\n<script>\n  import { VFileInput } from 'vuetify/lib'\n  import { UAlert, UCheckbox } from '../../components'\n\n  export default {\n    components: { UAlert, UCheckbox, VFileInput },\n    data: () => ({\n      settings: null, // keeps settings loaded from a backup file\n      importError: null, // the error on importing/reading a backup file\n\n      // exclude by default `accounts` and `network` from restore\n      exceptionKeys: {\n        accounts: true,\n        network: true,\n      },\n    }),\n\n    computed: {\n      /**\n       * Returns the settings keys that should be excepted from restore\n       * The only available keys are: `accounts` and `network`\n       * @param {Object} vm - vue instance\n       * @param {Object} vm.exceptionKeys - flag true/false for each key\n       * @returns {Array<String>} - the key(s) set as `true`\n       */\n      exceptions: ({ exceptionKeys }) => Object.keys(exceptionKeys).filter(key => exceptionKeys[key]),\n    },\n\n    methods: {\n      /**\n       * Framework dialog `action` implementation upon pushing the restored file\n       */\n      action() {\n        if (!this.settings) return\n\n        // show dialog progress\n        this.$emit('progress-show')\n\n        // pass restore data and callback helper by emitting `restore` event\n        this.$emit('restore', {\n          restoreData: {\n            file: this.settings,\n            exceptions: this.exceptions,\n          },\n          cb: success => {\n            if (success) {\n              this.$vuntangle.toast.add(this.$vuntangle.$t('backup_restore_success'))\n            } else {\n              this.$vuntangle.toast.add(this.$vuntangle.$t('backup_restore_error'), 'error')\n            }\n            // hide and close dialog\n            this.$emit('progress-hide')\n            this.$emit('close')\n          },\n        })\n      },\n\n      /**\n       * Reads the file contents from file input field\n       * @param {Object} file - the File object\n       */\n      fileHandler(file) {\n        this.importError = null\n        this.settings = null\n        if (!file) return\n\n        // use FileReader to read the content and bind `this` context\n        const reader = new FileReader()\n        reader.onload = function (e) {\n          this.settings = e.target.result\n        }.bind(this)\n        reader.readAsDataURL(file)\n      },\n    },\n  }\n</script>\n"],"mappings":";;;;;;AA8CA,SAAAA,UAAA;AACA,SAAAC,MAAA,EAAAC,SAAA;AAEA;EACAC,UAAA;IAAAF,MAAA,EAAAA,MAAA;IAAAC,SAAA,EAAAA,SAAA;IAAAF,UAAA,EAAAA;EAAA;EACAI,IAAA,WAAAA,KAAA;IAAA;MACAC,QAAA;MAAA;MACAC,WAAA;MAAA;;MAEA;MACAC,aAAA;QACAC,QAAA;QACAC,OAAA;MACA;IACA;EAAA;EAEAC,QAAA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC,UAAA,WAAAA,WAAAC,IAAA;MAAA,IAAAL,aAAA,GAAAK,IAAA,CAAAL,aAAA;MAAA,OAAAM,MAAA,CAAAC,IAAA,CAAAP,aAAA,EAAAQ,MAAA,WAAAC,GAAA;QAAA,OAAAT,aAAA,CAAAS,GAAA;MAAA;IAAA;EACA;EAEAC,OAAA;IACA;AACA;AACA;IACAC,MAAA,WAAAA,OAAA;MAAA,IAAAC,KAAA;MACA,UAAAd,QAAA;;MAEA;MACA,KAAAe,KAAA;;MAEA;MACA,KAAAA,KAAA;QACAC,WAAA;UACAC,IAAA,OAAAjB,QAAA;UACAM,UAAA,OAAAA;QACA;QACAY,EAAA,WAAAA,GAAAC,OAAA;UACA,IAAAA,OAAA;YACAL,KAAA,CAAAM,UAAA,CAAAC,KAAA,CAAAC,GAAA,CAAAR,KAAA,CAAAM,UAAA,CAAAG,EAAA;UACA;YACAT,KAAA,CAAAM,UAAA,CAAAC,KAAA,CAAAC,GAAA,CAAAR,KAAA,CAAAM,UAAA,CAAAG,EAAA;UACA;UACA;UACAT,KAAA,CAAAC,KAAA;UACAD,KAAA,CAAAC,KAAA;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;IACAS,WAAA,WAAAA,YAAAP,IAAA;MACA,KAAAhB,WAAA;MACA,KAAAD,QAAA;MACA,KAAAiB,IAAA;;MAEA;MACA,IAAAQ,MAAA,OAAAC,UAAA;MACAD,MAAA,CAAAE,MAAA,aAAAC,CAAA;QACA,KAAA5B,QAAA,GAAA4B,CAAA,CAAAC,MAAA,CAAAC,MAAA;MACA,EAAAC,IAAA;MACAN,MAAA,CAAAO,aAAA,CAAAf,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}