{"version":3,"file":"panel-date-pick.js","sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/panel-date-pick.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      ppNs.b(),\n      dpNs.b(),\n      {\n        'has-sidebar': $slots.sidebar || hasShortcuts,\n        'has-time': showTime,\n      },\n    ]\"\n  >\n    <div :class=\"ppNs.e('body-wrapper')\">\n      <slot name=\"sidebar\" :class=\"ppNs.e('sidebar')\" />\n      <div v-if=\"hasShortcuts\" :class=\"ppNs.e('sidebar')\">\n        <button\n          v-for=\"(shortcut, key) in shortcuts\"\n          :key=\"key\"\n          type=\"button\"\n          :class=\"ppNs.e('shortcut')\"\n          @click=\"handleShortcutClick(shortcut)\"\n        >\n          {{ shortcut.text }}\n        </button>\n      </div>\n      <div :class=\"ppNs.e('body')\">\n        <div v-if=\"showTime\" :class=\"dpNs.e('time-header')\">\n          <span :class=\"dpNs.e('editor-wrap')\">\n            <el-input\n              :placeholder=\"t('el.datepicker.selectDate')\"\n              :model-value=\"visibleDate\"\n              size=\"small\"\n              :validate-event=\"false\"\n              @input=\"(val) => (userInputDate = val)\"\n              @change=\"handleVisibleDateChange\"\n            />\n          </span>\n          <span\n            v-click-outside=\"handleTimePickClose\"\n            :class=\"dpNs.e('editor-wrap')\"\n          >\n            <el-input\n              :placeholder=\"t('el.datepicker.selectTime')\"\n              :model-value=\"visibleTime\"\n              size=\"small\"\n              :validate-event=\"false\"\n              @focus=\"onTimePickerInputFocus\"\n              @input=\"(val) => (userInputTime = val)\"\n              @change=\"handleVisibleTimeChange\"\n            />\n            <time-pick-panel\n              :visible=\"timePickerVisible\"\n              :format=\"timeFormat\"\n              :parsed-value=\"innerDate\"\n              @pick=\"handleTimePick\"\n            />\n          </span>\n        </div>\n        <div\n          v-show=\"currentView !== 'time'\"\n          :class=\"[\n            dpNs.e('header'),\n            (currentView === 'year' || currentView === 'month') &&\n              dpNs.e('header--bordered'),\n          ]\"\n        >\n          <span :class=\"dpNs.e('prev-btn')\">\n            <button\n              type=\"button\"\n              :aria-label=\"t(`el.datepicker.prevYear`)\"\n              class=\"d-arrow-left\"\n              :class=\"ppNs.e('icon-btn')\"\n              @click=\"moveByYear(false)\"\n            >\n              <slot name=\"prev-year\">\n                <el-icon><d-arrow-left /></el-icon>\n              </slot>\n            </button>\n            <button\n              v-show=\"currentView === 'date'\"\n              type=\"button\"\n              :aria-label=\"t(`el.datepicker.prevMonth`)\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"arrow-left\"\n              @click=\"moveByMonth(false)\"\n            >\n              <slot name=\"prev-month\">\n                <el-icon><arrow-left /></el-icon>\n              </slot>\n            </button>\n          </span>\n          <span\n            role=\"button\"\n            :class=\"dpNs.e('header-label')\"\n            aria-live=\"polite\"\n            tabindex=\"0\"\n            @keydown.enter=\"showPicker('year')\"\n            @click=\"showPicker('year')\"\n            >{{ yearLabel }}</span\n          >\n          <span\n            v-show=\"currentView === 'date'\"\n            role=\"button\"\n            aria-live=\"polite\"\n            tabindex=\"0\"\n            :class=\"[\n              dpNs.e('header-label'),\n              { active: currentView === 'month' },\n            ]\"\n            @keydown.enter=\"showPicker('month')\"\n            @click=\"showPicker('month')\"\n            >{{ t(`el.datepicker.month${month + 1}`) }}</span\n          >\n          <span :class=\"dpNs.e('next-btn')\">\n            <button\n              v-show=\"currentView === 'date'\"\n              type=\"button\"\n              :aria-label=\"t(`el.datepicker.nextMonth`)\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"arrow-right\"\n              @click=\"moveByMonth(true)\"\n            >\n              <slot name=\"next-month\">\n                <el-icon><arrow-right /></el-icon>\n              </slot>\n            </button>\n            <button\n              type=\"button\"\n              :aria-label=\"t(`el.datepicker.nextYear`)\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"d-arrow-right\"\n              @click=\"moveByYear(true)\"\n            >\n              <slot name=\"next-year\">\n                <el-icon><d-arrow-right /></el-icon>\n              </slot>\n            </button>\n          </span>\n        </div>\n        <div :class=\"ppNs.e('content')\" @keydown=\"handleKeydownTable\">\n          <date-table\n            v-if=\"currentView === 'date'\"\n            ref=\"currentViewRef\"\n            :selection-mode=\"selectionMode\"\n            :date=\"innerDate\"\n            :parsed-value=\"parsedValue\"\n            :disabled-date=\"disabledDate\"\n            :cell-class-name=\"cellClassName\"\n            @pick=\"handleDatePick\"\n          />\n          <year-table\n            v-if=\"currentView === 'year'\"\n            ref=\"currentViewRef\"\n            :selection-mode=\"selectionMode\"\n            :date=\"innerDate\"\n            :disabled-date=\"disabledDate\"\n            :parsed-value=\"parsedValue\"\n            @pick=\"handleYearPick\"\n          />\n          <month-table\n            v-if=\"currentView === 'month'\"\n            ref=\"currentViewRef\"\n            :selection-mode=\"selectionMode\"\n            :date=\"innerDate\"\n            :parsed-value=\"parsedValue\"\n            :disabled-date=\"disabledDate\"\n            @pick=\"handleMonthPick\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-show=\"footerVisible\" :class=\"ppNs.e('footer')\">\n      <el-button\n        v-show=\"!isMultipleType && showNow\"\n        text\n        size=\"small\"\n        :class=\"ppNs.e('link-btn')\"\n        :disabled=\"disabledNow\"\n        @click=\"changeToNow\"\n      >\n        {{ t('el.datepicker.now') }}\n      </el-button>\n      <el-button\n        plain\n        size=\"small\"\n        :class=\"ppNs.e('link-btn')\"\n        :disabled=\"disabledConfirm\"\n        @click=\"onConfirm\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  inject,\n  nextTick,\n  ref,\n  toRef,\n  useAttrs,\n  useSlots,\n  watch,\n} from 'vue'\nimport dayjs from 'dayjs'\nimport ElButton from '@element-plus/components/button'\nimport { ClickOutside as vClickOutside } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport {\n  TimePickPanel,\n  extractDateFormat,\n  extractTimeFormat,\n} from '@element-plus/components/time-picker'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { isArray, isFunction } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport {\n  ArrowLeft,\n  ArrowRight,\n  DArrowLeft,\n  DArrowRight,\n} from '@element-plus/icons-vue'\nimport { TOOLTIP_INJECTION_KEY } from '@element-plus/components/tooltip'\nimport { panelDatePickProps } from '../props/panel-date-pick'\nimport { getValidDateOfMonth, getValidDateOfYear } from '../utils'\nimport DateTable from './basic-date-table.vue'\nimport MonthTable from './basic-month-table.vue'\nimport YearTable from './basic-year-table.vue'\n\nimport type { SetupContext } from 'vue'\nimport type { ConfigType, Dayjs } from 'dayjs'\nimport type { PanelDatePickProps } from '../props/panel-date-pick'\nimport type {\n  DateTableEmits,\n  DatesPickerEmits,\n  MonthsPickerEmits,\n  WeekPickerEmits,\n  YearsPickerEmits,\n} from '../props/basic-date-table'\n\ntype DatePickType = PanelDatePickProps['type']\n// todo\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst timeWithinRange = (_: ConfigType, __: any, ___: string) => true\nconst props = defineProps(panelDatePickProps)\nconst contextEmit = defineEmits(['pick', 'set-picker-option', 'panel-change'])\nconst ppNs = useNamespace('picker-panel')\nconst dpNs = useNamespace('date-picker')\nconst attrs = useAttrs()\nconst slots = useSlots()\n\nconst { t, lang } = useLocale()\nconst pickerBase = inject('EP_PICKER_BASE') as any\nconst popper = inject(TOOLTIP_INJECTION_KEY)\nconst { shortcuts, disabledDate, cellClassName, defaultTime } = pickerBase.props\nconst defaultValue = toRef(pickerBase.props, 'defaultValue')\n\nconst currentViewRef = ref<{ focus: () => void }>()\n\nconst innerDate = ref(dayjs().locale(lang.value))\n\nconst isChangeToNow = ref(false)\n\nlet isShortcut = false\n\nconst defaultTimeD = computed(() => {\n  return dayjs(defaultTime).locale(lang.value)\n})\n\nconst month = computed(() => {\n  return innerDate.value.month()\n})\n\nconst year = computed(() => {\n  return innerDate.value.year()\n})\n\nconst selectableRange = ref([])\nconst userInputDate = ref<string | null>(null)\nconst userInputTime = ref<string | null>(null)\n// todo update to disableHour\nconst checkDateWithinRange = (date: ConfigType) => {\n  return selectableRange.value.length > 0\n    ? timeWithinRange(date, selectableRange.value, props.format || 'HH:mm:ss')\n    : true\n}\nconst formatEmit = (emitDayjs: Dayjs) => {\n  if (\n    defaultTime &&\n    !visibleTime.value &&\n    !isChangeToNow.value &&\n    !isShortcut\n  ) {\n    return defaultTimeD.value\n      .year(emitDayjs.year())\n      .month(emitDayjs.month())\n      .date(emitDayjs.date())\n  }\n  if (showTime.value) return emitDayjs.millisecond(0)\n  return emitDayjs.startOf('day')\n}\nconst emit = (value: Dayjs | Dayjs[], ...args: any[]) => {\n  if (!value) {\n    contextEmit('pick', value, ...args)\n  } else if (isArray(value)) {\n    const dates = value.map(formatEmit)\n    contextEmit('pick', dates, ...args)\n  } else {\n    contextEmit('pick', formatEmit(value), ...args)\n  }\n  userInputDate.value = null\n  userInputTime.value = null\n  isChangeToNow.value = false\n  isShortcut = false\n}\nconst handleDatePick = async (value: DateTableEmits, keepOpen?: boolean) => {\n  if (selectionMode.value === 'date') {\n    value = value as Dayjs\n    let newDate = props.parsedValue\n      ? (props.parsedValue as Dayjs)\n          .year(value.year())\n          .month(value.month())\n          .date(value.date())\n      : value\n    // change default time while out of selectableRange\n    if (!checkDateWithinRange(newDate)) {\n      newDate = (selectableRange.value[0][0] as Dayjs)\n        .year(value.year())\n        .month(value.month())\n        .date(value.date())\n    }\n    innerDate.value = newDate\n    emit(newDate, showTime.value || keepOpen)\n    // fix: https://github.com/element-plus/element-plus/issues/14728\n    if (props.type === 'datetime') {\n      await nextTick()\n      handleFocusPicker()\n    }\n  } else if (selectionMode.value === 'week') {\n    emit((value as WeekPickerEmits).date)\n  } else if (selectionMode.value === 'dates') {\n    emit(value as DatesPickerEmits, true) // set true to keep panel open\n  }\n}\n\nconst moveByMonth = (forward: boolean) => {\n  const action = forward ? 'add' : 'subtract'\n  innerDate.value = innerDate.value[action](1, 'month')\n  handlePanelChange('month')\n}\n\nconst moveByYear = (forward: boolean) => {\n  const currentDate = innerDate.value\n  const action = forward ? 'add' : 'subtract'\n\n  innerDate.value =\n    currentView.value === 'year'\n      ? currentDate[action](10, 'year')\n      : currentDate[action](1, 'year')\n\n  handlePanelChange('year')\n}\n\nconst currentView = ref('date')\n\nconst yearLabel = computed(() => {\n  const yearTranslation = t('el.datepicker.year')\n  if (currentView.value === 'year') {\n    const startYear = Math.floor(year.value / 10) * 10\n    if (yearTranslation) {\n      return `${startYear} ${yearTranslation} - ${\n        startYear + 9\n      } ${yearTranslation}`\n    }\n    return `${startYear} - ${startYear + 9}`\n  }\n  return `${year.value} ${yearTranslation}`\n})\n\ntype Shortcut = {\n  value: (() => Dayjs) | Dayjs\n  onClick?: (ctx: Omit<SetupContext, 'expose'>) => void\n}\n\nconst handleShortcutClick = (shortcut: Shortcut) => {\n  const shortcutValue = isFunction(shortcut.value)\n    ? shortcut.value()\n    : shortcut.value\n  if (shortcutValue) {\n    isShortcut = true\n    emit(dayjs(shortcutValue).locale(lang.value))\n    return\n  }\n  if (shortcut.onClick) {\n    shortcut.onClick({\n      attrs,\n      slots,\n      emit: contextEmit as SetupContext['emit'],\n    })\n  }\n}\n\nconst selectionMode = computed<DatePickType>(() => {\n  const { type } = props\n  if (['week', 'month', 'months', 'year', 'years', 'dates'].includes(type))\n    return type\n  return 'date' as DatePickType\n})\n\nconst isMultipleType = computed(() => {\n  return (\n    selectionMode.value === 'dates' ||\n    selectionMode.value === 'months' ||\n    selectionMode.value === 'years'\n  )\n})\n\nconst keyboardMode = computed<string>(() => {\n  return selectionMode.value === 'date'\n    ? currentView.value\n    : selectionMode.value\n})\n\nconst hasShortcuts = computed(() => !!shortcuts.length)\n\nconst handleMonthPick = async (\n  month: number | MonthsPickerEmits,\n  keepOpen?: boolean\n) => {\n  if (selectionMode.value === 'month') {\n    innerDate.value = getValidDateOfMonth(\n      innerDate.value.year(),\n      month as number,\n      lang.value,\n      disabledDate\n    )\n    emit(innerDate.value, false)\n  } else if (selectionMode.value === 'months') {\n    emit(month as MonthsPickerEmits, keepOpen ?? true)\n  } else {\n    innerDate.value = getValidDateOfMonth(\n      innerDate.value.year(),\n      month as number,\n      lang.value,\n      disabledDate\n    )\n    currentView.value = 'date'\n    if (['month', 'year', 'date', 'week'].includes(selectionMode.value)) {\n      emit(innerDate.value, true)\n      await nextTick()\n      handleFocusPicker()\n    }\n  }\n  handlePanelChange('month')\n}\n\nconst handleYearPick = async (\n  year: number | YearsPickerEmits,\n  keepOpen?: boolean\n) => {\n  if (selectionMode.value === 'year') {\n    const data = innerDate.value.startOf('year').year(year as number)\n    innerDate.value = getValidDateOfYear(data, lang.value, disabledDate)\n    emit(innerDate.value, false)\n  } else if (selectionMode.value === 'years') {\n    emit(year as YearsPickerEmits, keepOpen ?? true)\n  } else {\n    const data = innerDate.value.year(year as number)\n    innerDate.value = getValidDateOfYear(data, lang.value, disabledDate)\n    currentView.value = 'month'\n    if (['month', 'year', 'date', 'week'].includes(selectionMode.value)) {\n      emit(innerDate.value, true)\n      await nextTick()\n      handleFocusPicker()\n    }\n  }\n  handlePanelChange('year')\n}\n\nconst showPicker = async (view: 'month' | 'year') => {\n  currentView.value = view\n  await nextTick()\n  handleFocusPicker()\n}\n\nconst showTime = computed(\n  () => props.type === 'datetime' || props.type === 'datetimerange'\n)\n\nconst footerVisible = computed(() => {\n  const showDateFooter = showTime.value || selectionMode.value === 'dates'\n  const showYearFooter = selectionMode.value === 'years'\n  const showMonthFooter = selectionMode.value === 'months'\n  const isDateView = currentView.value === 'date'\n  const isYearView = currentView.value === 'year'\n  const isMonthView = currentView.value === 'month'\n  return (\n    (showDateFooter && isDateView) ||\n    (showYearFooter && isYearView) ||\n    (showMonthFooter && isMonthView)\n  )\n})\n\nconst disabledConfirm = computed(() => {\n  if (!disabledDate) return false\n  if (!props.parsedValue) return true\n  if (isArray(props.parsedValue)) {\n    return disabledDate(props.parsedValue[0].toDate())\n  }\n  return disabledDate(props.parsedValue.toDate())\n})\nconst onConfirm = () => {\n  if (isMultipleType.value) {\n    emit(props.parsedValue as Dayjs[])\n  } else {\n    // deal with the scenario where: user opens the date time picker, then confirm without doing anything\n    let result = props.parsedValue as Dayjs\n    if (!result) {\n      const defaultTimeD = dayjs(defaultTime).locale(lang.value)\n      const defaultValueD = getDefaultValue()\n      result = defaultTimeD\n        .year(defaultValueD.year())\n        .month(defaultValueD.month())\n        .date(defaultValueD.date())\n    }\n    innerDate.value = result\n    emit(result)\n  }\n}\n\nconst disabledNow = computed(() => {\n  if (!disabledDate) return false\n  return disabledDate(dayjs().locale(lang.value).toDate())\n})\nconst changeToNow = () => {\n  // NOTE: not a permanent solution\n  //       consider disable \"now\" button in the future\n  const now = dayjs().locale(lang.value)\n  const nowDate = now.toDate()\n  isChangeToNow.value = true\n  if (\n    (!disabledDate || !disabledDate(nowDate)) &&\n    checkDateWithinRange(nowDate)\n  ) {\n    innerDate.value = dayjs().locale(lang.value)\n    emit(innerDate.value)\n  }\n}\n\nconst timeFormat = computed(() => {\n  return props.timeFormat || extractTimeFormat(props.format)\n})\n\nconst dateFormat = computed(() => {\n  return props.dateFormat || extractDateFormat(props.format)\n})\n\nconst visibleTime = computed(() => {\n  if (userInputTime.value) return userInputTime.value\n  if (!props.parsedValue && !defaultValue.value) return\n  return ((props.parsedValue || innerDate.value) as Dayjs).format(\n    timeFormat.value\n  )\n})\n\nconst visibleDate = computed(() => {\n  if (userInputDate.value) return userInputDate.value\n  if (!props.parsedValue && !defaultValue.value) return\n  return ((props.parsedValue || innerDate.value) as Dayjs).format(\n    dateFormat.value\n  )\n})\n\nconst timePickerVisible = ref(false)\nconst onTimePickerInputFocus = () => {\n  timePickerVisible.value = true\n}\nconst handleTimePickClose = () => {\n  timePickerVisible.value = false\n}\n\nconst getUnits = (date: Dayjs) => {\n  return {\n    hour: date.hour(),\n    minute: date.minute(),\n    second: date.second(),\n    year: date.year(),\n    month: date.month(),\n    date: date.date(),\n  }\n}\n\nconst handleTimePick = (value: Dayjs, visible: boolean, first: boolean) => {\n  const { hour, minute, second } = getUnits(value)\n  const newDate = props.parsedValue\n    ? (props.parsedValue as Dayjs).hour(hour).minute(minute).second(second)\n    : value\n  innerDate.value = newDate\n  emit(innerDate.value, true)\n  if (!first) {\n    timePickerVisible.value = visible\n  }\n}\n\nconst handleVisibleTimeChange = (value: string) => {\n  const newDate = dayjs(value, timeFormat.value).locale(lang.value)\n  if (newDate.isValid() && checkDateWithinRange(newDate)) {\n    const { year, month, date } = getUnits(innerDate.value)\n    innerDate.value = newDate.year(year).month(month).date(date)\n    userInputTime.value = null\n    timePickerVisible.value = false\n    emit(innerDate.value, true)\n  }\n}\n\nconst handleVisibleDateChange = (value: string) => {\n  const newDate = dayjs(value, dateFormat.value).locale(lang.value)\n  if (newDate.isValid()) {\n    if (disabledDate && disabledDate(newDate.toDate())) {\n      return\n    }\n    const { hour, minute, second } = getUnits(innerDate.value)\n    innerDate.value = newDate.hour(hour).minute(minute).second(second)\n    userInputDate.value = null\n    emit(innerDate.value, true)\n  }\n}\n\nconst isValidValue = (date: unknown) => {\n  return (\n    dayjs.isDayjs(date) &&\n    date.isValid() &&\n    (disabledDate ? !disabledDate(date.toDate()) : true)\n  )\n}\n\nconst formatToString = (value: Dayjs | Dayjs[]) => {\n  return isArray(value)\n    ? (value as Dayjs[]).map((_) => _.format(props.format))\n    : (value as Dayjs).format(props.format)\n}\n\nconst parseUserInput = (value: Dayjs) => {\n  return dayjs(value, props.format).locale(lang.value)\n}\n\nconst getDefaultValue = () => {\n  const parseDate = dayjs(defaultValue.value).locale(lang.value)\n  if (!defaultValue.value) {\n    const defaultTimeDValue = defaultTimeD.value\n    return dayjs()\n      .hour(defaultTimeDValue.hour())\n      .minute(defaultTimeDValue.minute())\n      .second(defaultTimeDValue.second())\n      .locale(lang.value)\n  }\n  return parseDate\n}\n\nconst handleFocusPicker = async () => {\n  if (['week', 'month', 'year', 'date'].includes(selectionMode.value)) {\n    currentViewRef.value?.focus()\n    if (selectionMode.value === 'week') {\n      handleKeyControl(EVENT_CODE.down)\n    }\n  }\n}\n\nconst handleKeydownTable = (event: KeyboardEvent) => {\n  const { code } = event\n  const validCode = [\n    EVENT_CODE.up,\n    EVENT_CODE.down,\n    EVENT_CODE.left,\n    EVENT_CODE.right,\n    EVENT_CODE.home,\n    EVENT_CODE.end,\n    EVENT_CODE.pageUp,\n    EVENT_CODE.pageDown,\n  ]\n  if (validCode.includes(code)) {\n    handleKeyControl(code)\n    event.stopPropagation()\n    event.preventDefault()\n  }\n  if (\n    [EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.numpadEnter].includes(\n      code\n    ) &&\n    userInputDate.value === null &&\n    userInputTime.value === null\n  ) {\n    event.preventDefault()\n    emit(innerDate.value, false)\n  }\n}\n\nconst handleKeyControl = (code: string) => {\n  type KeyControlMappingCallableOffset = (date: Date, step?: number) => number\n  type KeyControl = {\n    [key: string]:\n      | number\n      | KeyControlMappingCallableOffset\n      | ((date: Date, step: number) => any)\n    offset: (date: Date, step: number) => any\n  }\n  interface KeyControlMapping {\n    [key: string]: KeyControl\n  }\n\n  const { up, down, left, right, home, end, pageUp, pageDown } = EVENT_CODE\n  const mapping: KeyControlMapping = {\n    year: {\n      [up]: -4,\n      [down]: 4,\n      [left]: -1,\n      [right]: 1,\n      offset: (date: Date, step: number) =>\n        date.setFullYear(date.getFullYear() + step),\n    },\n    month: {\n      [up]: -4,\n      [down]: 4,\n      [left]: -1,\n      [right]: 1,\n      offset: (date: Date, step: number) =>\n        date.setMonth(date.getMonth() + step),\n    },\n    week: {\n      [up]: -1,\n      [down]: 1,\n      [left]: -1,\n      [right]: 1,\n      offset: (date: Date, step: number) =>\n        date.setDate(date.getDate() + step * 7),\n    },\n    date: {\n      [up]: -7,\n      [down]: 7,\n      [left]: -1,\n      [right]: 1,\n      [home]: (date: Date) => -date.getDay(),\n      [end]: (date: Date) => -date.getDay() + 6,\n      [pageUp]: (date: Date) =>\n        -new Date(date.getFullYear(), date.getMonth(), 0).getDate(),\n      [pageDown]: (date: Date) =>\n        new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate(),\n      offset: (date: Date, step: number) => date.setDate(date.getDate() + step),\n    },\n  }\n\n  const newDate = innerDate.value.toDate()\n  while (Math.abs(innerDate.value.diff(newDate, 'year', true)) < 1) {\n    const map = mapping[keyboardMode.value]\n    if (!map) return\n    map.offset(\n      newDate,\n      isFunction(map[code])\n        ? (map[code] as unknown as KeyControlMappingCallableOffset)(newDate)\n        : (map[code] as number) ?? 0\n    )\n    if (disabledDate && disabledDate(newDate)) {\n      break\n    }\n    const result = dayjs(newDate).locale(lang.value)\n    innerDate.value = result\n    contextEmit('pick', result, true)\n    break\n  }\n}\n\nconst handlePanelChange = (mode: 'month' | 'year') => {\n  contextEmit('panel-change', innerDate.value.toDate(), mode, currentView.value)\n}\n\nwatch(\n  () => selectionMode.value,\n  (val) => {\n    if (['month', 'year'].includes(val)) {\n      currentView.value = val\n      return\n    } else if (val === 'years') {\n      currentView.value = 'year'\n      return\n    } else if (val === 'months') {\n      currentView.value = 'month'\n      return\n    }\n    currentView.value = 'date'\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => currentView.value,\n  () => {\n    popper?.updatePopper()\n  }\n)\n\nwatch(\n  () => defaultValue.value,\n  (val) => {\n    if (val) {\n      innerDate.value = getDefaultValue()\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => props.parsedValue,\n  (val) => {\n    if (val) {\n      if (isMultipleType.value) return\n      if (isArray(val)) return\n      innerDate.value = val\n    } else {\n      innerDate.value = getDefaultValue()\n    }\n  },\n  { immediate: true }\n)\n\ncontextEmit('set-picker-option', ['isValidValue', isValidValue])\ncontextEmit('set-picker-option', ['formatToString', formatToString])\ncontextEmit('set-picker-option', ['parseUserInput', parseUserInput])\ncontextEmit('set-picker-option', ['handleFocusPicker', handleFocusPicker])\n</script>\n"],"names":["useNamespace","useAttrs","useSlots","useLocale","inject","TOOLTIP_INJECTION_KEY","toRef","ref","dayjs","computed","isArray","nextTick","isFunction","month","getValidDateOfMonth","getValidDateOfYear","year","extractTimeFormat","extractDateFormat","EVENT_CODE","watch","_openBlock","_normalizeClass","_unref","_createElementVNode","_renderSlot","_createElementBlock","_Fragment","_renderList"],"mappings":"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"}